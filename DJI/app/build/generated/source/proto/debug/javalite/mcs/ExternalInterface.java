// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExternalInterface.proto

package mcs;

public final class ExternalInterface {
  private ExternalInterface() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code mcs.AckType_Enum}
   */
  public enum AckType_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ACK_TYPE_NOT_IN_USE = 0;</code>
     */
    ACK_TYPE_NOT_IN_USE(0),
    /**
     * <code>ACK_ACCEPT = 1;</code>
     */
    ACK_ACCEPT(1),
    /**
     * <code>ACK_REJECT = 2;</code>
     */
    ACK_REJECT(2),
    /**
     * <code>ACK_OK = 3;</code>
     */
    ACK_OK(3),
    /**
     * <code>ACK_WARNING = 4;</code>
     */
    ACK_WARNING(4),
    /**
     * <code>ACK_ERROR = 5;</code>
     */
    ACK_ERROR(5),
    /**
     * <code>ACK_TIMEOUT = 6;</code>
     */
    ACK_TIMEOUT(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACK_TYPE_NOT_IN_USE = 0;</code>
     */
    public static final int ACK_TYPE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>ACK_ACCEPT = 1;</code>
     */
    public static final int ACK_ACCEPT_VALUE = 1;
    /**
     * <code>ACK_REJECT = 2;</code>
     */
    public static final int ACK_REJECT_VALUE = 2;
    /**
     * <code>ACK_OK = 3;</code>
     */
    public static final int ACK_OK_VALUE = 3;
    /**
     * <code>ACK_WARNING = 4;</code>
     */
    public static final int ACK_WARNING_VALUE = 4;
    /**
     * <code>ACK_ERROR = 5;</code>
     */
    public static final int ACK_ERROR_VALUE = 5;
    /**
     * <code>ACK_TIMEOUT = 6;</code>
     */
    public static final int ACK_TIMEOUT_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AckType_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static AckType_Enum forNumber(int value) {
      switch (value) {
        case 0: return ACK_TYPE_NOT_IN_USE;
        case 1: return ACK_ACCEPT;
        case 2: return ACK_REJECT;
        case 3: return ACK_OK;
        case 4: return ACK_WARNING;
        case 5: return ACK_ERROR;
        case 6: return ACK_TIMEOUT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AckType_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AckType_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AckType_Enum>() {
            public AckType_Enum findValueByNumber(int number) {
              return AckType_Enum.forNumber(number);
            }
          };

    private final int value;

    private AckType_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.AckType_Enum)
  }

  /**
   * Protobuf enum {@code mcs.Affiliation_Enum}
   */
  public enum Affiliation_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>AFFILIATION_NOT_IN_USE = 0;</code>
     */
    AFFILIATION_NOT_IN_USE(0),
    /**
     * <code>AFFILIATION_PENDING = 80;</code>
     */
    AFFILIATION_PENDING(80),
    /**
     * <code>AFFILIATION_UNKNOWN = 85;</code>
     */
    AFFILIATION_UNKNOWN(85),
    /**
     * <code>AFFILIATION_ASSUMED_FRIEND = 65;</code>
     */
    AFFILIATION_ASSUMED_FRIEND(65),
    /**
     * <code>AFFILIATION_FRIEND = 70;</code>
     */
    AFFILIATION_FRIEND(70),
    /**
     * <code>AFFILIATION_NEUTRAL = 78;</code>
     */
    AFFILIATION_NEUTRAL(78),
    /**
     * <code>AFFILIATION_SUSPECT = 83;</code>
     */
    AFFILIATION_SUSPECT(83),
    /**
     * <code>AFFILIATION_HOSTILE = 72;</code>
     */
    AFFILIATION_HOSTILE(72),
    /**
     * <code>AFFILIATION_EXERCISE_PENDING = 71;</code>
     */
    AFFILIATION_EXERCISE_PENDING(71),
    /**
     * <code>AFFILIATION_EXERCISE_UNKNOWN = 87;</code>
     */
    AFFILIATION_EXERCISE_UNKNOWN(87),
    /**
     * <code>AFFILIATION_EXERCISE_ASSUMED_FRIEND = 77;</code>
     */
    AFFILIATION_EXERCISE_ASSUMED_FRIEND(77),
    /**
     * <code>AFFILIATION_EXERCISE_FRIEND = 68;</code>
     */
    AFFILIATION_EXERCISE_FRIEND(68),
    /**
     * <code>AFFILIATION_EXERCISE_NEUTRAL = 76;</code>
     */
    AFFILIATION_EXERCISE_NEUTRAL(76),
    /**
     * <code>AFFILIATION_JOKER = 74;</code>
     */
    AFFILIATION_JOKER(74),
    /**
     * <code>AFFILIATION_FAKER = 75;</code>
     */
    AFFILIATION_FAKER(75),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AFFILIATION_NOT_IN_USE = 0;</code>
     */
    public static final int AFFILIATION_NOT_IN_USE_VALUE = 0;
    /**
     * <code>AFFILIATION_PENDING = 80;</code>
     */
    public static final int AFFILIATION_PENDING_VALUE = 80;
    /**
     * <code>AFFILIATION_UNKNOWN = 85;</code>
     */
    public static final int AFFILIATION_UNKNOWN_VALUE = 85;
    /**
     * <code>AFFILIATION_ASSUMED_FRIEND = 65;</code>
     */
    public static final int AFFILIATION_ASSUMED_FRIEND_VALUE = 65;
    /**
     * <code>AFFILIATION_FRIEND = 70;</code>
     */
    public static final int AFFILIATION_FRIEND_VALUE = 70;
    /**
     * <code>AFFILIATION_NEUTRAL = 78;</code>
     */
    public static final int AFFILIATION_NEUTRAL_VALUE = 78;
    /**
     * <code>AFFILIATION_SUSPECT = 83;</code>
     */
    public static final int AFFILIATION_SUSPECT_VALUE = 83;
    /**
     * <code>AFFILIATION_HOSTILE = 72;</code>
     */
    public static final int AFFILIATION_HOSTILE_VALUE = 72;
    /**
     * <code>AFFILIATION_EXERCISE_PENDING = 71;</code>
     */
    public static final int AFFILIATION_EXERCISE_PENDING_VALUE = 71;
    /**
     * <code>AFFILIATION_EXERCISE_UNKNOWN = 87;</code>
     */
    public static final int AFFILIATION_EXERCISE_UNKNOWN_VALUE = 87;
    /**
     * <code>AFFILIATION_EXERCISE_ASSUMED_FRIEND = 77;</code>
     */
    public static final int AFFILIATION_EXERCISE_ASSUMED_FRIEND_VALUE = 77;
    /**
     * <code>AFFILIATION_EXERCISE_FRIEND = 68;</code>
     */
    public static final int AFFILIATION_EXERCISE_FRIEND_VALUE = 68;
    /**
     * <code>AFFILIATION_EXERCISE_NEUTRAL = 76;</code>
     */
    public static final int AFFILIATION_EXERCISE_NEUTRAL_VALUE = 76;
    /**
     * <code>AFFILIATION_JOKER = 74;</code>
     */
    public static final int AFFILIATION_JOKER_VALUE = 74;
    /**
     * <code>AFFILIATION_FAKER = 75;</code>
     */
    public static final int AFFILIATION_FAKER_VALUE = 75;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Affiliation_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static Affiliation_Enum forNumber(int value) {
      switch (value) {
        case 0: return AFFILIATION_NOT_IN_USE;
        case 80: return AFFILIATION_PENDING;
        case 85: return AFFILIATION_UNKNOWN;
        case 65: return AFFILIATION_ASSUMED_FRIEND;
        case 70: return AFFILIATION_FRIEND;
        case 78: return AFFILIATION_NEUTRAL;
        case 83: return AFFILIATION_SUSPECT;
        case 72: return AFFILIATION_HOSTILE;
        case 71: return AFFILIATION_EXERCISE_PENDING;
        case 87: return AFFILIATION_EXERCISE_UNKNOWN;
        case 77: return AFFILIATION_EXERCISE_ASSUMED_FRIEND;
        case 68: return AFFILIATION_EXERCISE_FRIEND;
        case 76: return AFFILIATION_EXERCISE_NEUTRAL;
        case 74: return AFFILIATION_JOKER;
        case 75: return AFFILIATION_FAKER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Affiliation_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Affiliation_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Affiliation_Enum>() {
            public Affiliation_Enum findValueByNumber(int number) {
              return Affiliation_Enum.forNumber(number);
            }
          };

    private final int value;

    private Affiliation_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.Affiliation_Enum)
  }

  /**
   * Protobuf enum {@code mcs.AssetAlertType_Enum}
   */
  public enum AssetAlertType_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ASSET_ALERT_TYPE_NOT_IN_USE = 0;</code>
     */
    ASSET_ALERT_TYPE_NOT_IN_USE(0),
    /**
     * <code>ASSET_ALERT_ATTRITED = 1;</code>
     */
    ASSET_ALERT_ATTRITED(1),
    /**
     * <code>ASSET_ALERT_COMPROMISED = 2;</code>
     */
    ASSET_ALERT_COMPROMISED(2),
    /**
     * <code>ASSET_ALERT_COMMS_LOST = 3;</code>
     */
    ASSET_ALERT_COMMS_LOST(3),
    /**
     * <code>ASSET_ALERT_COMMS_RESTORED = 4;</code>
     */
    ASSET_ALERT_COMMS_RESTORED(4),
    /**
     * <code>ASSET_ALERT_NOT_ATTRITED = 5;</code>
     */
    ASSET_ALERT_NOT_ATTRITED(5),
    /**
     * <code>ASSET_ALERT_NOT_COMPROMISED = 6;</code>
     */
    ASSET_ALERT_NOT_COMPROMISED(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ASSET_ALERT_TYPE_NOT_IN_USE = 0;</code>
     */
    public static final int ASSET_ALERT_TYPE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>ASSET_ALERT_ATTRITED = 1;</code>
     */
    public static final int ASSET_ALERT_ATTRITED_VALUE = 1;
    /**
     * <code>ASSET_ALERT_COMPROMISED = 2;</code>
     */
    public static final int ASSET_ALERT_COMPROMISED_VALUE = 2;
    /**
     * <code>ASSET_ALERT_COMMS_LOST = 3;</code>
     */
    public static final int ASSET_ALERT_COMMS_LOST_VALUE = 3;
    /**
     * <code>ASSET_ALERT_COMMS_RESTORED = 4;</code>
     */
    public static final int ASSET_ALERT_COMMS_RESTORED_VALUE = 4;
    /**
     * <code>ASSET_ALERT_NOT_ATTRITED = 5;</code>
     */
    public static final int ASSET_ALERT_NOT_ATTRITED_VALUE = 5;
    /**
     * <code>ASSET_ALERT_NOT_COMPROMISED = 6;</code>
     */
    public static final int ASSET_ALERT_NOT_COMPROMISED_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AssetAlertType_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static AssetAlertType_Enum forNumber(int value) {
      switch (value) {
        case 0: return ASSET_ALERT_TYPE_NOT_IN_USE;
        case 1: return ASSET_ALERT_ATTRITED;
        case 2: return ASSET_ALERT_COMPROMISED;
        case 3: return ASSET_ALERT_COMMS_LOST;
        case 4: return ASSET_ALERT_COMMS_RESTORED;
        case 5: return ASSET_ALERT_NOT_ATTRITED;
        case 6: return ASSET_ALERT_NOT_COMPROMISED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AssetAlertType_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AssetAlertType_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AssetAlertType_Enum>() {
            public AssetAlertType_Enum findValueByNumber(int number) {
              return AssetAlertType_Enum.forNumber(number);
            }
          };

    private final int value;

    private AssetAlertType_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.AssetAlertType_Enum)
  }

  /**
   * Protobuf enum {@code mcs.AssetHealth_Enum}
   */
  public enum AssetHealth_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ASSET_HEALTH_NOT_IN_USE = 0;</code>
     */
    ASSET_HEALTH_NOT_IN_USE(0),
    /**
     * <code>ASSET_HEALTH_NORMAL = 1;</code>
     */
    ASSET_HEALTH_NORMAL(1),
    /**
     * <code>ASSET_HEALTH_IMMOBILE = 2;</code>
     */
    ASSET_HEALTH_IMMOBILE(2),
    /**
     * <code>ASSET_HEALTH_UNRESPONSIVE = 3;</code>
     */
    ASSET_HEALTH_UNRESPONSIVE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ASSET_HEALTH_NOT_IN_USE = 0;</code>
     */
    public static final int ASSET_HEALTH_NOT_IN_USE_VALUE = 0;
    /**
     * <code>ASSET_HEALTH_NORMAL = 1;</code>
     */
    public static final int ASSET_HEALTH_NORMAL_VALUE = 1;
    /**
     * <code>ASSET_HEALTH_IMMOBILE = 2;</code>
     */
    public static final int ASSET_HEALTH_IMMOBILE_VALUE = 2;
    /**
     * <code>ASSET_HEALTH_UNRESPONSIVE = 3;</code>
     */
    public static final int ASSET_HEALTH_UNRESPONSIVE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AssetHealth_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static AssetHealth_Enum forNumber(int value) {
      switch (value) {
        case 0: return ASSET_HEALTH_NOT_IN_USE;
        case 1: return ASSET_HEALTH_NORMAL;
        case 2: return ASSET_HEALTH_IMMOBILE;
        case 3: return ASSET_HEALTH_UNRESPONSIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AssetHealth_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AssetHealth_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AssetHealth_Enum>() {
            public AssetHealth_Enum findValueByNumber(int number) {
              return AssetHealth_Enum.forNumber(number);
            }
          };

    private final int value;

    private AssetHealth_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.AssetHealth_Enum)
  }

  /**
   * Protobuf enum {@code mcs.BattleDimension_Enum}
   */
  public enum BattleDimension_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>BATTLE_DIMENSION_NOT_IN_USE = 0;</code>
     */
    BATTLE_DIMENSION_NOT_IN_USE(0),
    /**
     * <code>BATTLE_DIMENSION_SPACE = 80;</code>
     */
    BATTLE_DIMENSION_SPACE(80),
    /**
     * <code>BATTLE_DIMENSION_AIR = 65;</code>
     */
    BATTLE_DIMENSION_AIR(65),
    /**
     * <code>BATTLE_DIMENSION_GROUND = 71;</code>
     */
    BATTLE_DIMENSION_GROUND(71),
    /**
     * <code>BATTLE_DIMENSION_SEA_SURFACE = 83;</code>
     */
    BATTLE_DIMENSION_SEA_SURFACE(83),
    /**
     * <code>BATTLE_DIMENSION_SEA_SUBSURFACE = 85;</code>
     */
    BATTLE_DIMENSION_SEA_SUBSURFACE(85),
    /**
     * <code>BATTLE_DIMENSION_SPECIAL_OPERATIONS_FORCES = 70;</code>
     */
    BATTLE_DIMENSION_SPECIAL_OPERATIONS_FORCES(70),
    /**
     * <code>BATTLE_DIMENSION_OTHER = 88;</code>
     */
    BATTLE_DIMENSION_OTHER(88),
    /**
     * <code>BATTLE_DIMENSION_UNKNOWN = 90;</code>
     */
    BATTLE_DIMENSION_UNKNOWN(90),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BATTLE_DIMENSION_NOT_IN_USE = 0;</code>
     */
    public static final int BATTLE_DIMENSION_NOT_IN_USE_VALUE = 0;
    /**
     * <code>BATTLE_DIMENSION_SPACE = 80;</code>
     */
    public static final int BATTLE_DIMENSION_SPACE_VALUE = 80;
    /**
     * <code>BATTLE_DIMENSION_AIR = 65;</code>
     */
    public static final int BATTLE_DIMENSION_AIR_VALUE = 65;
    /**
     * <code>BATTLE_DIMENSION_GROUND = 71;</code>
     */
    public static final int BATTLE_DIMENSION_GROUND_VALUE = 71;
    /**
     * <code>BATTLE_DIMENSION_SEA_SURFACE = 83;</code>
     */
    public static final int BATTLE_DIMENSION_SEA_SURFACE_VALUE = 83;
    /**
     * <code>BATTLE_DIMENSION_SEA_SUBSURFACE = 85;</code>
     */
    public static final int BATTLE_DIMENSION_SEA_SUBSURFACE_VALUE = 85;
    /**
     * <code>BATTLE_DIMENSION_SPECIAL_OPERATIONS_FORCES = 70;</code>
     */
    public static final int BATTLE_DIMENSION_SPECIAL_OPERATIONS_FORCES_VALUE = 70;
    /**
     * <code>BATTLE_DIMENSION_OTHER = 88;</code>
     */
    public static final int BATTLE_DIMENSION_OTHER_VALUE = 88;
    /**
     * <code>BATTLE_DIMENSION_UNKNOWN = 90;</code>
     */
    public static final int BATTLE_DIMENSION_UNKNOWN_VALUE = 90;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BattleDimension_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static BattleDimension_Enum forNumber(int value) {
      switch (value) {
        case 0: return BATTLE_DIMENSION_NOT_IN_USE;
        case 80: return BATTLE_DIMENSION_SPACE;
        case 65: return BATTLE_DIMENSION_AIR;
        case 71: return BATTLE_DIMENSION_GROUND;
        case 83: return BATTLE_DIMENSION_SEA_SURFACE;
        case 85: return BATTLE_DIMENSION_SEA_SUBSURFACE;
        case 70: return BATTLE_DIMENSION_SPECIAL_OPERATIONS_FORCES;
        case 88: return BATTLE_DIMENSION_OTHER;
        case 90: return BATTLE_DIMENSION_UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BattleDimension_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BattleDimension_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BattleDimension_Enum>() {
            public BattleDimension_Enum findValueByNumber(int number) {
              return BattleDimension_Enum.forNumber(number);
            }
          };

    private final int value;

    private BattleDimension_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.BattleDimension_Enum)
  }

  /**
   * Protobuf enum {@code mcs.BdaOutcome_Enum}
   */
  public enum BdaOutcome_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>BDA_OUTCOME_NOT_APPLICABLE = 0;</code>
     */
    BDA_OUTCOME_NOT_APPLICABLE(0),
    /**
     * <code>BDA_OUTCOME_MIA = 1;</code>
     */
    BDA_OUTCOME_MIA(1),
    /**
     * <code>BDA_OUTCOME_WIA = 2;</code>
     */
    BDA_OUTCOME_WIA(2),
    /**
     * <code>BDA_OUTCOME_KIA = 3;</code>
     */
    BDA_OUTCOME_KIA(3),
    /**
     * <code>BDA_OUTCOME_FIREPOWER_KILL = 4;</code>
     */
    BDA_OUTCOME_FIREPOWER_KILL(4),
    /**
     * <code>BDA_OUTCOME_MOBILITY_KILL = 5;</code>
     */
    BDA_OUTCOME_MOBILITY_KILL(5),
    /**
     * <code>BDA_OUTCOME_COMMUNICATION_KILL = 6;</code>
     */
    BDA_OUTCOME_COMMUNICATION_KILL(6),
    /**
     * <code>BDA_OUTCOME_DESTROYED = 7;</code>
     */
    BDA_OUTCOME_DESTROYED(7),
    /**
     * <code>BDA_OUTCOME_FIRE_HIT = 8;</code>
     */
    BDA_OUTCOME_FIRE_HIT(8),
    /**
     * <code>BDA_OUTCOME_FIRE_MISSED = 9;</code>
     */
    BDA_OUTCOME_FIRE_MISSED(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BDA_OUTCOME_NOT_APPLICABLE = 0;</code>
     */
    public static final int BDA_OUTCOME_NOT_APPLICABLE_VALUE = 0;
    /**
     * <code>BDA_OUTCOME_MIA = 1;</code>
     */
    public static final int BDA_OUTCOME_MIA_VALUE = 1;
    /**
     * <code>BDA_OUTCOME_WIA = 2;</code>
     */
    public static final int BDA_OUTCOME_WIA_VALUE = 2;
    /**
     * <code>BDA_OUTCOME_KIA = 3;</code>
     */
    public static final int BDA_OUTCOME_KIA_VALUE = 3;
    /**
     * <code>BDA_OUTCOME_FIREPOWER_KILL = 4;</code>
     */
    public static final int BDA_OUTCOME_FIREPOWER_KILL_VALUE = 4;
    /**
     * <code>BDA_OUTCOME_MOBILITY_KILL = 5;</code>
     */
    public static final int BDA_OUTCOME_MOBILITY_KILL_VALUE = 5;
    /**
     * <code>BDA_OUTCOME_COMMUNICATION_KILL = 6;</code>
     */
    public static final int BDA_OUTCOME_COMMUNICATION_KILL_VALUE = 6;
    /**
     * <code>BDA_OUTCOME_DESTROYED = 7;</code>
     */
    public static final int BDA_OUTCOME_DESTROYED_VALUE = 7;
    /**
     * <code>BDA_OUTCOME_FIRE_HIT = 8;</code>
     */
    public static final int BDA_OUTCOME_FIRE_HIT_VALUE = 8;
    /**
     * <code>BDA_OUTCOME_FIRE_MISSED = 9;</code>
     */
    public static final int BDA_OUTCOME_FIRE_MISSED_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BdaOutcome_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static BdaOutcome_Enum forNumber(int value) {
      switch (value) {
        case 0: return BDA_OUTCOME_NOT_APPLICABLE;
        case 1: return BDA_OUTCOME_MIA;
        case 2: return BDA_OUTCOME_WIA;
        case 3: return BDA_OUTCOME_KIA;
        case 4: return BDA_OUTCOME_FIREPOWER_KILL;
        case 5: return BDA_OUTCOME_MOBILITY_KILL;
        case 6: return BDA_OUTCOME_COMMUNICATION_KILL;
        case 7: return BDA_OUTCOME_DESTROYED;
        case 8: return BDA_OUTCOME_FIRE_HIT;
        case 9: return BDA_OUTCOME_FIRE_MISSED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BdaOutcome_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BdaOutcome_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BdaOutcome_Enum>() {
            public BdaOutcome_Enum findValueByNumber(int number) {
              return BdaOutcome_Enum.forNumber(number);
            }
          };

    private final int value;

    private BdaOutcome_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.BdaOutcome_Enum)
  }

  /**
   * Protobuf enum {@code mcs.BdaOutcomeObserver_Enum}
   */
  public enum BdaOutcomeObserver_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>BDA_OUTCOME_OBSERVER_NOT_IN_USE = 0;</code>
     */
    BDA_OUTCOME_OBSERVER_NOT_IN_USE(0),
    /**
     * <code>BDA_OUTCOME_OWN_ENGAGEMENT = 1;</code>
     */
    BDA_OUTCOME_OWN_ENGAGEMENT(1),
    /**
     * <code>BDA_OUTCOME_OBSERVED_ENGAGEMENT = 2;</code>
     */
    BDA_OUTCOME_OBSERVED_ENGAGEMENT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BDA_OUTCOME_OBSERVER_NOT_IN_USE = 0;</code>
     */
    public static final int BDA_OUTCOME_OBSERVER_NOT_IN_USE_VALUE = 0;
    /**
     * <code>BDA_OUTCOME_OWN_ENGAGEMENT = 1;</code>
     */
    public static final int BDA_OUTCOME_OWN_ENGAGEMENT_VALUE = 1;
    /**
     * <code>BDA_OUTCOME_OBSERVED_ENGAGEMENT = 2;</code>
     */
    public static final int BDA_OUTCOME_OBSERVED_ENGAGEMENT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BdaOutcomeObserver_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static BdaOutcomeObserver_Enum forNumber(int value) {
      switch (value) {
        case 0: return BDA_OUTCOME_OBSERVER_NOT_IN_USE;
        case 1: return BDA_OUTCOME_OWN_ENGAGEMENT;
        case 2: return BDA_OUTCOME_OBSERVED_ENGAGEMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BdaOutcomeObserver_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BdaOutcomeObserver_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BdaOutcomeObserver_Enum>() {
            public BdaOutcomeObserver_Enum findValueByNumber(int number) {
              return BdaOutcomeObserver_Enum.forNumber(number);
            }
          };

    private final int value;

    private BdaOutcomeObserver_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.BdaOutcomeObserver_Enum)
  }

  /**
   * Protobuf enum {@code mcs.ConnectCmd_Enum}
   */
  public enum ConnectCmd_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CONNECT_CMD_NOT_IN_USE = 0;</code>
     */
    CONNECT_CMD_NOT_IN_USE(0),
    /**
     * <code>CONNECT_CMD_CONNECT = 1;</code>
     */
    CONNECT_CMD_CONNECT(1),
    /**
     * <code>CONNECT_CMD_DISCONNECT = 2;</code>
     */
    CONNECT_CMD_DISCONNECT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CONNECT_CMD_NOT_IN_USE = 0;</code>
     */
    public static final int CONNECT_CMD_NOT_IN_USE_VALUE = 0;
    /**
     * <code>CONNECT_CMD_CONNECT = 1;</code>
     */
    public static final int CONNECT_CMD_CONNECT_VALUE = 1;
    /**
     * <code>CONNECT_CMD_DISCONNECT = 2;</code>
     */
    public static final int CONNECT_CMD_DISCONNECT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConnectCmd_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static ConnectCmd_Enum forNumber(int value) {
      switch (value) {
        case 0: return CONNECT_CMD_NOT_IN_USE;
        case 1: return CONNECT_CMD_CONNECT;
        case 2: return CONNECT_CMD_DISCONNECT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConnectCmd_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConnectCmd_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConnectCmd_Enum>() {
            public ConnectCmd_Enum findValueByNumber(int number) {
              return ConnectCmd_Enum.forNumber(number);
            }
          };

    private final int value;

    private ConnectCmd_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.ConnectCmd_Enum)
  }

  /**
   * Protobuf enum {@code mcs.FrameOfReference_Enum}
   */
  public enum FrameOfReference_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>FRAME_OF_REFERENCE_NOT_IN_USE = 0;</code>
     */
    FRAME_OF_REFERENCE_NOT_IN_USE(0),
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         +ve roll clockwise.  +ve pitch upwards.  +ve yaw clockwise.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>FRAME_OF_REFERENCE_WRT_PLATFORM_NED = 1;</code>
     */
    FRAME_OF_REFERENCE_WRT_PLATFORM_NED(1),
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         +ve roll clockwise.  +ve pitch upwards.  +ve yaw clockwise.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>FRAME_OF_REFERENCE_WRT_TRUE_NORTH_NED = 2;</code>
     */
    FRAME_OF_REFERENCE_WRT_TRUE_NORTH_NED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FRAME_OF_REFERENCE_NOT_IN_USE = 0;</code>
     */
    public static final int FRAME_OF_REFERENCE_NOT_IN_USE_VALUE = 0;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         +ve roll clockwise.  +ve pitch upwards.  +ve yaw clockwise.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>FRAME_OF_REFERENCE_WRT_PLATFORM_NED = 1;</code>
     */
    public static final int FRAME_OF_REFERENCE_WRT_PLATFORM_NED_VALUE = 1;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         +ve roll clockwise.  +ve pitch upwards.  +ve yaw clockwise.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>FRAME_OF_REFERENCE_WRT_TRUE_NORTH_NED = 2;</code>
     */
    public static final int FRAME_OF_REFERENCE_WRT_TRUE_NORTH_NED_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FrameOfReference_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static FrameOfReference_Enum forNumber(int value) {
      switch (value) {
        case 0: return FRAME_OF_REFERENCE_NOT_IN_USE;
        case 1: return FRAME_OF_REFERENCE_WRT_PLATFORM_NED;
        case 2: return FRAME_OF_REFERENCE_WRT_TRUE_NORTH_NED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FrameOfReference_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FrameOfReference_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FrameOfReference_Enum>() {
            public FrameOfReference_Enum findValueByNumber(int number) {
              return FrameOfReference_Enum.forNumber(number);
            }
          };

    private final int value;

    private FrameOfReference_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.FrameOfReference_Enum)
  }

  /**
   * Protobuf enum {@code mcs.IsActive_Enum}
   */
  public enum IsActive_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>IS_ACTIVE_NOT_IN_USE = 0;</code>
     */
    IS_ACTIVE_NOT_IN_USE(0),
    /**
     * <code>IS_ACTIVE_YES = 1;</code>
     */
    IS_ACTIVE_YES(1),
    /**
     * <code>IS_ACTIVE_NO = 2;</code>
     */
    IS_ACTIVE_NO(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>IS_ACTIVE_NOT_IN_USE = 0;</code>
     */
    public static final int IS_ACTIVE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>IS_ACTIVE_YES = 1;</code>
     */
    public static final int IS_ACTIVE_YES_VALUE = 1;
    /**
     * <code>IS_ACTIVE_NO = 2;</code>
     */
    public static final int IS_ACTIVE_NO_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static IsActive_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static IsActive_Enum forNumber(int value) {
      switch (value) {
        case 0: return IS_ACTIVE_NOT_IN_USE;
        case 1: return IS_ACTIVE_YES;
        case 2: return IS_ACTIVE_NO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<IsActive_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        IsActive_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IsActive_Enum>() {
            public IsActive_Enum findValueByNumber(int number) {
              return IsActive_Enum.forNumber(number);
            }
          };

    private final int value;

    private IsActive_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.IsActive_Enum)
  }

  /**
   * Protobuf enum {@code mcs.LoiterDirection_Enum}
   */
  public enum LoiterDirection_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>LOITER_DIRECTION_VEHICLE_DEPENDENT = 0;</code>
     */
    LOITER_DIRECTION_VEHICLE_DEPENDENT(0),
    /**
     * <code>LOITER_DIRECTION_CLOCKWISE = 1;</code>
     */
    LOITER_DIRECTION_CLOCKWISE(1),
    /**
     * <code>LOITER_DIRECTION_ANTI_CLOCKWISE = 2;</code>
     */
    LOITER_DIRECTION_ANTI_CLOCKWISE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LOITER_DIRECTION_VEHICLE_DEPENDENT = 0;</code>
     */
    public static final int LOITER_DIRECTION_VEHICLE_DEPENDENT_VALUE = 0;
    /**
     * <code>LOITER_DIRECTION_CLOCKWISE = 1;</code>
     */
    public static final int LOITER_DIRECTION_CLOCKWISE_VALUE = 1;
    /**
     * <code>LOITER_DIRECTION_ANTI_CLOCKWISE = 2;</code>
     */
    public static final int LOITER_DIRECTION_ANTI_CLOCKWISE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LoiterDirection_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static LoiterDirection_Enum forNumber(int value) {
      switch (value) {
        case 0: return LOITER_DIRECTION_VEHICLE_DEPENDENT;
        case 1: return LOITER_DIRECTION_CLOCKWISE;
        case 2: return LOITER_DIRECTION_ANTI_CLOCKWISE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoiterDirection_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LoiterDirection_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoiterDirection_Enum>() {
            public LoiterDirection_Enum findValueByNumber(int number) {
              return LoiterDirection_Enum.forNumber(number);
            }
          };

    private final int value;

    private LoiterDirection_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.LoiterDirection_Enum)
  }

  /**
   * Protobuf enum {@code mcs.LoiterDurationUnits_Enum}
   */
  public enum LoiterDurationUnits_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>LOITER_DURATION_SECOND = 0;</code>
     */
    LOITER_DURATION_SECOND(0),
    /**
     * <code>LOITER_DURATION_LAP = 1;</code>
     */
    LOITER_DURATION_LAP(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LOITER_DURATION_SECOND = 0;</code>
     */
    public static final int LOITER_DURATION_SECOND_VALUE = 0;
    /**
     * <code>LOITER_DURATION_LAP = 1;</code>
     */
    public static final int LOITER_DURATION_LAP_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LoiterDurationUnits_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static LoiterDurationUnits_Enum forNumber(int value) {
      switch (value) {
        case 0: return LOITER_DURATION_SECOND;
        case 1: return LOITER_DURATION_LAP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoiterDurationUnits_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LoiterDurationUnits_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoiterDurationUnits_Enum>() {
            public LoiterDurationUnits_Enum findValueByNumber(int number) {
              return LoiterDurationUnits_Enum.forNumber(number);
            }
          };

    private final int value;

    private LoiterDurationUnits_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.LoiterDurationUnits_Enum)
  }

  /**
   * Protobuf enum {@code mcs.LoiterPattern_Enum}
   */
  public enum LoiterPattern_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>LOITER_NONE = 0;</code>
     */
    LOITER_NONE(0),
    /**
     * <code>LOITER_CIRCULAR = 1;</code>
     */
    LOITER_CIRCULAR(1),
    /**
     * <code>LOITER_RACECOURSE = 2;</code>
     */
    LOITER_RACECOURSE(2),
    /**
     * <code>LOITER_FIGURE_OF_EIGHT = 3;</code>
     */
    LOITER_FIGURE_OF_EIGHT(3),
    /**
     * <code>LOITER_HOVER = 4;</code>
     */
    LOITER_HOVER(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LOITER_NONE = 0;</code>
     */
    public static final int LOITER_NONE_VALUE = 0;
    /**
     * <code>LOITER_CIRCULAR = 1;</code>
     */
    public static final int LOITER_CIRCULAR_VALUE = 1;
    /**
     * <code>LOITER_RACECOURSE = 2;</code>
     */
    public static final int LOITER_RACECOURSE_VALUE = 2;
    /**
     * <code>LOITER_FIGURE_OF_EIGHT = 3;</code>
     */
    public static final int LOITER_FIGURE_OF_EIGHT_VALUE = 3;
    /**
     * <code>LOITER_HOVER = 4;</code>
     */
    public static final int LOITER_HOVER_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LoiterPattern_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static LoiterPattern_Enum forNumber(int value) {
      switch (value) {
        case 0: return LOITER_NONE;
        case 1: return LOITER_CIRCULAR;
        case 2: return LOITER_RACECOURSE;
        case 3: return LOITER_FIGURE_OF_EIGHT;
        case 4: return LOITER_HOVER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoiterPattern_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LoiterPattern_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoiterPattern_Enum>() {
            public LoiterPattern_Enum findValueByNumber(int number) {
              return LoiterPattern_Enum.forNumber(number);
            }
          };

    private final int value;

    private LoiterPattern_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.LoiterPattern_Enum)
  }

  /**
   * Protobuf enum {@code mcs.MsgTypeId_Enum}
   */
  public enum MsgTypeId_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>MSG_TYPE_ID_NOT_IN_USE = 0;</code>
     */
    MSG_TYPE_ID_NOT_IN_USE(0),
    /**
     * <code>MCS_CONNECT_ACS_COMMAND = 1;</code>
     */
    MCS_CONNECT_ACS_COMMAND(1),
    /**
     * <code>ACS_CONNECT_ACS_COMMAND_RESPONSE = 131;</code>
     */
    ACS_CONNECT_ACS_COMMAND_RESPONSE(131),
    /**
     * <code>ACS_CONNECT_ASSET_COMMAND = 130;</code>
     */
    ACS_CONNECT_ASSET_COMMAND(130),
    /**
     * <code>MCS_MCS_STATUS = 2;</code>
     */
    MCS_MCS_STATUS(2),
    /**
     * <code>ACS_ACS_STATUS = 132;</code>
     */
    ACS_ACS_STATUS(132),
    /**
     * <code>ACS_ASSET_TELEMETRY = 129;</code>
     */
    ACS_ASSET_TELEMETRY(129),
    /**
     * <code>ACS_ASSET_ALERT = 133;</code>
     */
    ACS_ASSET_ALERT(133),
    /**
     * <code>ACS_ASSET_MOVEMENT_UPDATE = 134;</code>
     */
    ACS_ASSET_MOVEMENT_UPDATE(134),
    /**
     * <code>MCS_ADD_PROHIBITED_ZONE = 3;</code>
     */
    MCS_ADD_PROHIBITED_ZONE(3),
    /**
     * <code>MCS_REMOVE_PROHIBITED_ZONE = 4;</code>
     */
    MCS_REMOVE_PROHIBITED_ZONE(4),
    /**
     * <code>MCS_ADD_RED_FORCE = 5;</code>
     */
    MCS_ADD_RED_FORCE(5),
    /**
     * <code>MCS_REMOVE_RED_FORCE = 6;</code>
     */
    MCS_REMOVE_RED_FORCE(6),
    /**
     * <code>ACS_BATTLE_REPORT = 135;</code>
     */
    ACS_BATTLE_REPORT(135),
    /**
     * <code>MCS_TASK_SUMMARY = 9;</code>
     */
    MCS_TASK_SUMMARY(9),
    /**
     * <code>MCS_EXECUTE_TASK_COMMAND = 10;</code>
     */
    MCS_EXECUTE_TASK_COMMAND(10),
    /**
     * <code>MCS_ABORT_TASK_COMMAND = 11;</code>
     */
    MCS_ABORT_TASK_COMMAND(11),
    /**
     * <code>ACS_TASK_STATUS_UPDATE = 138;</code>
     */
    ACS_TASK_STATUS_UPDATE(138),
    /**
     * <code>MCS_LOCK_TARGET_COMMAND = 12;</code>
     */
    MCS_LOCK_TARGET_COMMAND(12),
    /**
     * <code>ACS_TARGET_LOCK_STATUS = 139;</code>
     */
    ACS_TARGET_LOCK_STATUS(139),
    /**
     * <code>ACS_TRACK_LIST = 141;</code>
     */
    ACS_TRACK_LIST(141),
    /**
     * <code>MCS_LOCALIZE_TRACK_COMMAND = 15;</code>
     */
    MCS_LOCALIZE_TRACK_COMMAND(15),
    /**
     * <code>ACS_LOCALIZED_TRACK_STATUS = 142;</code>
     */
    ACS_LOCALIZED_TRACK_STATUS(142),
    /**
     * <code>MCS_ACK = 16;</code>
     */
    MCS_ACK(16),
    /**
     * <code>ACS_ACK = 128;</code>
     */
    ACS_ACK(128),
    /**
     * <code>MCS_IMAGE = 17;</code>
     */
    MCS_IMAGE(17),
    /**
     * <code>ACS_IMAGE = 143;</code>
     */
    ACS_IMAGE(143),
    /**
     * <pre>
     * 0xA1
     * </pre>
     *
     * <code>MCS_ASSET_TELEMETRY = 161;</code>
     */
    MCS_ASSET_TELEMETRY(161),
    /**
     * <code>MCS_BATTLE_REPORT = 162;</code>
     */
    MCS_BATTLE_REPORT(162),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MSG_TYPE_ID_NOT_IN_USE = 0;</code>
     */
    public static final int MSG_TYPE_ID_NOT_IN_USE_VALUE = 0;
    /**
     * <code>MCS_CONNECT_ACS_COMMAND = 1;</code>
     */
    public static final int MCS_CONNECT_ACS_COMMAND_VALUE = 1;
    /**
     * <code>ACS_CONNECT_ACS_COMMAND_RESPONSE = 131;</code>
     */
    public static final int ACS_CONNECT_ACS_COMMAND_RESPONSE_VALUE = 131;
    /**
     * <code>ACS_CONNECT_ASSET_COMMAND = 130;</code>
     */
    public static final int ACS_CONNECT_ASSET_COMMAND_VALUE = 130;
    /**
     * <code>MCS_MCS_STATUS = 2;</code>
     */
    public static final int MCS_MCS_STATUS_VALUE = 2;
    /**
     * <code>ACS_ACS_STATUS = 132;</code>
     */
    public static final int ACS_ACS_STATUS_VALUE = 132;
    /**
     * <code>ACS_ASSET_TELEMETRY = 129;</code>
     */
    public static final int ACS_ASSET_TELEMETRY_VALUE = 129;
    /**
     * <code>ACS_ASSET_ALERT = 133;</code>
     */
    public static final int ACS_ASSET_ALERT_VALUE = 133;
    /**
     * <code>ACS_ASSET_MOVEMENT_UPDATE = 134;</code>
     */
    public static final int ACS_ASSET_MOVEMENT_UPDATE_VALUE = 134;
    /**
     * <code>MCS_ADD_PROHIBITED_ZONE = 3;</code>
     */
    public static final int MCS_ADD_PROHIBITED_ZONE_VALUE = 3;
    /**
     * <code>MCS_REMOVE_PROHIBITED_ZONE = 4;</code>
     */
    public static final int MCS_REMOVE_PROHIBITED_ZONE_VALUE = 4;
    /**
     * <code>MCS_ADD_RED_FORCE = 5;</code>
     */
    public static final int MCS_ADD_RED_FORCE_VALUE = 5;
    /**
     * <code>MCS_REMOVE_RED_FORCE = 6;</code>
     */
    public static final int MCS_REMOVE_RED_FORCE_VALUE = 6;
    /**
     * <code>ACS_BATTLE_REPORT = 135;</code>
     */
    public static final int ACS_BATTLE_REPORT_VALUE = 135;
    /**
     * <code>MCS_TASK_SUMMARY = 9;</code>
     */
    public static final int MCS_TASK_SUMMARY_VALUE = 9;
    /**
     * <code>MCS_EXECUTE_TASK_COMMAND = 10;</code>
     */
    public static final int MCS_EXECUTE_TASK_COMMAND_VALUE = 10;
    /**
     * <code>MCS_ABORT_TASK_COMMAND = 11;</code>
     */
    public static final int MCS_ABORT_TASK_COMMAND_VALUE = 11;
    /**
     * <code>ACS_TASK_STATUS_UPDATE = 138;</code>
     */
    public static final int ACS_TASK_STATUS_UPDATE_VALUE = 138;
    /**
     * <code>MCS_LOCK_TARGET_COMMAND = 12;</code>
     */
    public static final int MCS_LOCK_TARGET_COMMAND_VALUE = 12;
    /**
     * <code>ACS_TARGET_LOCK_STATUS = 139;</code>
     */
    public static final int ACS_TARGET_LOCK_STATUS_VALUE = 139;
    /**
     * <code>ACS_TRACK_LIST = 141;</code>
     */
    public static final int ACS_TRACK_LIST_VALUE = 141;
    /**
     * <code>MCS_LOCALIZE_TRACK_COMMAND = 15;</code>
     */
    public static final int MCS_LOCALIZE_TRACK_COMMAND_VALUE = 15;
    /**
     * <code>ACS_LOCALIZED_TRACK_STATUS = 142;</code>
     */
    public static final int ACS_LOCALIZED_TRACK_STATUS_VALUE = 142;
    /**
     * <code>MCS_ACK = 16;</code>
     */
    public static final int MCS_ACK_VALUE = 16;
    /**
     * <code>ACS_ACK = 128;</code>
     */
    public static final int ACS_ACK_VALUE = 128;
    /**
     * <code>MCS_IMAGE = 17;</code>
     */
    public static final int MCS_IMAGE_VALUE = 17;
    /**
     * <code>ACS_IMAGE = 143;</code>
     */
    public static final int ACS_IMAGE_VALUE = 143;
    /**
     * <pre>
     * 0xA1
     * </pre>
     *
     * <code>MCS_ASSET_TELEMETRY = 161;</code>
     */
    public static final int MCS_ASSET_TELEMETRY_VALUE = 161;
    /**
     * <code>MCS_BATTLE_REPORT = 162;</code>
     */
    public static final int MCS_BATTLE_REPORT_VALUE = 162;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MsgTypeId_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static MsgTypeId_Enum forNumber(int value) {
      switch (value) {
        case 0: return MSG_TYPE_ID_NOT_IN_USE;
        case 1: return MCS_CONNECT_ACS_COMMAND;
        case 131: return ACS_CONNECT_ACS_COMMAND_RESPONSE;
        case 130: return ACS_CONNECT_ASSET_COMMAND;
        case 2: return MCS_MCS_STATUS;
        case 132: return ACS_ACS_STATUS;
        case 129: return ACS_ASSET_TELEMETRY;
        case 133: return ACS_ASSET_ALERT;
        case 134: return ACS_ASSET_MOVEMENT_UPDATE;
        case 3: return MCS_ADD_PROHIBITED_ZONE;
        case 4: return MCS_REMOVE_PROHIBITED_ZONE;
        case 5: return MCS_ADD_RED_FORCE;
        case 6: return MCS_REMOVE_RED_FORCE;
        case 135: return ACS_BATTLE_REPORT;
        case 9: return MCS_TASK_SUMMARY;
        case 10: return MCS_EXECUTE_TASK_COMMAND;
        case 11: return MCS_ABORT_TASK_COMMAND;
        case 138: return ACS_TASK_STATUS_UPDATE;
        case 12: return MCS_LOCK_TARGET_COMMAND;
        case 139: return ACS_TARGET_LOCK_STATUS;
        case 141: return ACS_TRACK_LIST;
        case 15: return MCS_LOCALIZE_TRACK_COMMAND;
        case 142: return ACS_LOCALIZED_TRACK_STATUS;
        case 16: return MCS_ACK;
        case 128: return ACS_ACK;
        case 17: return MCS_IMAGE;
        case 143: return ACS_IMAGE;
        case 161: return MCS_ASSET_TELEMETRY;
        case 162: return MCS_BATTLE_REPORT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MsgTypeId_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MsgTypeId_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MsgTypeId_Enum>() {
            public MsgTypeId_Enum findValueByNumber(int number) {
              return MsgTypeId_Enum.forNumber(number);
            }
          };

    private final int value;

    private MsgTypeId_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.MsgTypeId_Enum)
  }

  /**
   * Protobuf enum {@code mcs.PayloadHealth_Enum}
   */
  public enum PayloadHealth_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>PAYLOAD_HEALTH_NOT_IN_USE = 0;</code>
     */
    PAYLOAD_HEALTH_NOT_IN_USE(0),
    /**
     * <code>PAYLOAD_HEALTH_NORMAL = 1;</code>
     */
    PAYLOAD_HEALTH_NORMAL(1),
    /**
     * <code>PAYLOAD_HEALTH_IMMOBILE = 2;</code>
     */
    PAYLOAD_HEALTH_IMMOBILE(2),
    /**
     * <code>PAYLOAD_HEALTH_MALFUNCTION = 3;</code>
     */
    PAYLOAD_HEALTH_MALFUNCTION(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PAYLOAD_HEALTH_NOT_IN_USE = 0;</code>
     */
    public static final int PAYLOAD_HEALTH_NOT_IN_USE_VALUE = 0;
    /**
     * <code>PAYLOAD_HEALTH_NORMAL = 1;</code>
     */
    public static final int PAYLOAD_HEALTH_NORMAL_VALUE = 1;
    /**
     * <code>PAYLOAD_HEALTH_IMMOBILE = 2;</code>
     */
    public static final int PAYLOAD_HEALTH_IMMOBILE_VALUE = 2;
    /**
     * <code>PAYLOAD_HEALTH_MALFUNCTION = 3;</code>
     */
    public static final int PAYLOAD_HEALTH_MALFUNCTION_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PayloadHealth_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static PayloadHealth_Enum forNumber(int value) {
      switch (value) {
        case 0: return PAYLOAD_HEALTH_NOT_IN_USE;
        case 1: return PAYLOAD_HEALTH_NORMAL;
        case 2: return PAYLOAD_HEALTH_IMMOBILE;
        case 3: return PAYLOAD_HEALTH_MALFUNCTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PayloadHealth_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PayloadHealth_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PayloadHealth_Enum>() {
            public PayloadHealth_Enum findValueByNumber(int number) {
              return PayloadHealth_Enum.forNumber(number);
            }
          };

    private final int value;

    private PayloadHealth_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.PayloadHealth_Enum)
  }

  /**
   * Protobuf enum {@code mcs.PathControlMode_Enum}
   */
  public enum PathControlMode_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>PATH_CONTROL_MODE_NOT_IN_USE = 0;</code>
     */
    PATH_CONTROL_MODE_NOT_IN_USE(0),
    /**
     * <code>TELEOPERATION = 1;</code>
     */
    TELEOPERATION(1),
    /**
     * <code>TELEOPERATION_ASSISTED = 2;</code>
     */
    TELEOPERATION_ASSISTED(2),
    /**
     * <code>AUTONOMOUS = 3;</code>
     */
    AUTONOMOUS(3),
    /**
     * <code>HOMING = 4;</code>
     */
    HOMING(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PATH_CONTROL_MODE_NOT_IN_USE = 0;</code>
     */
    public static final int PATH_CONTROL_MODE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>TELEOPERATION = 1;</code>
     */
    public static final int TELEOPERATION_VALUE = 1;
    /**
     * <code>TELEOPERATION_ASSISTED = 2;</code>
     */
    public static final int TELEOPERATION_ASSISTED_VALUE = 2;
    /**
     * <code>AUTONOMOUS = 3;</code>
     */
    public static final int AUTONOMOUS_VALUE = 3;
    /**
     * <code>HOMING = 4;</code>
     */
    public static final int HOMING_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PathControlMode_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static PathControlMode_Enum forNumber(int value) {
      switch (value) {
        case 0: return PATH_CONTROL_MODE_NOT_IN_USE;
        case 1: return TELEOPERATION;
        case 2: return TELEOPERATION_ASSISTED;
        case 3: return AUTONOMOUS;
        case 4: return HOMING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PathControlMode_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PathControlMode_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PathControlMode_Enum>() {
            public PathControlMode_Enum findValueByNumber(int number) {
              return PathControlMode_Enum.forNumber(number);
            }
          };

    private final int value;

    private PathControlMode_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.PathControlMode_Enum)
  }

  /**
   * Protobuf enum {@code mcs.ReportType_Enum}
   */
  public enum ReportType_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>REPORT_TYPE_NOT_IN_USE = 0;</code>
     */
    REPORT_TYPE_NOT_IN_USE(0),
    /**
     * <code>REPORT_BDA = 1;</code>
     */
    REPORT_BDA(1),
    /**
     * <code>REPORT_CONTACT_REP = 2;</code>
     */
    REPORT_CONTACT_REP(2),
    /**
     * <code>REPORT_SPOT_REP = 3;</code>
     */
    REPORT_SPOT_REP(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>REPORT_TYPE_NOT_IN_USE = 0;</code>
     */
    public static final int REPORT_TYPE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>REPORT_BDA = 1;</code>
     */
    public static final int REPORT_BDA_VALUE = 1;
    /**
     * <code>REPORT_CONTACT_REP = 2;</code>
     */
    public static final int REPORT_CONTACT_REP_VALUE = 2;
    /**
     * <code>REPORT_SPOT_REP = 3;</code>
     */
    public static final int REPORT_SPOT_REP_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReportType_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static ReportType_Enum forNumber(int value) {
      switch (value) {
        case 0: return REPORT_TYPE_NOT_IN_USE;
        case 1: return REPORT_BDA;
        case 2: return REPORT_CONTACT_REP;
        case 3: return REPORT_SPOT_REP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReportType_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReportType_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReportType_Enum>() {
            public ReportType_Enum findValueByNumber(int number) {
              return ReportType_Enum.forNumber(number);
            }
          };

    private final int value;

    private ReportType_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.ReportType_Enum)
  }

  /**
   * Protobuf enum {@code mcs.SourceType_Enum}
   */
  public enum SourceType_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>SOURCE_TYPE_NOT_IN_USE = 0;</code>
     */
    SOURCE_TYPE_NOT_IN_USE(0),
    /**
     * <code>SOURCE_MCS = 1;</code>
     */
    SOURCE_MCS(1),
    /**
     * <code>SOURCE_ACS = 2;</code>
     */
    SOURCE_ACS(2),
    /**
     * <code>SOURCE_ASSET = 3;</code>
     */
    SOURCE_ASSET(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SOURCE_TYPE_NOT_IN_USE = 0;</code>
     */
    public static final int SOURCE_TYPE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>SOURCE_MCS = 1;</code>
     */
    public static final int SOURCE_MCS_VALUE = 1;
    /**
     * <code>SOURCE_ACS = 2;</code>
     */
    public static final int SOURCE_ACS_VALUE = 2;
    /**
     * <code>SOURCE_ASSET = 3;</code>
     */
    public static final int SOURCE_ASSET_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SourceType_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static SourceType_Enum forNumber(int value) {
      switch (value) {
        case 0: return SOURCE_TYPE_NOT_IN_USE;
        case 1: return SOURCE_MCS;
        case 2: return SOURCE_ACS;
        case 3: return SOURCE_ASSET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SourceType_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SourceType_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SourceType_Enum>() {
            public SourceType_Enum findValueByNumber(int number) {
              return SourceType_Enum.forNumber(number);
            }
          };

    private final int value;

    private SourceType_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.SourceType_Enum)
  }

  /**
   * Protobuf enum {@code mcs.TaskStatus_Enum}
   */
  public enum TaskStatus_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TASK_STATUS_NOT_IN_USE = 0;</code>
     */
    TASK_STATUS_NOT_IN_USE(0),
    /**
     * <code>TASK_STATUS_COMPLETED = 1;</code>
     */
    TASK_STATUS_COMPLETED(1),
    /**
     * <code>TASK_STATUS_ABORTED = 2;</code>
     */
    TASK_STATUS_ABORTED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TASK_STATUS_NOT_IN_USE = 0;</code>
     */
    public static final int TASK_STATUS_NOT_IN_USE_VALUE = 0;
    /**
     * <code>TASK_STATUS_COMPLETED = 1;</code>
     */
    public static final int TASK_STATUS_COMPLETED_VALUE = 1;
    /**
     * <code>TASK_STATUS_ABORTED = 2;</code>
     */
    public static final int TASK_STATUS_ABORTED_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TaskStatus_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static TaskStatus_Enum forNumber(int value) {
      switch (value) {
        case 0: return TASK_STATUS_NOT_IN_USE;
        case 1: return TASK_STATUS_COMPLETED;
        case 2: return TASK_STATUS_ABORTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TaskStatus_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TaskStatus_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TaskStatus_Enum>() {
            public TaskStatus_Enum findValueByNumber(int number) {
              return TaskStatus_Enum.forNumber(number);
            }
          };

    private final int value;

    private TaskStatus_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.TaskStatus_Enum)
  }

  /**
   * Protobuf enum {@code mcs.TaskType_Enum}
   */
  public enum TaskType_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TASK_TYPE_NOT_IN_USE = 0;</code>
     */
    TASK_TYPE_NOT_IN_USE(0),
    /**
     * <code>TASK_PATROL = 1;</code>
     */
    TASK_PATROL(1),
    /**
     * <code>TASK_SENTRY = 2;</code>
     */
    TASK_SENTRY(2),
    /**
     * <code>TASK_SURVEILLANCE = 3;</code>
     */
    TASK_SURVEILLANCE(3),
    /**
     * <code>TASK_ENGAGEMENT = 4;</code>
     */
    TASK_ENGAGEMENT(4),
    /**
     * <pre>
     * Deprecated
     * TASK_FIRING = 5;
     * </pre>
     *
     * <code>TASK_MOVEMENT = 6;</code>
     */
    TASK_MOVEMENT(6),
    /**
     * <code>TASK_BDA = 7;</code>
     */
    TASK_BDA(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TASK_TYPE_NOT_IN_USE = 0;</code>
     */
    public static final int TASK_TYPE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>TASK_PATROL = 1;</code>
     */
    public static final int TASK_PATROL_VALUE = 1;
    /**
     * <code>TASK_SENTRY = 2;</code>
     */
    public static final int TASK_SENTRY_VALUE = 2;
    /**
     * <code>TASK_SURVEILLANCE = 3;</code>
     */
    public static final int TASK_SURVEILLANCE_VALUE = 3;
    /**
     * <code>TASK_ENGAGEMENT = 4;</code>
     */
    public static final int TASK_ENGAGEMENT_VALUE = 4;
    /**
     * <pre>
     * Deprecated
     * TASK_FIRING = 5;
     * </pre>
     *
     * <code>TASK_MOVEMENT = 6;</code>
     */
    public static final int TASK_MOVEMENT_VALUE = 6;
    /**
     * <code>TASK_BDA = 7;</code>
     */
    public static final int TASK_BDA_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TaskType_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static TaskType_Enum forNumber(int value) {
      switch (value) {
        case 0: return TASK_TYPE_NOT_IN_USE;
        case 1: return TASK_PATROL;
        case 2: return TASK_SENTRY;
        case 3: return TASK_SURVEILLANCE;
        case 4: return TASK_ENGAGEMENT;
        case 6: return TASK_MOVEMENT;
        case 7: return TASK_BDA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TaskType_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TaskType_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TaskType_Enum>() {
            public TaskType_Enum findValueByNumber(int number) {
              return TaskType_Enum.forNumber(number);
            }
          };

    private final int value;

    private TaskType_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.TaskType_Enum)
  }

  /**
   * Protobuf enum {@code mcs.TrackClassification_Enum}
   */
  public enum TrackClassification_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>INFANTRY = 1;</code>
     */
    INFANTRY(1),
    /**
     * <code>LIGHT_INFANTRY = 2;</code>
     */
    LIGHT_INFANTRY(2),
    /**
     * <code>MECHANIZED_INFANTRY = 3;</code>
     */
    MECHANIZED_INFANTRY(3),
    /**
     * <code>ARMOUR_TRACK = 4;</code>
     */
    ARMOUR_TRACK(4),
    /**
     * <code>ARMOUR_TRACK_LIGHT = 5;</code>
     */
    ARMOUR_TRACK_LIGHT(5),
    /**
     * <code>ARMOUR_TRACK_MEDIUM = 6;</code>
     */
    ARMOUR_TRACK_MEDIUM(6),
    /**
     * <code>ARMOUR_TRACK_HEAVY = 7;</code>
     */
    ARMOUR_TRACK_HEAVY(7),
    /**
     * <code>ARMOUR_WHEELED = 8;</code>
     */
    ARMOUR_WHEELED(8),
    /**
     * <code>ARMOUR_WHEELED_LIGHT = 9;</code>
     */
    ARMOUR_WHEELED_LIGHT(9),
    /**
     * <code>ARMOUR_WHEELED_MEDIUM = 10;</code>
     */
    ARMOUR_WHEELED_MEDIUM(10),
    /**
     * <code>ARMOUR_WHEELED_HEAVY = 11;</code>
     */
    ARMOUR_WHEELED_HEAVY(11),
    /**
     * <code>ANTI_ARMOUR = 12;</code>
     */
    ANTI_ARMOUR(12),
    /**
     * <code>ANTI_ARMOUR_LIGHT = 13;</code>
     */
    ANTI_ARMOUR_LIGHT(13),
    /**
     * <code>ANTI_ARMOUR_ARMOURED_TRACKED = 14;</code>
     */
    ANTI_ARMOUR_ARMOURED_TRACKED(14),
    /**
     * <code>ANTI_ARMOUR_ARMOURED_WHEELED = 15;</code>
     */
    ANTI_ARMOUR_ARMOURED_WHEELED(15),
    /**
     * <code>FIELD_ARTILLERY_MORTAR = 16;</code>
     */
    FIELD_ARTILLERY_MORTAR(16),
    /**
     * <code>FIELD_ARTILLERY_MORTAR_TRACKED = 17;</code>
     */
    FIELD_ARTILLERY_MORTAR_TRACKED(17),
    /**
     * <code>FIELD_ARTILLERY_MORTAR_WHEELED = 18;</code>
     */
    FIELD_ARTILLERY_MORTAR_WHEELED(18),
    /**
     * <code>RECONNAISSANCE_CAVALRY_ARMOURED = 19;</code>
     */
    RECONNAISSANCE_CAVALRY_ARMOURED(19),
    /**
     * <code>RECONNAISSANCE_CAVALRY_MOTORIZED = 20;</code>
     */
    RECONNAISSANCE_CAVALRY_MOTORIZED(20),
    /**
     * <code>RECONNAISSANCE_CAVALRY_GROUND = 21;</code>
     */
    RECONNAISSANCE_CAVALRY_GROUND(21),
    /**
     * <code>FIELD_ARTILLERY_HOWITZER = 22;</code>
     */
    FIELD_ARTILLERY_HOWITZER(22),
    /**
     * <code>FIELD_ARTILLERY_HOWITZER_SELF_PROPELLED = 23;</code>
     */
    FIELD_ARTILLERY_HOWITZER_SELF_PROPELLED(23),
    /**
     * <code>FIELD_ARTILLERY_HOWITZER_LIGHT = 24;</code>
     */
    FIELD_ARTILLERY_HOWITZER_LIGHT(24),
    /**
     * <code>FIELD_ARTILLERY_HOWITZER_MEDIUM = 25;</code>
     */
    FIELD_ARTILLERY_HOWITZER_MEDIUM(25),
    /**
     * <code>FIELD_ARTILLERY_HOWITZER_HEAVY = 26;</code>
     */
    FIELD_ARTILLERY_HOWITZER_HEAVY(26),
    /**
     * <code>ARMOURED_VEHICLE = 27;</code>
     */
    ARMOURED_VEHICLE(27),
    /**
     * <code>TANK = 28;</code>
     */
    TANK(28),
    /**
     * <code>TANK_LIGHT = 29;</code>
     */
    TANK_LIGHT(29),
    /**
     * <code>TANK_MEDIUM = 30;</code>
     */
    TANK_MEDIUM(30),
    /**
     * <code>TANK_HEAVY = 31;</code>
     */
    TANK_HEAVY(31),
    /**
     * <code>ARMOURED_PERSONNEL_CARRIER = 32;</code>
     */
    ARMOURED_PERSONNEL_CARRIER(32),
    /**
     * <code>ARMOURED_INFANTRY = 33;</code>
     */
    ARMOURED_INFANTRY(33),
    /**
     * <code>ARMOURED_C2V_ACV = 34;</code>
     */
    ARMOURED_C2V_ACV(34),
    /**
     * <code>LIGHT_ARMOURED_VEHICLE = 35;</code>
     */
    LIGHT_ARMOURED_VEHICLE(35),
    /**
     * <code>SEA_SURFACE_COMBATANT = 36;</code>
     */
    SEA_SURFACE_COMBATANT(36),
    /**
     * <code>SEA_SURFACE_CARRIER = 37;</code>
     */
    SEA_SURFACE_CARRIER(37),
    /**
     * <code>SEA_SURFACE_CRUISER = 38;</code>
     */
    SEA_SURFACE_CRUISER(38),
    /**
     * <code>SEA_SURFACE_DESTROYER = 39;</code>
     */
    SEA_SURFACE_DESTROYER(39),
    /**
     * <code>SEA_SURFACE_FRIGATE_CORVETTE = 40;</code>
     */
    SEA_SURFACE_FRIGATE_CORVETTE(40),
    /**
     * <code>SEA_SURFACE_PATROL = 41;</code>
     */
    SEA_SURFACE_PATROL(41),
    /**
     * <code>SUBMARINE = 42;</code>
     */
    SUBMARINE(42),
    /**
     * <code>SEA_MINE = 43;</code>
     */
    SEA_MINE(43),
    /**
     * <code>AIR_FIXED_WING = 44;</code>
     */
    AIR_FIXED_WING(44),
    /**
     * <code>AIR_BOMBER = 45;</code>
     */
    AIR_BOMBER(45),
    /**
     * <code>AIR_FIGHTER = 46;</code>
     */
    AIR_FIGHTER(46),
    /**
     * <code>AIR_FIGHTER_INTERCEPTOR = 47;</code>
     */
    AIR_FIGHTER_INTERCEPTOR(47),
    /**
     * <code>AIR_CARGO_AIRLIFT_TRANSPORT = 48;</code>
     */
    AIR_CARGO_AIRLIFT_TRANSPORT(48),
    /**
     * <code>AIR_RECONNAISSANCE = 49;</code>
     */
    AIR_RECONNAISSANCE(49),
    /**
     * <code>AIR_DRONE_FIXED_WING = 50;</code>
     */
    AIR_DRONE_FIXED_WING(50),
    /**
     * <code>AIR_ROTARY_WING = 51;</code>
     */
    AIR_ROTARY_WING(51),
    /**
     * <code>AIR_ROTARY_WING_ATTACK = 52;</code>
     */
    AIR_ROTARY_WING_ATTACK(52),
    /**
     * <code>AIR_ROTARY_WING_RECONNAISSANCE = 53;</code>
     */
    AIR_ROTARY_WING_RECONNAISSANCE(53),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>INFANTRY = 1;</code>
     */
    public static final int INFANTRY_VALUE = 1;
    /**
     * <code>LIGHT_INFANTRY = 2;</code>
     */
    public static final int LIGHT_INFANTRY_VALUE = 2;
    /**
     * <code>MECHANIZED_INFANTRY = 3;</code>
     */
    public static final int MECHANIZED_INFANTRY_VALUE = 3;
    /**
     * <code>ARMOUR_TRACK = 4;</code>
     */
    public static final int ARMOUR_TRACK_VALUE = 4;
    /**
     * <code>ARMOUR_TRACK_LIGHT = 5;</code>
     */
    public static final int ARMOUR_TRACK_LIGHT_VALUE = 5;
    /**
     * <code>ARMOUR_TRACK_MEDIUM = 6;</code>
     */
    public static final int ARMOUR_TRACK_MEDIUM_VALUE = 6;
    /**
     * <code>ARMOUR_TRACK_HEAVY = 7;</code>
     */
    public static final int ARMOUR_TRACK_HEAVY_VALUE = 7;
    /**
     * <code>ARMOUR_WHEELED = 8;</code>
     */
    public static final int ARMOUR_WHEELED_VALUE = 8;
    /**
     * <code>ARMOUR_WHEELED_LIGHT = 9;</code>
     */
    public static final int ARMOUR_WHEELED_LIGHT_VALUE = 9;
    /**
     * <code>ARMOUR_WHEELED_MEDIUM = 10;</code>
     */
    public static final int ARMOUR_WHEELED_MEDIUM_VALUE = 10;
    /**
     * <code>ARMOUR_WHEELED_HEAVY = 11;</code>
     */
    public static final int ARMOUR_WHEELED_HEAVY_VALUE = 11;
    /**
     * <code>ANTI_ARMOUR = 12;</code>
     */
    public static final int ANTI_ARMOUR_VALUE = 12;
    /**
     * <code>ANTI_ARMOUR_LIGHT = 13;</code>
     */
    public static final int ANTI_ARMOUR_LIGHT_VALUE = 13;
    /**
     * <code>ANTI_ARMOUR_ARMOURED_TRACKED = 14;</code>
     */
    public static final int ANTI_ARMOUR_ARMOURED_TRACKED_VALUE = 14;
    /**
     * <code>ANTI_ARMOUR_ARMOURED_WHEELED = 15;</code>
     */
    public static final int ANTI_ARMOUR_ARMOURED_WHEELED_VALUE = 15;
    /**
     * <code>FIELD_ARTILLERY_MORTAR = 16;</code>
     */
    public static final int FIELD_ARTILLERY_MORTAR_VALUE = 16;
    /**
     * <code>FIELD_ARTILLERY_MORTAR_TRACKED = 17;</code>
     */
    public static final int FIELD_ARTILLERY_MORTAR_TRACKED_VALUE = 17;
    /**
     * <code>FIELD_ARTILLERY_MORTAR_WHEELED = 18;</code>
     */
    public static final int FIELD_ARTILLERY_MORTAR_WHEELED_VALUE = 18;
    /**
     * <code>RECONNAISSANCE_CAVALRY_ARMOURED = 19;</code>
     */
    public static final int RECONNAISSANCE_CAVALRY_ARMOURED_VALUE = 19;
    /**
     * <code>RECONNAISSANCE_CAVALRY_MOTORIZED = 20;</code>
     */
    public static final int RECONNAISSANCE_CAVALRY_MOTORIZED_VALUE = 20;
    /**
     * <code>RECONNAISSANCE_CAVALRY_GROUND = 21;</code>
     */
    public static final int RECONNAISSANCE_CAVALRY_GROUND_VALUE = 21;
    /**
     * <code>FIELD_ARTILLERY_HOWITZER = 22;</code>
     */
    public static final int FIELD_ARTILLERY_HOWITZER_VALUE = 22;
    /**
     * <code>FIELD_ARTILLERY_HOWITZER_SELF_PROPELLED = 23;</code>
     */
    public static final int FIELD_ARTILLERY_HOWITZER_SELF_PROPELLED_VALUE = 23;
    /**
     * <code>FIELD_ARTILLERY_HOWITZER_LIGHT = 24;</code>
     */
    public static final int FIELD_ARTILLERY_HOWITZER_LIGHT_VALUE = 24;
    /**
     * <code>FIELD_ARTILLERY_HOWITZER_MEDIUM = 25;</code>
     */
    public static final int FIELD_ARTILLERY_HOWITZER_MEDIUM_VALUE = 25;
    /**
     * <code>FIELD_ARTILLERY_HOWITZER_HEAVY = 26;</code>
     */
    public static final int FIELD_ARTILLERY_HOWITZER_HEAVY_VALUE = 26;
    /**
     * <code>ARMOURED_VEHICLE = 27;</code>
     */
    public static final int ARMOURED_VEHICLE_VALUE = 27;
    /**
     * <code>TANK = 28;</code>
     */
    public static final int TANK_VALUE = 28;
    /**
     * <code>TANK_LIGHT = 29;</code>
     */
    public static final int TANK_LIGHT_VALUE = 29;
    /**
     * <code>TANK_MEDIUM = 30;</code>
     */
    public static final int TANK_MEDIUM_VALUE = 30;
    /**
     * <code>TANK_HEAVY = 31;</code>
     */
    public static final int TANK_HEAVY_VALUE = 31;
    /**
     * <code>ARMOURED_PERSONNEL_CARRIER = 32;</code>
     */
    public static final int ARMOURED_PERSONNEL_CARRIER_VALUE = 32;
    /**
     * <code>ARMOURED_INFANTRY = 33;</code>
     */
    public static final int ARMOURED_INFANTRY_VALUE = 33;
    /**
     * <code>ARMOURED_C2V_ACV = 34;</code>
     */
    public static final int ARMOURED_C2V_ACV_VALUE = 34;
    /**
     * <code>LIGHT_ARMOURED_VEHICLE = 35;</code>
     */
    public static final int LIGHT_ARMOURED_VEHICLE_VALUE = 35;
    /**
     * <code>SEA_SURFACE_COMBATANT = 36;</code>
     */
    public static final int SEA_SURFACE_COMBATANT_VALUE = 36;
    /**
     * <code>SEA_SURFACE_CARRIER = 37;</code>
     */
    public static final int SEA_SURFACE_CARRIER_VALUE = 37;
    /**
     * <code>SEA_SURFACE_CRUISER = 38;</code>
     */
    public static final int SEA_SURFACE_CRUISER_VALUE = 38;
    /**
     * <code>SEA_SURFACE_DESTROYER = 39;</code>
     */
    public static final int SEA_SURFACE_DESTROYER_VALUE = 39;
    /**
     * <code>SEA_SURFACE_FRIGATE_CORVETTE = 40;</code>
     */
    public static final int SEA_SURFACE_FRIGATE_CORVETTE_VALUE = 40;
    /**
     * <code>SEA_SURFACE_PATROL = 41;</code>
     */
    public static final int SEA_SURFACE_PATROL_VALUE = 41;
    /**
     * <code>SUBMARINE = 42;</code>
     */
    public static final int SUBMARINE_VALUE = 42;
    /**
     * <code>SEA_MINE = 43;</code>
     */
    public static final int SEA_MINE_VALUE = 43;
    /**
     * <code>AIR_FIXED_WING = 44;</code>
     */
    public static final int AIR_FIXED_WING_VALUE = 44;
    /**
     * <code>AIR_BOMBER = 45;</code>
     */
    public static final int AIR_BOMBER_VALUE = 45;
    /**
     * <code>AIR_FIGHTER = 46;</code>
     */
    public static final int AIR_FIGHTER_VALUE = 46;
    /**
     * <code>AIR_FIGHTER_INTERCEPTOR = 47;</code>
     */
    public static final int AIR_FIGHTER_INTERCEPTOR_VALUE = 47;
    /**
     * <code>AIR_CARGO_AIRLIFT_TRANSPORT = 48;</code>
     */
    public static final int AIR_CARGO_AIRLIFT_TRANSPORT_VALUE = 48;
    /**
     * <code>AIR_RECONNAISSANCE = 49;</code>
     */
    public static final int AIR_RECONNAISSANCE_VALUE = 49;
    /**
     * <code>AIR_DRONE_FIXED_WING = 50;</code>
     */
    public static final int AIR_DRONE_FIXED_WING_VALUE = 50;
    /**
     * <code>AIR_ROTARY_WING = 51;</code>
     */
    public static final int AIR_ROTARY_WING_VALUE = 51;
    /**
     * <code>AIR_ROTARY_WING_ATTACK = 52;</code>
     */
    public static final int AIR_ROTARY_WING_ATTACK_VALUE = 52;
    /**
     * <code>AIR_ROTARY_WING_RECONNAISSANCE = 53;</code>
     */
    public static final int AIR_ROTARY_WING_RECONNAISSANCE_VALUE = 53;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrackClassification_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static TrackClassification_Enum forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return INFANTRY;
        case 2: return LIGHT_INFANTRY;
        case 3: return MECHANIZED_INFANTRY;
        case 4: return ARMOUR_TRACK;
        case 5: return ARMOUR_TRACK_LIGHT;
        case 6: return ARMOUR_TRACK_MEDIUM;
        case 7: return ARMOUR_TRACK_HEAVY;
        case 8: return ARMOUR_WHEELED;
        case 9: return ARMOUR_WHEELED_LIGHT;
        case 10: return ARMOUR_WHEELED_MEDIUM;
        case 11: return ARMOUR_WHEELED_HEAVY;
        case 12: return ANTI_ARMOUR;
        case 13: return ANTI_ARMOUR_LIGHT;
        case 14: return ANTI_ARMOUR_ARMOURED_TRACKED;
        case 15: return ANTI_ARMOUR_ARMOURED_WHEELED;
        case 16: return FIELD_ARTILLERY_MORTAR;
        case 17: return FIELD_ARTILLERY_MORTAR_TRACKED;
        case 18: return FIELD_ARTILLERY_MORTAR_WHEELED;
        case 19: return RECONNAISSANCE_CAVALRY_ARMOURED;
        case 20: return RECONNAISSANCE_CAVALRY_MOTORIZED;
        case 21: return RECONNAISSANCE_CAVALRY_GROUND;
        case 22: return FIELD_ARTILLERY_HOWITZER;
        case 23: return FIELD_ARTILLERY_HOWITZER_SELF_PROPELLED;
        case 24: return FIELD_ARTILLERY_HOWITZER_LIGHT;
        case 25: return FIELD_ARTILLERY_HOWITZER_MEDIUM;
        case 26: return FIELD_ARTILLERY_HOWITZER_HEAVY;
        case 27: return ARMOURED_VEHICLE;
        case 28: return TANK;
        case 29: return TANK_LIGHT;
        case 30: return TANK_MEDIUM;
        case 31: return TANK_HEAVY;
        case 32: return ARMOURED_PERSONNEL_CARRIER;
        case 33: return ARMOURED_INFANTRY;
        case 34: return ARMOURED_C2V_ACV;
        case 35: return LIGHT_ARMOURED_VEHICLE;
        case 36: return SEA_SURFACE_COMBATANT;
        case 37: return SEA_SURFACE_CARRIER;
        case 38: return SEA_SURFACE_CRUISER;
        case 39: return SEA_SURFACE_DESTROYER;
        case 40: return SEA_SURFACE_FRIGATE_CORVETTE;
        case 41: return SEA_SURFACE_PATROL;
        case 42: return SUBMARINE;
        case 43: return SEA_MINE;
        case 44: return AIR_FIXED_WING;
        case 45: return AIR_BOMBER;
        case 46: return AIR_FIGHTER;
        case 47: return AIR_FIGHTER_INTERCEPTOR;
        case 48: return AIR_CARGO_AIRLIFT_TRANSPORT;
        case 49: return AIR_RECONNAISSANCE;
        case 50: return AIR_DRONE_FIXED_WING;
        case 51: return AIR_ROTARY_WING;
        case 52: return AIR_ROTARY_WING_ATTACK;
        case 53: return AIR_ROTARY_WING_RECONNAISSANCE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrackClassification_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrackClassification_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrackClassification_Enum>() {
            public TrackClassification_Enum findValueByNumber(int number) {
              return TrackClassification_Enum.forNumber(number);
            }
          };

    private final int value;

    private TrackClassification_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.TrackClassification_Enum)
  }

  /**
   * Protobuf enum {@code mcs.UnitOfMeasure_Enum}
   */
  public enum UnitOfMeasure_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNIT_OF_MEASURE_NOT_IN_USE = 0;</code>
     */
    UNIT_OF_MEASURE_NOT_IN_USE(0),
    /**
     * <code>UNIT_EA = 1;</code>
     */
    UNIT_EA(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNIT_OF_MEASURE_NOT_IN_USE = 0;</code>
     */
    public static final int UNIT_OF_MEASURE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>UNIT_EA = 1;</code>
     */
    public static final int UNIT_EA_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UnitOfMeasure_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static UnitOfMeasure_Enum forNumber(int value) {
      switch (value) {
        case 0: return UNIT_OF_MEASURE_NOT_IN_USE;
        case 1: return UNIT_EA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfMeasure_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UnitOfMeasure_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfMeasure_Enum>() {
            public UnitOfMeasure_Enum findValueByNumber(int number) {
              return UnitOfMeasure_Enum.forNumber(number);
            }
          };

    private final int value;

    private UnitOfMeasure_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.UnitOfMeasure_Enum)
  }

  /**
   * Protobuf enum {@code mcs.RouteLoopType_Enum}
   */
  public enum RouteLoopType_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ROUTE_LOOP_TYPE_NOT_IN_USE = 0;</code>
     */
    ROUTE_LOOP_TYPE_NOT_IN_USE(0),
    /**
     * <code>ROUTE_NO_LOOP = 1;</code>
     */
    ROUTE_NO_LOOP(1),
    /**
     * <code>ROUTE_LOOP_FROM_START = 2;</code>
     */
    ROUTE_LOOP_FROM_START(2),
    /**
     * <code>ROUTE_LOOP_REVERSE = 3;</code>
     */
    ROUTE_LOOP_REVERSE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ROUTE_LOOP_TYPE_NOT_IN_USE = 0;</code>
     */
    public static final int ROUTE_LOOP_TYPE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>ROUTE_NO_LOOP = 1;</code>
     */
    public static final int ROUTE_NO_LOOP_VALUE = 1;
    /**
     * <code>ROUTE_LOOP_FROM_START = 2;</code>
     */
    public static final int ROUTE_LOOP_FROM_START_VALUE = 2;
    /**
     * <code>ROUTE_LOOP_REVERSE = 3;</code>
     */
    public static final int ROUTE_LOOP_REVERSE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RouteLoopType_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static RouteLoopType_Enum forNumber(int value) {
      switch (value) {
        case 0: return ROUTE_LOOP_TYPE_NOT_IN_USE;
        case 1: return ROUTE_NO_LOOP;
        case 2: return ROUTE_LOOP_FROM_START;
        case 3: return ROUTE_LOOP_REVERSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RouteLoopType_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RouteLoopType_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RouteLoopType_Enum>() {
            public RouteLoopType_Enum findValueByNumber(int number) {
              return RouteLoopType_Enum.forNumber(number);
            }
          };

    private final int value;

    private RouteLoopType_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.RouteLoopType_Enum)
  }

  /**
   * Protobuf enum {@code mcs.WeaponFireStatus_Enum}
   */
  public enum WeaponFireStatus_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>WEAPON_FIRE_STATUS_NOT_IN_USE = 0;</code>
     */
    WEAPON_FIRE_STATUS_NOT_IN_USE(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>WEAPON_FIRE_STATUS_NOT_IN_USE = 0;</code>
     */
    public static final int WEAPON_FIRE_STATUS_NOT_IN_USE_VALUE = 0;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WeaponFireStatus_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static WeaponFireStatus_Enum forNumber(int value) {
      switch (value) {
        case 0: return WEAPON_FIRE_STATUS_NOT_IN_USE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WeaponFireStatus_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WeaponFireStatus_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WeaponFireStatus_Enum>() {
            public WeaponFireStatus_Enum findValueByNumber(int number) {
              return WeaponFireStatus_Enum.forNumber(number);
            }
          };

    private final int value;

    private WeaponFireStatus_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.WeaponFireStatus_Enum)
  }

  /**
   * Protobuf enum {@code mcs.ZoneShape_Enum}
   */
  public enum ZoneShape_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ZONE_SHAPE_NOT_IN_USE = 0;</code>
     */
    ZONE_SHAPE_NOT_IN_USE(0),
    /**
     * <code>ZONE_SHAPE_POLYGON = 1;</code>
     */
    ZONE_SHAPE_POLYGON(1),
    /**
     * <code>ZONE_SHAPE_CIRCLE = 2;</code>
     */
    ZONE_SHAPE_CIRCLE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ZONE_SHAPE_NOT_IN_USE = 0;</code>
     */
    public static final int ZONE_SHAPE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>ZONE_SHAPE_POLYGON = 1;</code>
     */
    public static final int ZONE_SHAPE_POLYGON_VALUE = 1;
    /**
     * <code>ZONE_SHAPE_CIRCLE = 2;</code>
     */
    public static final int ZONE_SHAPE_CIRCLE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ZoneShape_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static ZoneShape_Enum forNumber(int value) {
      switch (value) {
        case 0: return ZONE_SHAPE_NOT_IN_USE;
        case 1: return ZONE_SHAPE_POLYGON;
        case 2: return ZONE_SHAPE_CIRCLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ZoneShape_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ZoneShape_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZoneShape_Enum>() {
            public ZoneShape_Enum findValueByNumber(int number) {
              return ZoneShape_Enum.forNumber(number);
            }
          };

    private final int value;

    private ZoneShape_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.ZoneShape_Enum)
  }

  /**
   * Protobuf enum {@code mcs.ZoneType_Enum}
   */
  public enum ZoneType_Enum
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ZONE_TYPE_NOT_IN_USE = 0;</code>
     */
    ZONE_TYPE_NOT_IN_USE(0),
    /**
     * <code>ZONE_AIR = 1;</code>
     */
    ZONE_AIR(1),
    /**
     * <code>ZONE_GROUND = 2;</code>
     */
    ZONE_GROUND(2),
    /**
     * <code>ZONE_SEA_SURFACE = 3;</code>
     */
    ZONE_SEA_SURFACE(3),
    /**
     * <code>ZONE_SEA_SUBSURFACE = 4;</code>
     */
    ZONE_SEA_SUBSURFACE(4),
    /**
     * <code>ZONE_ALL_BATTLE_DIMENSION = 5;</code>
     */
    ZONE_ALL_BATTLE_DIMENSION(5),
    /**
     * <code>ZONE_FIRE = 6;</code>
     */
    ZONE_FIRE(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ZONE_TYPE_NOT_IN_USE = 0;</code>
     */
    public static final int ZONE_TYPE_NOT_IN_USE_VALUE = 0;
    /**
     * <code>ZONE_AIR = 1;</code>
     */
    public static final int ZONE_AIR_VALUE = 1;
    /**
     * <code>ZONE_GROUND = 2;</code>
     */
    public static final int ZONE_GROUND_VALUE = 2;
    /**
     * <code>ZONE_SEA_SURFACE = 3;</code>
     */
    public static final int ZONE_SEA_SURFACE_VALUE = 3;
    /**
     * <code>ZONE_SEA_SUBSURFACE = 4;</code>
     */
    public static final int ZONE_SEA_SUBSURFACE_VALUE = 4;
    /**
     * <code>ZONE_ALL_BATTLE_DIMENSION = 5;</code>
     */
    public static final int ZONE_ALL_BATTLE_DIMENSION_VALUE = 5;
    /**
     * <code>ZONE_FIRE = 6;</code>
     */
    public static final int ZONE_FIRE_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ZoneType_Enum valueOf(int value) {
      return forNumber(value);
    }

    public static ZoneType_Enum forNumber(int value) {
      switch (value) {
        case 0: return ZONE_TYPE_NOT_IN_USE;
        case 1: return ZONE_AIR;
        case 2: return ZONE_GROUND;
        case 3: return ZONE_SEA_SURFACE;
        case 4: return ZONE_SEA_SUBSURFACE;
        case 5: return ZONE_ALL_BATTLE_DIMENSION;
        case 6: return ZONE_FIRE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ZoneType_Enum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ZoneType_Enum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZoneType_Enum>() {
            public ZoneType_Enum findValueByNumber(int number) {
              return ZoneType_Enum.forNumber(number);
            }
          };

    private final int value;

    private ZoneType_Enum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mcs.ZoneType_Enum)
  }

  public interface MsgContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.MsgContainer)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Command Connection
     * </pre>
     *
     * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
     */
    mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg getMMcsConnectAcsCommandMsg();

    /**
     * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
     */
    mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg getMAcsConnectAssetCommandMsg();

    /**
     * <pre>
     * Status
     * </pre>
     *
     * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
     */
    mcs.ExternalInterface.Mcs_McsStatus_Msg getMMcsStatusMsg();

    /**
     * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
     */
    mcs.ExternalInterface.Acs_AcsStatus_Msg getMAcsStatusMsg();

    /**
     * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
     */
    mcs.ExternalInterface.Acs_AssetTelemetry_Msg getMAcsAssetTelemetryMsg();

    /**
     * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
     */
    mcs.ExternalInterface.Acs_AssetAlert_Msg getMAcsAssetAlertMsg();

    /**
     * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
     */
    mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg getMAcsAssetMovementUpdateMsg();

    /**
     * <pre>
     * Battlefield Information
     * </pre>
     *
     * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
     */
    mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg getMMcsAddProhibitedZoneMsg();

    /**
     * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
     */
    mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg getMMcsRemoveProhibitedZoneMsg();

    /**
     * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
     */
    mcs.ExternalInterface.Mcs_AddRedForce_Msg getMMcsAddRedForceMsg();

    /**
     * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
     */
    mcs.ExternalInterface.Mcs_RemoveRedForce_Msg getMMcsRemoveRedForceMsg();

    /**
     * <pre>
     * Report
     * </pre>
     *
     * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
     */
    mcs.ExternalInterface.Acs_BattleReport_Msg getMAcsBattleReportMsg();

    /**
     * <pre>
     * Task
     * </pre>
     *
     * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
     */
    mcs.ExternalInterface.Mcs_TaskSummary_Msg getMMcsTaskSummaryMsg();

    /**
     * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
     */
    mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg getMMcsExecuteTaskCommandMsg();

    /**
     * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
     */
    mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg getMMcsAbortTaskCommandMsg();

    /**
     * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
     */
    mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg getMAcsTaskStatusUpdateMsg();

    /**
     * <pre>
     * Image
     * </pre>
     *
     * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
     */
    mcs.ExternalInterface.Sys_Image_Msg getMSysImageMsg();

    /**
     * <pre>
     * Acknowledgement
     * </pre>
     *
     * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
     */
    mcs.ExternalInterface.Sys_Ack_Msg getMSysAckMsg();

    public mcs.ExternalInterface.MsgContainer.MMsgCase getMMsgCase();
  }
  /**
   * Protobuf type {@code mcs.MsgContainer}
   */
  public  static final class MsgContainer extends
      com.google.protobuf.GeneratedMessageLite<
          MsgContainer, MsgContainer.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.MsgContainer)
      MsgContainerOrBuilder {
    private MsgContainer() {
    }
    private int mMsgCase_ = 0;
    private java.lang.Object mMsg_;
    public enum MMsgCase
        implements com.google.protobuf.Internal.EnumLite {
      M_MCS_CONNECT_ACS_COMMAND_MSG(1),
      M_ACS_CONNECT_ASSET_COMMAND_MSG(130),
      M_MCS_STATUS_MSG(2),
      M_ACS_STATUS_MSG(132),
      M_ACS_ASSET_TELEMETRY_MSG(129),
      M_ACS_ASSET_ALERT_MSG(133),
      M_ACS_ASSET_MOVEMENT_UPDATE_MSG(134),
      M_MCS_ADD_PROHIBITED_ZONE_MSG(3),
      M_MCS_REMOVE_PROHIBITED_ZONE_MSG(4),
      M_MCS_ADD_RED_FORCE_MSG(5),
      M_MCS_REMOVE_RED_FORCE_MSG(6),
      M_ACS_BATTLE_REPORT_MSG(135),
      M_MCS_TASK_SUMMARY_MSG(9),
      M_MCS_EXECUTE_TASK_COMMAND_MSG(10),
      M_MCS_ABORT_TASK_COMMAND_MSG(11),
      M_ACS_TASK_STATUS_UPDATE_MSG(138),
      M_SYS_IMAGE_MSG(17),
      M_SYS_ACK_MSG(16),
      MMSG_NOT_SET(0);
      private final int value;
      private MMsgCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MMsgCase valueOf(int value) {
        return forNumber(value);
      }

      public static MMsgCase forNumber(int value) {
        switch (value) {
          case 1: return M_MCS_CONNECT_ACS_COMMAND_MSG;
          case 130: return M_ACS_CONNECT_ASSET_COMMAND_MSG;
          case 2: return M_MCS_STATUS_MSG;
          case 132: return M_ACS_STATUS_MSG;
          case 129: return M_ACS_ASSET_TELEMETRY_MSG;
          case 133: return M_ACS_ASSET_ALERT_MSG;
          case 134: return M_ACS_ASSET_MOVEMENT_UPDATE_MSG;
          case 3: return M_MCS_ADD_PROHIBITED_ZONE_MSG;
          case 4: return M_MCS_REMOVE_PROHIBITED_ZONE_MSG;
          case 5: return M_MCS_ADD_RED_FORCE_MSG;
          case 6: return M_MCS_REMOVE_RED_FORCE_MSG;
          case 135: return M_ACS_BATTLE_REPORT_MSG;
          case 9: return M_MCS_TASK_SUMMARY_MSG;
          case 10: return M_MCS_EXECUTE_TASK_COMMAND_MSG;
          case 11: return M_MCS_ABORT_TASK_COMMAND_MSG;
          case 138: return M_ACS_TASK_STATUS_UPDATE_MSG;
          case 17: return M_SYS_IMAGE_MSG;
          case 16: return M_SYS_ACK_MSG;
          case 0: return MMSG_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MMsgCase
    getMMsgCase() {
      return MMsgCase.forNumber(
          mMsgCase_);
    }

    private void clearMMsg() {
      mMsgCase_ = 0;
      mMsg_ = null;
    }

    public static final int M_MCS_CONNECT_ACS_COMMAND_MSG_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Command Connection
     * </pre>
     *
     * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
     */
    public mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg getMMcsConnectAcsCommandMsg() {
      if (mMsgCase_ == 1) {
         return (mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.getDefaultInstance();
    }
    /**
     * <pre>
     * Command Connection
     * </pre>
     *
     * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
     */
    private void setMMcsConnectAcsCommandMsg(mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 1;
    }
    /**
     * <pre>
     * Command Connection
     * </pre>
     *
     * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
     */
    private void setMMcsConnectAcsCommandMsg(
        mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 1;
    }
    /**
     * <pre>
     * Command Connection
     * </pre>
     *
     * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
     */
    private void mergeMMcsConnectAcsCommandMsg(mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg value) {
      if (mMsgCase_ == 1 &&
          mMsg_ != mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.newBuilder((mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 1;
    }
    /**
     * <pre>
     * Command Connection
     * </pre>
     *
     * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
     */
    private void clearMMcsConnectAcsCommandMsg() {
      if (mMsgCase_ == 1) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_ACS_CONNECT_ASSET_COMMAND_MSG_FIELD_NUMBER = 130;
    /**
     * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
     */
    public mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg getMAcsConnectAssetCommandMsg() {
      if (mMsgCase_ == 130) {
         return (mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
     */
    private void setMAcsConnectAssetCommandMsg(mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 130;
    }
    /**
     * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
     */
    private void setMAcsConnectAssetCommandMsg(
        mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 130;
    }
    /**
     * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
     */
    private void mergeMAcsConnectAssetCommandMsg(mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg value) {
      if (mMsgCase_ == 130 &&
          mMsg_ != mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.newBuilder((mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 130;
    }
    /**
     * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
     */
    private void clearMAcsConnectAssetCommandMsg() {
      if (mMsgCase_ == 130) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_MCS_STATUS_MSG_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Status
     * </pre>
     *
     * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
     */
    public mcs.ExternalInterface.Mcs_McsStatus_Msg getMMcsStatusMsg() {
      if (mMsgCase_ == 2) {
         return (mcs.ExternalInterface.Mcs_McsStatus_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_McsStatus_Msg.getDefaultInstance();
    }
    /**
     * <pre>
     * Status
     * </pre>
     *
     * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
     */
    private void setMMcsStatusMsg(mcs.ExternalInterface.Mcs_McsStatus_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 2;
    }
    /**
     * <pre>
     * Status
     * </pre>
     *
     * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
     */
    private void setMMcsStatusMsg(
        mcs.ExternalInterface.Mcs_McsStatus_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 2;
    }
    /**
     * <pre>
     * Status
     * </pre>
     *
     * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
     */
    private void mergeMMcsStatusMsg(mcs.ExternalInterface.Mcs_McsStatus_Msg value) {
      if (mMsgCase_ == 2 &&
          mMsg_ != mcs.ExternalInterface.Mcs_McsStatus_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_McsStatus_Msg.newBuilder((mcs.ExternalInterface.Mcs_McsStatus_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 2;
    }
    /**
     * <pre>
     * Status
     * </pre>
     *
     * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
     */
    private void clearMMcsStatusMsg() {
      if (mMsgCase_ == 2) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_ACS_STATUS_MSG_FIELD_NUMBER = 132;
    /**
     * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
     */
    public mcs.ExternalInterface.Acs_AcsStatus_Msg getMAcsStatusMsg() {
      if (mMsgCase_ == 132) {
         return (mcs.ExternalInterface.Acs_AcsStatus_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Acs_AcsStatus_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
     */
    private void setMAcsStatusMsg(mcs.ExternalInterface.Acs_AcsStatus_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 132;
    }
    /**
     * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
     */
    private void setMAcsStatusMsg(
        mcs.ExternalInterface.Acs_AcsStatus_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 132;
    }
    /**
     * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
     */
    private void mergeMAcsStatusMsg(mcs.ExternalInterface.Acs_AcsStatus_Msg value) {
      if (mMsgCase_ == 132 &&
          mMsg_ != mcs.ExternalInterface.Acs_AcsStatus_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Acs_AcsStatus_Msg.newBuilder((mcs.ExternalInterface.Acs_AcsStatus_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 132;
    }
    /**
     * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
     */
    private void clearMAcsStatusMsg() {
      if (mMsgCase_ == 132) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_ACS_ASSET_TELEMETRY_MSG_FIELD_NUMBER = 129;
    /**
     * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
     */
    public mcs.ExternalInterface.Acs_AssetTelemetry_Msg getMAcsAssetTelemetryMsg() {
      if (mMsgCase_ == 129) {
         return (mcs.ExternalInterface.Acs_AssetTelemetry_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Acs_AssetTelemetry_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
     */
    private void setMAcsAssetTelemetryMsg(mcs.ExternalInterface.Acs_AssetTelemetry_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 129;
    }
    /**
     * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
     */
    private void setMAcsAssetTelemetryMsg(
        mcs.ExternalInterface.Acs_AssetTelemetry_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 129;
    }
    /**
     * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
     */
    private void mergeMAcsAssetTelemetryMsg(mcs.ExternalInterface.Acs_AssetTelemetry_Msg value) {
      if (mMsgCase_ == 129 &&
          mMsg_ != mcs.ExternalInterface.Acs_AssetTelemetry_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Acs_AssetTelemetry_Msg.newBuilder((mcs.ExternalInterface.Acs_AssetTelemetry_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 129;
    }
    /**
     * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
     */
    private void clearMAcsAssetTelemetryMsg() {
      if (mMsgCase_ == 129) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_ACS_ASSET_ALERT_MSG_FIELD_NUMBER = 133;
    /**
     * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
     */
    public mcs.ExternalInterface.Acs_AssetAlert_Msg getMAcsAssetAlertMsg() {
      if (mMsgCase_ == 133) {
         return (mcs.ExternalInterface.Acs_AssetAlert_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Acs_AssetAlert_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
     */
    private void setMAcsAssetAlertMsg(mcs.ExternalInterface.Acs_AssetAlert_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 133;
    }
    /**
     * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
     */
    private void setMAcsAssetAlertMsg(
        mcs.ExternalInterface.Acs_AssetAlert_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 133;
    }
    /**
     * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
     */
    private void mergeMAcsAssetAlertMsg(mcs.ExternalInterface.Acs_AssetAlert_Msg value) {
      if (mMsgCase_ == 133 &&
          mMsg_ != mcs.ExternalInterface.Acs_AssetAlert_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Acs_AssetAlert_Msg.newBuilder((mcs.ExternalInterface.Acs_AssetAlert_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 133;
    }
    /**
     * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
     */
    private void clearMAcsAssetAlertMsg() {
      if (mMsgCase_ == 133) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_ACS_ASSET_MOVEMENT_UPDATE_MSG_FIELD_NUMBER = 134;
    /**
     * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
     */
    public mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg getMAcsAssetMovementUpdateMsg() {
      if (mMsgCase_ == 134) {
         return (mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
     */
    private void setMAcsAssetMovementUpdateMsg(mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 134;
    }
    /**
     * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
     */
    private void setMAcsAssetMovementUpdateMsg(
        mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 134;
    }
    /**
     * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
     */
    private void mergeMAcsAssetMovementUpdateMsg(mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg value) {
      if (mMsgCase_ == 134 &&
          mMsg_ != mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.newBuilder((mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 134;
    }
    /**
     * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
     */
    private void clearMAcsAssetMovementUpdateMsg() {
      if (mMsgCase_ == 134) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_MCS_ADD_PROHIBITED_ZONE_MSG_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Battlefield Information
     * </pre>
     *
     * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
     */
    public mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg getMMcsAddProhibitedZoneMsg() {
      if (mMsgCase_ == 3) {
         return (mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.getDefaultInstance();
    }
    /**
     * <pre>
     * Battlefield Information
     * </pre>
     *
     * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
     */
    private void setMMcsAddProhibitedZoneMsg(mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 3;
    }
    /**
     * <pre>
     * Battlefield Information
     * </pre>
     *
     * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
     */
    private void setMMcsAddProhibitedZoneMsg(
        mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 3;
    }
    /**
     * <pre>
     * Battlefield Information
     * </pre>
     *
     * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
     */
    private void mergeMMcsAddProhibitedZoneMsg(mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg value) {
      if (mMsgCase_ == 3 &&
          mMsg_ != mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.newBuilder((mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 3;
    }
    /**
     * <pre>
     * Battlefield Information
     * </pre>
     *
     * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
     */
    private void clearMMcsAddProhibitedZoneMsg() {
      if (mMsgCase_ == 3) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_MCS_REMOVE_PROHIBITED_ZONE_MSG_FIELD_NUMBER = 4;
    /**
     * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
     */
    public mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg getMMcsRemoveProhibitedZoneMsg() {
      if (mMsgCase_ == 4) {
         return (mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
     */
    private void setMMcsRemoveProhibitedZoneMsg(mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 4;
    }
    /**
     * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
     */
    private void setMMcsRemoveProhibitedZoneMsg(
        mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 4;
    }
    /**
     * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
     */
    private void mergeMMcsRemoveProhibitedZoneMsg(mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg value) {
      if (mMsgCase_ == 4 &&
          mMsg_ != mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.newBuilder((mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 4;
    }
    /**
     * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
     */
    private void clearMMcsRemoveProhibitedZoneMsg() {
      if (mMsgCase_ == 4) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_MCS_ADD_RED_FORCE_MSG_FIELD_NUMBER = 5;
    /**
     * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
     */
    public mcs.ExternalInterface.Mcs_AddRedForce_Msg getMMcsAddRedForceMsg() {
      if (mMsgCase_ == 5) {
         return (mcs.ExternalInterface.Mcs_AddRedForce_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_AddRedForce_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
     */
    private void setMMcsAddRedForceMsg(mcs.ExternalInterface.Mcs_AddRedForce_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 5;
    }
    /**
     * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
     */
    private void setMMcsAddRedForceMsg(
        mcs.ExternalInterface.Mcs_AddRedForce_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 5;
    }
    /**
     * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
     */
    private void mergeMMcsAddRedForceMsg(mcs.ExternalInterface.Mcs_AddRedForce_Msg value) {
      if (mMsgCase_ == 5 &&
          mMsg_ != mcs.ExternalInterface.Mcs_AddRedForce_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_AddRedForce_Msg.newBuilder((mcs.ExternalInterface.Mcs_AddRedForce_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 5;
    }
    /**
     * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
     */
    private void clearMMcsAddRedForceMsg() {
      if (mMsgCase_ == 5) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_MCS_REMOVE_RED_FORCE_MSG_FIELD_NUMBER = 6;
    /**
     * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
     */
    public mcs.ExternalInterface.Mcs_RemoveRedForce_Msg getMMcsRemoveRedForceMsg() {
      if (mMsgCase_ == 6) {
         return (mcs.ExternalInterface.Mcs_RemoveRedForce_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
     */
    private void setMMcsRemoveRedForceMsg(mcs.ExternalInterface.Mcs_RemoveRedForce_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 6;
    }
    /**
     * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
     */
    private void setMMcsRemoveRedForceMsg(
        mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 6;
    }
    /**
     * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
     */
    private void mergeMMcsRemoveRedForceMsg(mcs.ExternalInterface.Mcs_RemoveRedForce_Msg value) {
      if (mMsgCase_ == 6 &&
          mMsg_ != mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.newBuilder((mcs.ExternalInterface.Mcs_RemoveRedForce_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 6;
    }
    /**
     * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
     */
    private void clearMMcsRemoveRedForceMsg() {
      if (mMsgCase_ == 6) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_ACS_BATTLE_REPORT_MSG_FIELD_NUMBER = 135;
    /**
     * <pre>
     * Report
     * </pre>
     *
     * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
     */
    public mcs.ExternalInterface.Acs_BattleReport_Msg getMAcsBattleReportMsg() {
      if (mMsgCase_ == 135) {
         return (mcs.ExternalInterface.Acs_BattleReport_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Acs_BattleReport_Msg.getDefaultInstance();
    }
    /**
     * <pre>
     * Report
     * </pre>
     *
     * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
     */
    private void setMAcsBattleReportMsg(mcs.ExternalInterface.Acs_BattleReport_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 135;
    }
    /**
     * <pre>
     * Report
     * </pre>
     *
     * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
     */
    private void setMAcsBattleReportMsg(
        mcs.ExternalInterface.Acs_BattleReport_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 135;
    }
    /**
     * <pre>
     * Report
     * </pre>
     *
     * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
     */
    private void mergeMAcsBattleReportMsg(mcs.ExternalInterface.Acs_BattleReport_Msg value) {
      if (mMsgCase_ == 135 &&
          mMsg_ != mcs.ExternalInterface.Acs_BattleReport_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Acs_BattleReport_Msg.newBuilder((mcs.ExternalInterface.Acs_BattleReport_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 135;
    }
    /**
     * <pre>
     * Report
     * </pre>
     *
     * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
     */
    private void clearMAcsBattleReportMsg() {
      if (mMsgCase_ == 135) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_MCS_TASK_SUMMARY_MSG_FIELD_NUMBER = 9;
    /**
     * <pre>
     * Task
     * </pre>
     *
     * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
     */
    public mcs.ExternalInterface.Mcs_TaskSummary_Msg getMMcsTaskSummaryMsg() {
      if (mMsgCase_ == 9) {
         return (mcs.ExternalInterface.Mcs_TaskSummary_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_TaskSummary_Msg.getDefaultInstance();
    }
    /**
     * <pre>
     * Task
     * </pre>
     *
     * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
     */
    private void setMMcsTaskSummaryMsg(mcs.ExternalInterface.Mcs_TaskSummary_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 9;
    }
    /**
     * <pre>
     * Task
     * </pre>
     *
     * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
     */
    private void setMMcsTaskSummaryMsg(
        mcs.ExternalInterface.Mcs_TaskSummary_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 9;
    }
    /**
     * <pre>
     * Task
     * </pre>
     *
     * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
     */
    private void mergeMMcsTaskSummaryMsg(mcs.ExternalInterface.Mcs_TaskSummary_Msg value) {
      if (mMsgCase_ == 9 &&
          mMsg_ != mcs.ExternalInterface.Mcs_TaskSummary_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_TaskSummary_Msg.newBuilder((mcs.ExternalInterface.Mcs_TaskSummary_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 9;
    }
    /**
     * <pre>
     * Task
     * </pre>
     *
     * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
     */
    private void clearMMcsTaskSummaryMsg() {
      if (mMsgCase_ == 9) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_MCS_EXECUTE_TASK_COMMAND_MSG_FIELD_NUMBER = 10;
    /**
     * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
     */
    public mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg getMMcsExecuteTaskCommandMsg() {
      if (mMsgCase_ == 10) {
         return (mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
     */
    private void setMMcsExecuteTaskCommandMsg(mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 10;
    }
    /**
     * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
     */
    private void setMMcsExecuteTaskCommandMsg(
        mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 10;
    }
    /**
     * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
     */
    private void mergeMMcsExecuteTaskCommandMsg(mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg value) {
      if (mMsgCase_ == 10 &&
          mMsg_ != mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.newBuilder((mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 10;
    }
    /**
     * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
     */
    private void clearMMcsExecuteTaskCommandMsg() {
      if (mMsgCase_ == 10) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_MCS_ABORT_TASK_COMMAND_MSG_FIELD_NUMBER = 11;
    /**
     * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
     */
    public mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg getMMcsAbortTaskCommandMsg() {
      if (mMsgCase_ == 11) {
         return (mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
     */
    private void setMMcsAbortTaskCommandMsg(mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 11;
    }
    /**
     * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
     */
    private void setMMcsAbortTaskCommandMsg(
        mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 11;
    }
    /**
     * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
     */
    private void mergeMMcsAbortTaskCommandMsg(mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg value) {
      if (mMsgCase_ == 11 &&
          mMsg_ != mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.newBuilder((mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 11;
    }
    /**
     * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
     */
    private void clearMMcsAbortTaskCommandMsg() {
      if (mMsgCase_ == 11) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_ACS_TASK_STATUS_UPDATE_MSG_FIELD_NUMBER = 138;
    /**
     * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
     */
    public mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg getMAcsTaskStatusUpdateMsg() {
      if (mMsgCase_ == 138) {
         return (mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.getDefaultInstance();
    }
    /**
     * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
     */
    private void setMAcsTaskStatusUpdateMsg(mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 138;
    }
    /**
     * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
     */
    private void setMAcsTaskStatusUpdateMsg(
        mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 138;
    }
    /**
     * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
     */
    private void mergeMAcsTaskStatusUpdateMsg(mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg value) {
      if (mMsgCase_ == 138 &&
          mMsg_ != mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.newBuilder((mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 138;
    }
    /**
     * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
     */
    private void clearMAcsTaskStatusUpdateMsg() {
      if (mMsgCase_ == 138) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_SYS_IMAGE_MSG_FIELD_NUMBER = 17;
    /**
     * <pre>
     * Image
     * </pre>
     *
     * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
     */
    public mcs.ExternalInterface.Sys_Image_Msg getMSysImageMsg() {
      if (mMsgCase_ == 17) {
         return (mcs.ExternalInterface.Sys_Image_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Sys_Image_Msg.getDefaultInstance();
    }
    /**
     * <pre>
     * Image
     * </pre>
     *
     * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
     */
    private void setMSysImageMsg(mcs.ExternalInterface.Sys_Image_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 17;
    }
    /**
     * <pre>
     * Image
     * </pre>
     *
     * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
     */
    private void setMSysImageMsg(
        mcs.ExternalInterface.Sys_Image_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 17;
    }
    /**
     * <pre>
     * Image
     * </pre>
     *
     * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
     */
    private void mergeMSysImageMsg(mcs.ExternalInterface.Sys_Image_Msg value) {
      if (mMsgCase_ == 17 &&
          mMsg_ != mcs.ExternalInterface.Sys_Image_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Sys_Image_Msg.newBuilder((mcs.ExternalInterface.Sys_Image_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 17;
    }
    /**
     * <pre>
     * Image
     * </pre>
     *
     * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
     */
    private void clearMSysImageMsg() {
      if (mMsgCase_ == 17) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public static final int M_SYS_ACK_MSG_FIELD_NUMBER = 16;
    /**
     * <pre>
     * Acknowledgement
     * </pre>
     *
     * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
     */
    public mcs.ExternalInterface.Sys_Ack_Msg getMSysAckMsg() {
      if (mMsgCase_ == 16) {
         return (mcs.ExternalInterface.Sys_Ack_Msg) mMsg_;
      }
      return mcs.ExternalInterface.Sys_Ack_Msg.getDefaultInstance();
    }
    /**
     * <pre>
     * Acknowledgement
     * </pre>
     *
     * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
     */
    private void setMSysAckMsg(mcs.ExternalInterface.Sys_Ack_Msg value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsg_ = value;
      mMsgCase_ = 16;
    }
    /**
     * <pre>
     * Acknowledgement
     * </pre>
     *
     * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
     */
    private void setMSysAckMsg(
        mcs.ExternalInterface.Sys_Ack_Msg.Builder builderForValue) {
      mMsg_ = builderForValue.build();
      mMsgCase_ = 16;
    }
    /**
     * <pre>
     * Acknowledgement
     * </pre>
     *
     * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
     */
    private void mergeMSysAckMsg(mcs.ExternalInterface.Sys_Ack_Msg value) {
      if (mMsgCase_ == 16 &&
          mMsg_ != mcs.ExternalInterface.Sys_Ack_Msg.getDefaultInstance()) {
        mMsg_ = mcs.ExternalInterface.Sys_Ack_Msg.newBuilder((mcs.ExternalInterface.Sys_Ack_Msg) mMsg_)
            .mergeFrom(value).buildPartial();
      } else {
        mMsg_ = value;
      }
      mMsgCase_ = 16;
    }
    /**
     * <pre>
     * Acknowledgement
     * </pre>
     *
     * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
     */
    private void clearMSysAckMsg() {
      if (mMsgCase_ == 16) {
        mMsgCase_ = 0;
        mMsg_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgCase_ == 1) {
        output.writeMessage(1, (mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg) mMsg_);
      }
      if (mMsgCase_ == 2) {
        output.writeMessage(2, (mcs.ExternalInterface.Mcs_McsStatus_Msg) mMsg_);
      }
      if (mMsgCase_ == 3) {
        output.writeMessage(3, (mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg) mMsg_);
      }
      if (mMsgCase_ == 4) {
        output.writeMessage(4, (mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg) mMsg_);
      }
      if (mMsgCase_ == 5) {
        output.writeMessage(5, (mcs.ExternalInterface.Mcs_AddRedForce_Msg) mMsg_);
      }
      if (mMsgCase_ == 6) {
        output.writeMessage(6, (mcs.ExternalInterface.Mcs_RemoveRedForce_Msg) mMsg_);
      }
      if (mMsgCase_ == 9) {
        output.writeMessage(9, (mcs.ExternalInterface.Mcs_TaskSummary_Msg) mMsg_);
      }
      if (mMsgCase_ == 10) {
        output.writeMessage(10, (mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg) mMsg_);
      }
      if (mMsgCase_ == 11) {
        output.writeMessage(11, (mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg) mMsg_);
      }
      if (mMsgCase_ == 16) {
        output.writeMessage(16, (mcs.ExternalInterface.Sys_Ack_Msg) mMsg_);
      }
      if (mMsgCase_ == 17) {
        output.writeMessage(17, (mcs.ExternalInterface.Sys_Image_Msg) mMsg_);
      }
      if (mMsgCase_ == 129) {
        output.writeMessage(129, (mcs.ExternalInterface.Acs_AssetTelemetry_Msg) mMsg_);
      }
      if (mMsgCase_ == 130) {
        output.writeMessage(130, (mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg) mMsg_);
      }
      if (mMsgCase_ == 132) {
        output.writeMessage(132, (mcs.ExternalInterface.Acs_AcsStatus_Msg) mMsg_);
      }
      if (mMsgCase_ == 133) {
        output.writeMessage(133, (mcs.ExternalInterface.Acs_AssetAlert_Msg) mMsg_);
      }
      if (mMsgCase_ == 134) {
        output.writeMessage(134, (mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg) mMsg_);
      }
      if (mMsgCase_ == 135) {
        output.writeMessage(135, (mcs.ExternalInterface.Acs_BattleReport_Msg) mMsg_);
      }
      if (mMsgCase_ == 138) {
        output.writeMessage(138, (mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg) mMsg_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg) mMsg_);
      }
      if (mMsgCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (mcs.ExternalInterface.Mcs_McsStatus_Msg) mMsg_);
      }
      if (mMsgCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg) mMsg_);
      }
      if (mMsgCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg) mMsg_);
      }
      if (mMsgCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (mcs.ExternalInterface.Mcs_AddRedForce_Msg) mMsg_);
      }
      if (mMsgCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (mcs.ExternalInterface.Mcs_RemoveRedForce_Msg) mMsg_);
      }
      if (mMsgCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (mcs.ExternalInterface.Mcs_TaskSummary_Msg) mMsg_);
      }
      if (mMsgCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg) mMsg_);
      }
      if (mMsgCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg) mMsg_);
      }
      if (mMsgCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, (mcs.ExternalInterface.Sys_Ack_Msg) mMsg_);
      }
      if (mMsgCase_ == 17) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, (mcs.ExternalInterface.Sys_Image_Msg) mMsg_);
      }
      if (mMsgCase_ == 129) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(129, (mcs.ExternalInterface.Acs_AssetTelemetry_Msg) mMsg_);
      }
      if (mMsgCase_ == 130) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(130, (mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg) mMsg_);
      }
      if (mMsgCase_ == 132) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(132, (mcs.ExternalInterface.Acs_AcsStatus_Msg) mMsg_);
      }
      if (mMsgCase_ == 133) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(133, (mcs.ExternalInterface.Acs_AssetAlert_Msg) mMsg_);
      }
      if (mMsgCase_ == 134) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(134, (mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg) mMsg_);
      }
      if (mMsgCase_ == 135) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(135, (mcs.ExternalInterface.Acs_BattleReport_Msg) mMsg_);
      }
      if (mMsgCase_ == 138) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(138, (mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg) mMsg_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.MsgContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.MsgContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.MsgContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.MsgContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.MsgContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.MsgContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.MsgContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.MsgContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.MsgContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.MsgContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.MsgContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.MsgContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.MsgContainer, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.MsgContainer)
        mcs.ExternalInterface.MsgContainerOrBuilder {
      // Construct using mcs.ExternalInterface.MsgContainer.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public MMsgCase
          getMMsgCase() {
        return instance.getMMsgCase();
      }

      public Builder clearMMsg() {
        copyOnWrite();
        instance.clearMMsg();
        return this;
      }


      /**
       * <pre>
       * Command Connection
       * </pre>
       *
       * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
       */
      public mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg getMMcsConnectAcsCommandMsg() {
        return instance.getMMcsConnectAcsCommandMsg();
      }
      /**
       * <pre>
       * Command Connection
       * </pre>
       *
       * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
       */
      public Builder setMMcsConnectAcsCommandMsg(mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg value) {
        copyOnWrite();
        instance.setMMcsConnectAcsCommandMsg(value);
        return this;
      }
      /**
       * <pre>
       * Command Connection
       * </pre>
       *
       * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
       */
      public Builder setMMcsConnectAcsCommandMsg(
          mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsConnectAcsCommandMsg(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Command Connection
       * </pre>
       *
       * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
       */
      public Builder mergeMMcsConnectAcsCommandMsg(mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg value) {
        copyOnWrite();
        instance.mergeMMcsConnectAcsCommandMsg(value);
        return this;
      }
      /**
       * <pre>
       * Command Connection
       * </pre>
       *
       * <code>optional .mcs.Mcs_ConnectAcsCommand_Msg m_mcs_connect_acs_command_msg = 1;</code>
       */
      public Builder clearMMcsConnectAcsCommandMsg() {
        copyOnWrite();
        instance.clearMMcsConnectAcsCommandMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
       */
      public mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg getMAcsConnectAssetCommandMsg() {
        return instance.getMAcsConnectAssetCommandMsg();
      }
      /**
       * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
       */
      public Builder setMAcsConnectAssetCommandMsg(mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg value) {
        copyOnWrite();
        instance.setMAcsConnectAssetCommandMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
       */
      public Builder setMAcsConnectAssetCommandMsg(
          mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMAcsConnectAssetCommandMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
       */
      public Builder mergeMAcsConnectAssetCommandMsg(mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg value) {
        copyOnWrite();
        instance.mergeMAcsConnectAssetCommandMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_ConnectAssetCommand_Msg m_acs_connect_asset_command_msg = 130;</code>
       */
      public Builder clearMAcsConnectAssetCommandMsg() {
        copyOnWrite();
        instance.clearMAcsConnectAssetCommandMsg();
        return this;
      }

      /**
       * <pre>
       * Status
       * </pre>
       *
       * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
       */
      public mcs.ExternalInterface.Mcs_McsStatus_Msg getMMcsStatusMsg() {
        return instance.getMMcsStatusMsg();
      }
      /**
       * <pre>
       * Status
       * </pre>
       *
       * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
       */
      public Builder setMMcsStatusMsg(mcs.ExternalInterface.Mcs_McsStatus_Msg value) {
        copyOnWrite();
        instance.setMMcsStatusMsg(value);
        return this;
      }
      /**
       * <pre>
       * Status
       * </pre>
       *
       * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
       */
      public Builder setMMcsStatusMsg(
          mcs.ExternalInterface.Mcs_McsStatus_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsStatusMsg(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Status
       * </pre>
       *
       * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
       */
      public Builder mergeMMcsStatusMsg(mcs.ExternalInterface.Mcs_McsStatus_Msg value) {
        copyOnWrite();
        instance.mergeMMcsStatusMsg(value);
        return this;
      }
      /**
       * <pre>
       * Status
       * </pre>
       *
       * <code>optional .mcs.Mcs_McsStatus_Msg m_mcs_status_msg = 2;</code>
       */
      public Builder clearMMcsStatusMsg() {
        copyOnWrite();
        instance.clearMMcsStatusMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
       */
      public mcs.ExternalInterface.Acs_AcsStatus_Msg getMAcsStatusMsg() {
        return instance.getMAcsStatusMsg();
      }
      /**
       * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
       */
      public Builder setMAcsStatusMsg(mcs.ExternalInterface.Acs_AcsStatus_Msg value) {
        copyOnWrite();
        instance.setMAcsStatusMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
       */
      public Builder setMAcsStatusMsg(
          mcs.ExternalInterface.Acs_AcsStatus_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMAcsStatusMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
       */
      public Builder mergeMAcsStatusMsg(mcs.ExternalInterface.Acs_AcsStatus_Msg value) {
        copyOnWrite();
        instance.mergeMAcsStatusMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AcsStatus_Msg m_acs_status_msg = 132;</code>
       */
      public Builder clearMAcsStatusMsg() {
        copyOnWrite();
        instance.clearMAcsStatusMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
       */
      public mcs.ExternalInterface.Acs_AssetTelemetry_Msg getMAcsAssetTelemetryMsg() {
        return instance.getMAcsAssetTelemetryMsg();
      }
      /**
       * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
       */
      public Builder setMAcsAssetTelemetryMsg(mcs.ExternalInterface.Acs_AssetTelemetry_Msg value) {
        copyOnWrite();
        instance.setMAcsAssetTelemetryMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
       */
      public Builder setMAcsAssetTelemetryMsg(
          mcs.ExternalInterface.Acs_AssetTelemetry_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMAcsAssetTelemetryMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
       */
      public Builder mergeMAcsAssetTelemetryMsg(mcs.ExternalInterface.Acs_AssetTelemetry_Msg value) {
        copyOnWrite();
        instance.mergeMAcsAssetTelemetryMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetTelemetry_Msg m_acs_asset_telemetry_msg = 129;</code>
       */
      public Builder clearMAcsAssetTelemetryMsg() {
        copyOnWrite();
        instance.clearMAcsAssetTelemetryMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
       */
      public mcs.ExternalInterface.Acs_AssetAlert_Msg getMAcsAssetAlertMsg() {
        return instance.getMAcsAssetAlertMsg();
      }
      /**
       * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
       */
      public Builder setMAcsAssetAlertMsg(mcs.ExternalInterface.Acs_AssetAlert_Msg value) {
        copyOnWrite();
        instance.setMAcsAssetAlertMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
       */
      public Builder setMAcsAssetAlertMsg(
          mcs.ExternalInterface.Acs_AssetAlert_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMAcsAssetAlertMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
       */
      public Builder mergeMAcsAssetAlertMsg(mcs.ExternalInterface.Acs_AssetAlert_Msg value) {
        copyOnWrite();
        instance.mergeMAcsAssetAlertMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetAlert_Msg m_acs_asset_alert_msg = 133;</code>
       */
      public Builder clearMAcsAssetAlertMsg() {
        copyOnWrite();
        instance.clearMAcsAssetAlertMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
       */
      public mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg getMAcsAssetMovementUpdateMsg() {
        return instance.getMAcsAssetMovementUpdateMsg();
      }
      /**
       * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
       */
      public Builder setMAcsAssetMovementUpdateMsg(mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg value) {
        copyOnWrite();
        instance.setMAcsAssetMovementUpdateMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
       */
      public Builder setMAcsAssetMovementUpdateMsg(
          mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMAcsAssetMovementUpdateMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
       */
      public Builder mergeMAcsAssetMovementUpdateMsg(mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg value) {
        copyOnWrite();
        instance.mergeMAcsAssetMovementUpdateMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_AssetMovementUpdate_Msg m_acs_asset_movement_update_msg = 134;</code>
       */
      public Builder clearMAcsAssetMovementUpdateMsg() {
        copyOnWrite();
        instance.clearMAcsAssetMovementUpdateMsg();
        return this;
      }

      /**
       * <pre>
       * Battlefield Information
       * </pre>
       *
       * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
       */
      public mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg getMMcsAddProhibitedZoneMsg() {
        return instance.getMMcsAddProhibitedZoneMsg();
      }
      /**
       * <pre>
       * Battlefield Information
       * </pre>
       *
       * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
       */
      public Builder setMMcsAddProhibitedZoneMsg(mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg value) {
        copyOnWrite();
        instance.setMMcsAddProhibitedZoneMsg(value);
        return this;
      }
      /**
       * <pre>
       * Battlefield Information
       * </pre>
       *
       * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
       */
      public Builder setMMcsAddProhibitedZoneMsg(
          mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsAddProhibitedZoneMsg(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Battlefield Information
       * </pre>
       *
       * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
       */
      public Builder mergeMMcsAddProhibitedZoneMsg(mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg value) {
        copyOnWrite();
        instance.mergeMMcsAddProhibitedZoneMsg(value);
        return this;
      }
      /**
       * <pre>
       * Battlefield Information
       * </pre>
       *
       * <code>optional .mcs.Mcs_AddProhibitedZone_Msg m_mcs_add_prohibited_zone_msg = 3;</code>
       */
      public Builder clearMMcsAddProhibitedZoneMsg() {
        copyOnWrite();
        instance.clearMMcsAddProhibitedZoneMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
       */
      public mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg getMMcsRemoveProhibitedZoneMsg() {
        return instance.getMMcsRemoveProhibitedZoneMsg();
      }
      /**
       * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
       */
      public Builder setMMcsRemoveProhibitedZoneMsg(mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg value) {
        copyOnWrite();
        instance.setMMcsRemoveProhibitedZoneMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
       */
      public Builder setMMcsRemoveProhibitedZoneMsg(
          mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsRemoveProhibitedZoneMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
       */
      public Builder mergeMMcsRemoveProhibitedZoneMsg(mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg value) {
        copyOnWrite();
        instance.mergeMMcsRemoveProhibitedZoneMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_RemoveProhibitedZone_Msg m_mcs_remove_prohibited_zone_msg = 4;</code>
       */
      public Builder clearMMcsRemoveProhibitedZoneMsg() {
        copyOnWrite();
        instance.clearMMcsRemoveProhibitedZoneMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
       */
      public mcs.ExternalInterface.Mcs_AddRedForce_Msg getMMcsAddRedForceMsg() {
        return instance.getMMcsAddRedForceMsg();
      }
      /**
       * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
       */
      public Builder setMMcsAddRedForceMsg(mcs.ExternalInterface.Mcs_AddRedForce_Msg value) {
        copyOnWrite();
        instance.setMMcsAddRedForceMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
       */
      public Builder setMMcsAddRedForceMsg(
          mcs.ExternalInterface.Mcs_AddRedForce_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsAddRedForceMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
       */
      public Builder mergeMMcsAddRedForceMsg(mcs.ExternalInterface.Mcs_AddRedForce_Msg value) {
        copyOnWrite();
        instance.mergeMMcsAddRedForceMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_AddRedForce_Msg m_mcs_add_red_force_msg = 5;</code>
       */
      public Builder clearMMcsAddRedForceMsg() {
        copyOnWrite();
        instance.clearMMcsAddRedForceMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
       */
      public mcs.ExternalInterface.Mcs_RemoveRedForce_Msg getMMcsRemoveRedForceMsg() {
        return instance.getMMcsRemoveRedForceMsg();
      }
      /**
       * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
       */
      public Builder setMMcsRemoveRedForceMsg(mcs.ExternalInterface.Mcs_RemoveRedForce_Msg value) {
        copyOnWrite();
        instance.setMMcsRemoveRedForceMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
       */
      public Builder setMMcsRemoveRedForceMsg(
          mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsRemoveRedForceMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
       */
      public Builder mergeMMcsRemoveRedForceMsg(mcs.ExternalInterface.Mcs_RemoveRedForce_Msg value) {
        copyOnWrite();
        instance.mergeMMcsRemoveRedForceMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_RemoveRedForce_Msg m_mcs_remove_red_force_msg = 6;</code>
       */
      public Builder clearMMcsRemoveRedForceMsg() {
        copyOnWrite();
        instance.clearMMcsRemoveRedForceMsg();
        return this;
      }

      /**
       * <pre>
       * Report
       * </pre>
       *
       * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
       */
      public mcs.ExternalInterface.Acs_BattleReport_Msg getMAcsBattleReportMsg() {
        return instance.getMAcsBattleReportMsg();
      }
      /**
       * <pre>
       * Report
       * </pre>
       *
       * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
       */
      public Builder setMAcsBattleReportMsg(mcs.ExternalInterface.Acs_BattleReport_Msg value) {
        copyOnWrite();
        instance.setMAcsBattleReportMsg(value);
        return this;
      }
      /**
       * <pre>
       * Report
       * </pre>
       *
       * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
       */
      public Builder setMAcsBattleReportMsg(
          mcs.ExternalInterface.Acs_BattleReport_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMAcsBattleReportMsg(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Report
       * </pre>
       *
       * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
       */
      public Builder mergeMAcsBattleReportMsg(mcs.ExternalInterface.Acs_BattleReport_Msg value) {
        copyOnWrite();
        instance.mergeMAcsBattleReportMsg(value);
        return this;
      }
      /**
       * <pre>
       * Report
       * </pre>
       *
       * <code>optional .mcs.Acs_BattleReport_Msg m_acs_battle_report_msg = 135;</code>
       */
      public Builder clearMAcsBattleReportMsg() {
        copyOnWrite();
        instance.clearMAcsBattleReportMsg();
        return this;
      }

      /**
       * <pre>
       * Task
       * </pre>
       *
       * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
       */
      public mcs.ExternalInterface.Mcs_TaskSummary_Msg getMMcsTaskSummaryMsg() {
        return instance.getMMcsTaskSummaryMsg();
      }
      /**
       * <pre>
       * Task
       * </pre>
       *
       * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
       */
      public Builder setMMcsTaskSummaryMsg(mcs.ExternalInterface.Mcs_TaskSummary_Msg value) {
        copyOnWrite();
        instance.setMMcsTaskSummaryMsg(value);
        return this;
      }
      /**
       * <pre>
       * Task
       * </pre>
       *
       * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
       */
      public Builder setMMcsTaskSummaryMsg(
          mcs.ExternalInterface.Mcs_TaskSummary_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsTaskSummaryMsg(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Task
       * </pre>
       *
       * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
       */
      public Builder mergeMMcsTaskSummaryMsg(mcs.ExternalInterface.Mcs_TaskSummary_Msg value) {
        copyOnWrite();
        instance.mergeMMcsTaskSummaryMsg(value);
        return this;
      }
      /**
       * <pre>
       * Task
       * </pre>
       *
       * <code>optional .mcs.Mcs_TaskSummary_Msg m_mcs_task_summary_msg = 9;</code>
       */
      public Builder clearMMcsTaskSummaryMsg() {
        copyOnWrite();
        instance.clearMMcsTaskSummaryMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
       */
      public mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg getMMcsExecuteTaskCommandMsg() {
        return instance.getMMcsExecuteTaskCommandMsg();
      }
      /**
       * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
       */
      public Builder setMMcsExecuteTaskCommandMsg(mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg value) {
        copyOnWrite();
        instance.setMMcsExecuteTaskCommandMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
       */
      public Builder setMMcsExecuteTaskCommandMsg(
          mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsExecuteTaskCommandMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
       */
      public Builder mergeMMcsExecuteTaskCommandMsg(mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg value) {
        copyOnWrite();
        instance.mergeMMcsExecuteTaskCommandMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_ExecuteTaskCommand_Msg m_mcs_execute_task_command_msg = 10;</code>
       */
      public Builder clearMMcsExecuteTaskCommandMsg() {
        copyOnWrite();
        instance.clearMMcsExecuteTaskCommandMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
       */
      public mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg getMMcsAbortTaskCommandMsg() {
        return instance.getMMcsAbortTaskCommandMsg();
      }
      /**
       * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
       */
      public Builder setMMcsAbortTaskCommandMsg(mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg value) {
        copyOnWrite();
        instance.setMMcsAbortTaskCommandMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
       */
      public Builder setMMcsAbortTaskCommandMsg(
          mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMMcsAbortTaskCommandMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
       */
      public Builder mergeMMcsAbortTaskCommandMsg(mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg value) {
        copyOnWrite();
        instance.mergeMMcsAbortTaskCommandMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Mcs_AbortTaskCommand_Msg m_mcs_abort_task_command_msg = 11;</code>
       */
      public Builder clearMMcsAbortTaskCommandMsg() {
        copyOnWrite();
        instance.clearMMcsAbortTaskCommandMsg();
        return this;
      }

      /**
       * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
       */
      public mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg getMAcsTaskStatusUpdateMsg() {
        return instance.getMAcsTaskStatusUpdateMsg();
      }
      /**
       * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
       */
      public Builder setMAcsTaskStatusUpdateMsg(mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg value) {
        copyOnWrite();
        instance.setMAcsTaskStatusUpdateMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
       */
      public Builder setMAcsTaskStatusUpdateMsg(
          mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMAcsTaskStatusUpdateMsg(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
       */
      public Builder mergeMAcsTaskStatusUpdateMsg(mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg value) {
        copyOnWrite();
        instance.mergeMAcsTaskStatusUpdateMsg(value);
        return this;
      }
      /**
       * <code>optional .mcs.Acs_TaskStatusUpdate_Msg m_acs_task_status_update_msg = 138;</code>
       */
      public Builder clearMAcsTaskStatusUpdateMsg() {
        copyOnWrite();
        instance.clearMAcsTaskStatusUpdateMsg();
        return this;
      }

      /**
       * <pre>
       * Image
       * </pre>
       *
       * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
       */
      public mcs.ExternalInterface.Sys_Image_Msg getMSysImageMsg() {
        return instance.getMSysImageMsg();
      }
      /**
       * <pre>
       * Image
       * </pre>
       *
       * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
       */
      public Builder setMSysImageMsg(mcs.ExternalInterface.Sys_Image_Msg value) {
        copyOnWrite();
        instance.setMSysImageMsg(value);
        return this;
      }
      /**
       * <pre>
       * Image
       * </pre>
       *
       * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
       */
      public Builder setMSysImageMsg(
          mcs.ExternalInterface.Sys_Image_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMSysImageMsg(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Image
       * </pre>
       *
       * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
       */
      public Builder mergeMSysImageMsg(mcs.ExternalInterface.Sys_Image_Msg value) {
        copyOnWrite();
        instance.mergeMSysImageMsg(value);
        return this;
      }
      /**
       * <pre>
       * Image
       * </pre>
       *
       * <code>optional .mcs.Sys_Image_Msg m_sys_image_msg = 17;</code>
       */
      public Builder clearMSysImageMsg() {
        copyOnWrite();
        instance.clearMSysImageMsg();
        return this;
      }

      /**
       * <pre>
       * Acknowledgement
       * </pre>
       *
       * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
       */
      public mcs.ExternalInterface.Sys_Ack_Msg getMSysAckMsg() {
        return instance.getMSysAckMsg();
      }
      /**
       * <pre>
       * Acknowledgement
       * </pre>
       *
       * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
       */
      public Builder setMSysAckMsg(mcs.ExternalInterface.Sys_Ack_Msg value) {
        copyOnWrite();
        instance.setMSysAckMsg(value);
        return this;
      }
      /**
       * <pre>
       * Acknowledgement
       * </pre>
       *
       * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
       */
      public Builder setMSysAckMsg(
          mcs.ExternalInterface.Sys_Ack_Msg.Builder builderForValue) {
        copyOnWrite();
        instance.setMSysAckMsg(builderForValue);
        return this;
      }
      /**
       * <pre>
       * Acknowledgement
       * </pre>
       *
       * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
       */
      public Builder mergeMSysAckMsg(mcs.ExternalInterface.Sys_Ack_Msg value) {
        copyOnWrite();
        instance.mergeMSysAckMsg(value);
        return this;
      }
      /**
       * <pre>
       * Acknowledgement
       * </pre>
       *
       * <code>optional .mcs.Sys_Ack_Msg m_sys_ack_msg = 16;</code>
       */
      public Builder clearMSysAckMsg() {
        copyOnWrite();
        instance.clearMSysAckMsg();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.MsgContainer)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.MsgContainer();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.MsgContainer other = (mcs.ExternalInterface.MsgContainer) arg1;
          switch (other.getMMsgCase()) {
            case M_MCS_CONNECT_ACS_COMMAND_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 1,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_ACS_CONNECT_ASSET_COMMAND_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 130,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_MCS_STATUS_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 2,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_ACS_STATUS_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 132,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_ACS_ASSET_TELEMETRY_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 129,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_ACS_ASSET_ALERT_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 133,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_ACS_ASSET_MOVEMENT_UPDATE_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 134,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_MCS_ADD_PROHIBITED_ZONE_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 3,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_MCS_REMOVE_PROHIBITED_ZONE_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 4,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_MCS_ADD_RED_FORCE_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 5,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_MCS_REMOVE_RED_FORCE_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 6,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_ACS_BATTLE_REPORT_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 135,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_MCS_TASK_SUMMARY_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 9,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_MCS_EXECUTE_TASK_COMMAND_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 10,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_MCS_ABORT_TASK_COMMAND_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 11,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_ACS_TASK_STATUS_UPDATE_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 138,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_SYS_IMAGE_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 17,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case M_SYS_ACK_MSG: {
              mMsg_ = visitor.visitOneofMessage(
                  mMsgCase_ == 16,
                  mMsg_,
                  other.mMsg_);
              break;
            }
            case MMSG_NOT_SET: {
              visitor.visitOneofNotSet(mMsgCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.mMsgCase_ != 0) {
              mMsgCase_ = other.mMsgCase_;
            }
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 1) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 1;
                  break;
                }
                case 18: {
                  mcs.ExternalInterface.Mcs_McsStatus_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 2) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_McsStatus_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_McsStatus_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_McsStatus_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 2;
                  break;
                }
                case 26: {
                  mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 3) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 3;
                  break;
                }
                case 34: {
                  mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 4) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 4;
                  break;
                }
                case 42: {
                  mcs.ExternalInterface.Mcs_AddRedForce_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 5) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_AddRedForce_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_AddRedForce_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_AddRedForce_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 5;
                  break;
                }
                case 50: {
                  mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 6) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_RemoveRedForce_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_RemoveRedForce_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 6;
                  break;
                }
                case 74: {
                  mcs.ExternalInterface.Mcs_TaskSummary_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 9) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_TaskSummary_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_TaskSummary_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_TaskSummary_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 9;
                  break;
                }
                case 82: {
                  mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 10) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 10;
                  break;
                }
                case 90: {
                  mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 11) {
                    subBuilder = ((mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 11;
                  break;
                }
                case 130: {
                  mcs.ExternalInterface.Sys_Ack_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 16) {
                    subBuilder = ((mcs.ExternalInterface.Sys_Ack_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Sys_Ack_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Sys_Ack_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 16;
                  break;
                }
                case 138: {
                  mcs.ExternalInterface.Sys_Image_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 17) {
                    subBuilder = ((mcs.ExternalInterface.Sys_Image_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Sys_Image_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Sys_Image_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 17;
                  break;
                }
                case 1034: {
                  mcs.ExternalInterface.Acs_AssetTelemetry_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 129) {
                    subBuilder = ((mcs.ExternalInterface.Acs_AssetTelemetry_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Acs_AssetTelemetry_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Acs_AssetTelemetry_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 129;
                  break;
                }
                case 1042: {
                  mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 130) {
                    subBuilder = ((mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 130;
                  break;
                }
                case 1058: {
                  mcs.ExternalInterface.Acs_AcsStatus_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 132) {
                    subBuilder = ((mcs.ExternalInterface.Acs_AcsStatus_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Acs_AcsStatus_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Acs_AcsStatus_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 132;
                  break;
                }
                case 1066: {
                  mcs.ExternalInterface.Acs_AssetAlert_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 133) {
                    subBuilder = ((mcs.ExternalInterface.Acs_AssetAlert_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Acs_AssetAlert_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Acs_AssetAlert_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 133;
                  break;
                }
                case 1074: {
                  mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 134) {
                    subBuilder = ((mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 134;
                  break;
                }
                case 1082: {
                  mcs.ExternalInterface.Acs_BattleReport_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 135) {
                    subBuilder = ((mcs.ExternalInterface.Acs_BattleReport_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Acs_BattleReport_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Acs_BattleReport_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 135;
                  break;
                }
                case 1106: {
                  mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.Builder subBuilder = null;
                  if (mMsgCase_ == 138) {
                    subBuilder = ((mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg) mMsg_).toBuilder();
                  }
                  mMsg_ =
                       input.readMessage(mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg) mMsg_);
                    mMsg_ = subBuilder.buildPartial();
                  }
                  mMsgCase_ = 138;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.MsgContainer.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.MsgContainer)
    private static final mcs.ExternalInterface.MsgContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgContainer();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.MsgContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MsgContainer> PARSER;

    public static com.google.protobuf.Parser<MsgContainer> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface BattleReport_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.BattleReport_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 1;</code>
     */
    int getMAssetId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 2;</code>
     */
    int getMRedForceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Report ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_report_id = 3;</code>
     */
    int getMReportId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time of the battle report.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_report_timestamp = 4;</code>
     */
    long getMReportTimestamp();

    /**
     * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
     */
    int getMReportTypeValue();
    /**
     * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
     */
    mcs.ExternalInterface.ReportType_Enum getMReportType();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
     */
    int getMBdaOutcomeObserverValue();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
     */
    mcs.ExternalInterface.BdaOutcomeObserver_Enum getMBdaOutcomeObserver();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
     */
    int getMBdaOutcomeValue();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
     */
    mcs.ExternalInterface.BdaOutcome_Enum getMBdaOutcome();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Target location
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 8;</code>
     */
    boolean hasMLocation();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Target location
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 8;</code>
     */
    mcs.ExternalInterface.Location_Struct getMLocation();

    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
     */
    int getMTargetAffiliationValue();
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
     */
    mcs.ExternalInterface.Affiliation_Enum getMTargetAffiliation();

    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
     */
    int getMTargetBattleDimensionValue();
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
     */
    mcs.ExternalInterface.BattleDimension_Enum getMTargetBattleDimension();

    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
     */
    int getMTargetTypeValue();
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
     */
    mcs.ExternalInterface.TrackClassification_Enum getMTargetType();

    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
     */
    int getMUnitOfMeasureValue();
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
     */
    mcs.ExternalInterface.UnitOfMeasure_Enum getMUnitOfMeasure();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Quantity of target.  -1 if quantity is not known.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_quantity = 13;</code>
     */
    int getMQuantity();

    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    java.util.List<mcs.ExternalInterface.ImageMetadata_Struct> 
        getMImageMetadataList();
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    mcs.ExternalInterface.ImageMetadata_Struct getMImageMetadata(int index);
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    int getMImageMetadataCount();
  }
  /**
   * Protobuf type {@code mcs.BattleReport_Struct}
   */
  public  static final class BattleReport_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          BattleReport_Struct, BattleReport_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.BattleReport_Struct)
      BattleReport_StructOrBuilder {
    private BattleReport_Struct() {
      mImageMetadata_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int M_ASSET_ID_FIELD_NUMBER = 1;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 1;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 1;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 1;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_RED_FORCE_ID_FIELD_NUMBER = 2;
    private int mRedForceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 2;</code>
     */
    public int getMRedForceId() {
      return mRedForceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 2;</code>
     */
    private void setMRedForceId(int value) {
      
      mRedForceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 2;</code>
     */
    private void clearMRedForceId() {
      
      mRedForceId_ = 0;
    }

    public static final int M_REPORT_ID_FIELD_NUMBER = 3;
    private int mReportId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Report ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_report_id = 3;</code>
     */
    public int getMReportId() {
      return mReportId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Report ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_report_id = 3;</code>
     */
    private void setMReportId(int value) {
      
      mReportId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Report ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_report_id = 3;</code>
     */
    private void clearMReportId() {
      
      mReportId_ = 0;
    }

    public static final int M_REPORT_TIMESTAMP_FIELD_NUMBER = 4;
    private long mReportTimestamp_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time of the battle report.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_report_timestamp = 4;</code>
     */
    public long getMReportTimestamp() {
      return mReportTimestamp_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time of the battle report.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_report_timestamp = 4;</code>
     */
    private void setMReportTimestamp(long value) {
      
      mReportTimestamp_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time of the battle report.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_report_timestamp = 4;</code>
     */
    private void clearMReportTimestamp() {
      
      mReportTimestamp_ = 0L;
    }

    public static final int M_REPORT_TYPE_FIELD_NUMBER = 5;
    private int mReportType_;
    /**
     * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
     */
    public int getMReportTypeValue() {
      return mReportType_;
    }
    /**
     * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
     */
    public mcs.ExternalInterface.ReportType_Enum getMReportType() {
      mcs.ExternalInterface.ReportType_Enum result = mcs.ExternalInterface.ReportType_Enum.forNumber(mReportType_);
      return result == null ? mcs.ExternalInterface.ReportType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
     */
    private void setMReportTypeValue(int value) {
        mReportType_ = value;
    }
    /**
     * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
     */
    private void setMReportType(mcs.ExternalInterface.ReportType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mReportType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
     */
    private void clearMReportType() {
      
      mReportType_ = 0;
    }

    public static final int M_BDA_OUTCOME_OBSERVER_FIELD_NUMBER = 6;
    private int mBdaOutcomeObserver_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
     */
    public int getMBdaOutcomeObserverValue() {
      return mBdaOutcomeObserver_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
     */
    public mcs.ExternalInterface.BdaOutcomeObserver_Enum getMBdaOutcomeObserver() {
      mcs.ExternalInterface.BdaOutcomeObserver_Enum result = mcs.ExternalInterface.BdaOutcomeObserver_Enum.forNumber(mBdaOutcomeObserver_);
      return result == null ? mcs.ExternalInterface.BdaOutcomeObserver_Enum.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
     */
    private void setMBdaOutcomeObserverValue(int value) {
        mBdaOutcomeObserver_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
     */
    private void setMBdaOutcomeObserver(mcs.ExternalInterface.BdaOutcomeObserver_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mBdaOutcomeObserver_ = value.getNumber();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
     */
    private void clearMBdaOutcomeObserver() {
      
      mBdaOutcomeObserver_ = 0;
    }

    public static final int M_BDA_OUTCOME_FIELD_NUMBER = 7;
    private int mBdaOutcome_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
     */
    public int getMBdaOutcomeValue() {
      return mBdaOutcome_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
     */
    public mcs.ExternalInterface.BdaOutcome_Enum getMBdaOutcome() {
      mcs.ExternalInterface.BdaOutcome_Enum result = mcs.ExternalInterface.BdaOutcome_Enum.forNumber(mBdaOutcome_);
      return result == null ? mcs.ExternalInterface.BdaOutcome_Enum.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
     */
    private void setMBdaOutcomeValue(int value) {
        mBdaOutcome_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
     */
    private void setMBdaOutcome(mcs.ExternalInterface.BdaOutcome_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mBdaOutcome_ = value.getNumber();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mReportType=BDA
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
     */
    private void clearMBdaOutcome() {
      
      mBdaOutcome_ = 0;
    }

    public static final int M_LOCATION_FIELD_NUMBER = 8;
    private mcs.ExternalInterface.Location_Struct mLocation_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Target location
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 8;</code>
     */
    public boolean hasMLocation() {
      return mLocation_ != null;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Target location
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 8;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMLocation() {
      return mLocation_ == null ? mcs.ExternalInterface.Location_Struct.getDefaultInstance() : mLocation_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Target location
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 8;</code>
     */
    private void setMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mLocation_ = value;
      
      }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Target location
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 8;</code>
     */
    private void setMLocation(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      mLocation_ = builderForValue.build();
      
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Target location
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 8;</code>
     */
    private void mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (mLocation_ != null &&
          mLocation_ != mcs.ExternalInterface.Location_Struct.getDefaultInstance()) {
        mLocation_ =
          mcs.ExternalInterface.Location_Struct.newBuilder(mLocation_).mergeFrom(value).buildPartial();
      } else {
        mLocation_ = value;
      }
      
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Target location
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 8;</code>
     */
    private void clearMLocation() {  mLocation_ = null;
      
    }

    public static final int M_TARGET_AFFILIATION_FIELD_NUMBER = 9;
    private int mTargetAffiliation_;
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
     */
    public int getMTargetAffiliationValue() {
      return mTargetAffiliation_;
    }
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
     */
    public mcs.ExternalInterface.Affiliation_Enum getMTargetAffiliation() {
      mcs.ExternalInterface.Affiliation_Enum result = mcs.ExternalInterface.Affiliation_Enum.forNumber(mTargetAffiliation_);
      return result == null ? mcs.ExternalInterface.Affiliation_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
     */
    private void setMTargetAffiliationValue(int value) {
        mTargetAffiliation_ = value;
    }
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
     */
    private void setMTargetAffiliation(mcs.ExternalInterface.Affiliation_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTargetAffiliation_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
     */
    private void clearMTargetAffiliation() {
      
      mTargetAffiliation_ = 0;
    }

    public static final int M_TARGET_BATTLE_DIMENSION_FIELD_NUMBER = 10;
    private int mTargetBattleDimension_;
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
     */
    public int getMTargetBattleDimensionValue() {
      return mTargetBattleDimension_;
    }
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
     */
    public mcs.ExternalInterface.BattleDimension_Enum getMTargetBattleDimension() {
      mcs.ExternalInterface.BattleDimension_Enum result = mcs.ExternalInterface.BattleDimension_Enum.forNumber(mTargetBattleDimension_);
      return result == null ? mcs.ExternalInterface.BattleDimension_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
     */
    private void setMTargetBattleDimensionValue(int value) {
        mTargetBattleDimension_ = value;
    }
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
     */
    private void setMTargetBattleDimension(mcs.ExternalInterface.BattleDimension_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTargetBattleDimension_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
     */
    private void clearMTargetBattleDimension() {
      
      mTargetBattleDimension_ = 0;
    }

    public static final int M_TARGET_TYPE_FIELD_NUMBER = 11;
    private int mTargetType_;
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
     */
    public int getMTargetTypeValue() {
      return mTargetType_;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
     */
    public mcs.ExternalInterface.TrackClassification_Enum getMTargetType() {
      mcs.ExternalInterface.TrackClassification_Enum result = mcs.ExternalInterface.TrackClassification_Enum.forNumber(mTargetType_);
      return result == null ? mcs.ExternalInterface.TrackClassification_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
     */
    private void setMTargetTypeValue(int value) {
        mTargetType_ = value;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
     */
    private void setMTargetType(mcs.ExternalInterface.TrackClassification_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTargetType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
     */
    private void clearMTargetType() {
      
      mTargetType_ = 0;
    }

    public static final int M_UNIT_OF_MEASURE_FIELD_NUMBER = 12;
    private int mUnitOfMeasure_;
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
     */
    public int getMUnitOfMeasureValue() {
      return mUnitOfMeasure_;
    }
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
     */
    public mcs.ExternalInterface.UnitOfMeasure_Enum getMUnitOfMeasure() {
      mcs.ExternalInterface.UnitOfMeasure_Enum result = mcs.ExternalInterface.UnitOfMeasure_Enum.forNumber(mUnitOfMeasure_);
      return result == null ? mcs.ExternalInterface.UnitOfMeasure_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
     */
    private void setMUnitOfMeasureValue(int value) {
        mUnitOfMeasure_ = value;
    }
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
     */
    private void setMUnitOfMeasure(mcs.ExternalInterface.UnitOfMeasure_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mUnitOfMeasure_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
     */
    private void clearMUnitOfMeasure() {
      
      mUnitOfMeasure_ = 0;
    }

    public static final int M_QUANTITY_FIELD_NUMBER = 13;
    private int mQuantity_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Quantity of target.  -1 if quantity is not known.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_quantity = 13;</code>
     */
    public int getMQuantity() {
      return mQuantity_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Quantity of target.  -1 if quantity is not known.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_quantity = 13;</code>
     */
    private void setMQuantity(int value) {
      
      mQuantity_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Quantity of target.  -1 if quantity is not known.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_quantity = 13;</code>
     */
    private void clearMQuantity() {
      
      mQuantity_ = 0;
    }

    public static final int M_IMAGE_METADATA_FIELD_NUMBER = 14;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.ImageMetadata_Struct> mImageMetadata_;
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    public java.util.List<mcs.ExternalInterface.ImageMetadata_Struct> getMImageMetadataList() {
      return mImageMetadata_;
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.ImageMetadata_StructOrBuilder> 
        getMImageMetadataOrBuilderList() {
      return mImageMetadata_;
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    public int getMImageMetadataCount() {
      return mImageMetadata_.size();
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    public mcs.ExternalInterface.ImageMetadata_Struct getMImageMetadata(int index) {
      return mImageMetadata_.get(index);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    public mcs.ExternalInterface.ImageMetadata_StructOrBuilder getMImageMetadataOrBuilder(
        int index) {
      return mImageMetadata_.get(index);
    }
    private void ensureMImageMetadataIsMutable() {
      if (!mImageMetadata_.isModifiable()) {
        mImageMetadata_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mImageMetadata_);
       }
    }

    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void setMImageMetadata(
        int index, mcs.ExternalInterface.ImageMetadata_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMImageMetadataIsMutable();
      mImageMetadata_.set(index, value);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void setMImageMetadata(
        int index, mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
      ensureMImageMetadataIsMutable();
      mImageMetadata_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void addMImageMetadata(mcs.ExternalInterface.ImageMetadata_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMImageMetadataIsMutable();
      mImageMetadata_.add(value);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void addMImageMetadata(
        int index, mcs.ExternalInterface.ImageMetadata_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMImageMetadataIsMutable();
      mImageMetadata_.add(index, value);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void addMImageMetadata(
        mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
      ensureMImageMetadataIsMutable();
      mImageMetadata_.add(builderForValue.build());
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void addMImageMetadata(
        int index, mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
      ensureMImageMetadataIsMutable();
      mImageMetadata_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void addAllMImageMetadata(
        java.lang.Iterable<? extends mcs.ExternalInterface.ImageMetadata_Struct> values) {
      ensureMImageMetadataIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mImageMetadata_);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void clearMImageMetadata() {
      mImageMetadata_ = emptyProtobufList();
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
     */
    private void removeMImageMetadata(int index) {
      ensureMImageMetadataIsMutable();
      mImageMetadata_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mAssetId_ != 0) {
        output.writeInt32(1, mAssetId_);
      }
      if (mRedForceId_ != 0) {
        output.writeInt32(2, mRedForceId_);
      }
      if (mReportId_ != 0) {
        output.writeInt32(3, mReportId_);
      }
      if (mReportTimestamp_ != 0L) {
        output.writeInt64(4, mReportTimestamp_);
      }
      if (mReportType_ != mcs.ExternalInterface.ReportType_Enum.REPORT_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(5, mReportType_);
      }
      if (mBdaOutcomeObserver_ != mcs.ExternalInterface.BdaOutcomeObserver_Enum.BDA_OUTCOME_OBSERVER_NOT_IN_USE.getNumber()) {
        output.writeEnum(6, mBdaOutcomeObserver_);
      }
      if (mBdaOutcome_ != mcs.ExternalInterface.BdaOutcome_Enum.BDA_OUTCOME_NOT_APPLICABLE.getNumber()) {
        output.writeEnum(7, mBdaOutcome_);
      }
      if (mLocation_ != null) {
        output.writeMessage(8, getMLocation());
      }
      if (mTargetAffiliation_ != mcs.ExternalInterface.Affiliation_Enum.AFFILIATION_NOT_IN_USE.getNumber()) {
        output.writeEnum(9, mTargetAffiliation_);
      }
      if (mTargetBattleDimension_ != mcs.ExternalInterface.BattleDimension_Enum.BATTLE_DIMENSION_NOT_IN_USE.getNumber()) {
        output.writeEnum(10, mTargetBattleDimension_);
      }
      if (mTargetType_ != mcs.ExternalInterface.TrackClassification_Enum.UNKNOWN.getNumber()) {
        output.writeEnum(11, mTargetType_);
      }
      if (mUnitOfMeasure_ != mcs.ExternalInterface.UnitOfMeasure_Enum.UNIT_OF_MEASURE_NOT_IN_USE.getNumber()) {
        output.writeEnum(12, mUnitOfMeasure_);
      }
      if (mQuantity_ != 0) {
        output.writeInt32(13, mQuantity_);
      }
      for (int i = 0; i < mImageMetadata_.size(); i++) {
        output.writeMessage(14, mImageMetadata_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mAssetId_);
      }
      if (mRedForceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mRedForceId_);
      }
      if (mReportId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mReportId_);
      }
      if (mReportTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, mReportTimestamp_);
      }
      if (mReportType_ != mcs.ExternalInterface.ReportType_Enum.REPORT_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, mReportType_);
      }
      if (mBdaOutcomeObserver_ != mcs.ExternalInterface.BdaOutcomeObserver_Enum.BDA_OUTCOME_OBSERVER_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, mBdaOutcomeObserver_);
      }
      if (mBdaOutcome_ != mcs.ExternalInterface.BdaOutcome_Enum.BDA_OUTCOME_NOT_APPLICABLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, mBdaOutcome_);
      }
      if (mLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getMLocation());
      }
      if (mTargetAffiliation_ != mcs.ExternalInterface.Affiliation_Enum.AFFILIATION_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, mTargetAffiliation_);
      }
      if (mTargetBattleDimension_ != mcs.ExternalInterface.BattleDimension_Enum.BATTLE_DIMENSION_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, mTargetBattleDimension_);
      }
      if (mTargetType_ != mcs.ExternalInterface.TrackClassification_Enum.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, mTargetType_);
      }
      if (mUnitOfMeasure_ != mcs.ExternalInterface.UnitOfMeasure_Enum.UNIT_OF_MEASURE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, mUnitOfMeasure_);
      }
      if (mQuantity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, mQuantity_);
      }
      for (int i = 0; i < mImageMetadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, mImageMetadata_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.BattleReport_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.BattleReport_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.BattleReport_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.BattleReport_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.BattleReport_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.BattleReport_Struct)
        mcs.ExternalInterface.BattleReport_StructOrBuilder {
      // Construct using mcs.ExternalInterface.BattleReport_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 1;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 1;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 1;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 2;</code>
       */
      public int getMRedForceId() {
        return instance.getMRedForceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 2;</code>
       */
      public Builder setMRedForceId(int value) {
        copyOnWrite();
        instance.setMRedForceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 2;</code>
       */
      public Builder clearMRedForceId() {
        copyOnWrite();
        instance.clearMRedForceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Report ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_report_id = 3;</code>
       */
      public int getMReportId() {
        return instance.getMReportId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Report ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_report_id = 3;</code>
       */
      public Builder setMReportId(int value) {
        copyOnWrite();
        instance.setMReportId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Report ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_report_id = 3;</code>
       */
      public Builder clearMReportId() {
        copyOnWrite();
        instance.clearMReportId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time of the battle report.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_report_timestamp = 4;</code>
       */
      public long getMReportTimestamp() {
        return instance.getMReportTimestamp();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time of the battle report.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_report_timestamp = 4;</code>
       */
      public Builder setMReportTimestamp(long value) {
        copyOnWrite();
        instance.setMReportTimestamp(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time of the battle report.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_report_timestamp = 4;</code>
       */
      public Builder clearMReportTimestamp() {
        copyOnWrite();
        instance.clearMReportTimestamp();
        return this;
      }

      /**
       * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
       */
      public int getMReportTypeValue() {
        return instance.getMReportTypeValue();
      }
      /**
       * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
       */
      public Builder setMReportTypeValue(int value) {
        copyOnWrite();
        instance.setMReportTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
       */
      public mcs.ExternalInterface.ReportType_Enum getMReportType() {
        return instance.getMReportType();
      }
      /**
       * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
       */
      public Builder setMReportType(mcs.ExternalInterface.ReportType_Enum value) {
        copyOnWrite();
        instance.setMReportType(value);
        return this;
      }
      /**
       * <code>optional .mcs.ReportType_Enum m_report_type = 5;</code>
       */
      public Builder clearMReportType() {
        copyOnWrite();
        instance.clearMReportType();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
       */
      public int getMBdaOutcomeObserverValue() {
        return instance.getMBdaOutcomeObserverValue();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
       */
      public Builder setMBdaOutcomeObserverValue(int value) {
        copyOnWrite();
        instance.setMBdaOutcomeObserverValue(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
       */
      public mcs.ExternalInterface.BdaOutcomeObserver_Enum getMBdaOutcomeObserver() {
        return instance.getMBdaOutcomeObserver();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
       */
      public Builder setMBdaOutcomeObserver(mcs.ExternalInterface.BdaOutcomeObserver_Enum value) {
        copyOnWrite();
        instance.setMBdaOutcomeObserver(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcomeObserver_Enum m_bda_outcome_observer = 6;</code>
       */
      public Builder clearMBdaOutcomeObserver() {
        copyOnWrite();
        instance.clearMBdaOutcomeObserver();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
       */
      public int getMBdaOutcomeValue() {
        return instance.getMBdaOutcomeValue();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
       */
      public Builder setMBdaOutcomeValue(int value) {
        copyOnWrite();
        instance.setMBdaOutcomeValue(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
       */
      public mcs.ExternalInterface.BdaOutcome_Enum getMBdaOutcome() {
        return instance.getMBdaOutcome();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
       */
      public Builder setMBdaOutcome(mcs.ExternalInterface.BdaOutcome_Enum value) {
        copyOnWrite();
        instance.setMBdaOutcome(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mReportType=BDA
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.BdaOutcome_Enum m_bda_outcome = 7;</code>
       */
      public Builder clearMBdaOutcome() {
        copyOnWrite();
        instance.clearMBdaOutcome();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Target location
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 8;</code>
       */
      public boolean hasMLocation() {
        return instance.hasMLocation();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Target location
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 8;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMLocation() {
        return instance.getMLocation();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Target location
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 8;</code>
       */
      public Builder setMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMLocation(value);
        return this;
        }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Target location
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 8;</code>
       */
      public Builder setMLocation(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLocation(builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Target location
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 8;</code>
       */
      public Builder mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.mergeMLocation(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Target location
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 8;</code>
       */
      public Builder clearMLocation() {  copyOnWrite();
        instance.clearMLocation();
        return this;
      }

      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
       */
      public int getMTargetAffiliationValue() {
        return instance.getMTargetAffiliationValue();
      }
      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
       */
      public Builder setMTargetAffiliationValue(int value) {
        copyOnWrite();
        instance.setMTargetAffiliationValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
       */
      public mcs.ExternalInterface.Affiliation_Enum getMTargetAffiliation() {
        return instance.getMTargetAffiliation();
      }
      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
       */
      public Builder setMTargetAffiliation(mcs.ExternalInterface.Affiliation_Enum value) {
        copyOnWrite();
        instance.setMTargetAffiliation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 9;</code>
       */
      public Builder clearMTargetAffiliation() {
        copyOnWrite();
        instance.clearMTargetAffiliation();
        return this;
      }

      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
       */
      public int getMTargetBattleDimensionValue() {
        return instance.getMTargetBattleDimensionValue();
      }
      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
       */
      public Builder setMTargetBattleDimensionValue(int value) {
        copyOnWrite();
        instance.setMTargetBattleDimensionValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
       */
      public mcs.ExternalInterface.BattleDimension_Enum getMTargetBattleDimension() {
        return instance.getMTargetBattleDimension();
      }
      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
       */
      public Builder setMTargetBattleDimension(mcs.ExternalInterface.BattleDimension_Enum value) {
        copyOnWrite();
        instance.setMTargetBattleDimension(value);
        return this;
      }
      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 10;</code>
       */
      public Builder clearMTargetBattleDimension() {
        copyOnWrite();
        instance.clearMTargetBattleDimension();
        return this;
      }

      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
       */
      public int getMTargetTypeValue() {
        return instance.getMTargetTypeValue();
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
       */
      public Builder setMTargetTypeValue(int value) {
        copyOnWrite();
        instance.setMTargetTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
       */
      public mcs.ExternalInterface.TrackClassification_Enum getMTargetType() {
        return instance.getMTargetType();
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
       */
      public Builder setMTargetType(mcs.ExternalInterface.TrackClassification_Enum value) {
        copyOnWrite();
        instance.setMTargetType(value);
        return this;
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 11;</code>
       */
      public Builder clearMTargetType() {
        copyOnWrite();
        instance.clearMTargetType();
        return this;
      }

      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
       */
      public int getMUnitOfMeasureValue() {
        return instance.getMUnitOfMeasureValue();
      }
      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
       */
      public Builder setMUnitOfMeasureValue(int value) {
        copyOnWrite();
        instance.setMUnitOfMeasureValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
       */
      public mcs.ExternalInterface.UnitOfMeasure_Enum getMUnitOfMeasure() {
        return instance.getMUnitOfMeasure();
      }
      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
       */
      public Builder setMUnitOfMeasure(mcs.ExternalInterface.UnitOfMeasure_Enum value) {
        copyOnWrite();
        instance.setMUnitOfMeasure(value);
        return this;
      }
      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 12;</code>
       */
      public Builder clearMUnitOfMeasure() {
        copyOnWrite();
        instance.clearMUnitOfMeasure();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Quantity of target.  -1 if quantity is not known.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_quantity = 13;</code>
       */
      public int getMQuantity() {
        return instance.getMQuantity();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Quantity of target.  -1 if quantity is not known.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_quantity = 13;</code>
       */
      public Builder setMQuantity(int value) {
        copyOnWrite();
        instance.setMQuantity(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Quantity of target.  -1 if quantity is not known.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_quantity = 13;</code>
       */
      public Builder clearMQuantity() {
        copyOnWrite();
        instance.clearMQuantity();
        return this;
      }

      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public java.util.List<mcs.ExternalInterface.ImageMetadata_Struct> getMImageMetadataList() {
        return java.util.Collections.unmodifiableList(
            instance.getMImageMetadataList());
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public int getMImageMetadataCount() {
        return instance.getMImageMetadataCount();
      }/**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public mcs.ExternalInterface.ImageMetadata_Struct getMImageMetadata(int index) {
        return instance.getMImageMetadata(index);
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder setMImageMetadata(
          int index, mcs.ExternalInterface.ImageMetadata_Struct value) {
        copyOnWrite();
        instance.setMImageMetadata(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder setMImageMetadata(
          int index, mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMImageMetadata(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder addMImageMetadata(mcs.ExternalInterface.ImageMetadata_Struct value) {
        copyOnWrite();
        instance.addMImageMetadata(value);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder addMImageMetadata(
          int index, mcs.ExternalInterface.ImageMetadata_Struct value) {
        copyOnWrite();
        instance.addMImageMetadata(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder addMImageMetadata(
          mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMImageMetadata(builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder addMImageMetadata(
          int index, mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMImageMetadata(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder addAllMImageMetadata(
          java.lang.Iterable<? extends mcs.ExternalInterface.ImageMetadata_Struct> values) {
        copyOnWrite();
        instance.addAllMImageMetadata(values);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder clearMImageMetadata() {
        copyOnWrite();
        instance.clearMImageMetadata();
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 14;</code>
       */
      public Builder removeMImageMetadata(int index) {
        copyOnWrite();
        instance.removeMImageMetadata(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.BattleReport_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.BattleReport_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          mImageMetadata_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.BattleReport_Struct other = (mcs.ExternalInterface.BattleReport_Struct) arg1;
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mRedForceId_ = visitor.visitInt(mRedForceId_ != 0, mRedForceId_,
              other.mRedForceId_ != 0, other.mRedForceId_);
          mReportId_ = visitor.visitInt(mReportId_ != 0, mReportId_,
              other.mReportId_ != 0, other.mReportId_);
          mReportTimestamp_ = visitor.visitLong(mReportTimestamp_ != 0L, mReportTimestamp_,
              other.mReportTimestamp_ != 0L, other.mReportTimestamp_);
          mReportType_ = visitor.visitInt(mReportType_ != 0, mReportType_,    other.mReportType_ != 0, other.mReportType_);
          mBdaOutcomeObserver_ = visitor.visitInt(mBdaOutcomeObserver_ != 0, mBdaOutcomeObserver_,    other.mBdaOutcomeObserver_ != 0, other.mBdaOutcomeObserver_);
          mBdaOutcome_ = visitor.visitInt(mBdaOutcome_ != 0, mBdaOutcome_,    other.mBdaOutcome_ != 0, other.mBdaOutcome_);
          mLocation_ = visitor.visitMessage(mLocation_, other.mLocation_);
          mTargetAffiliation_ = visitor.visitInt(mTargetAffiliation_ != 0, mTargetAffiliation_,    other.mTargetAffiliation_ != 0, other.mTargetAffiliation_);
          mTargetBattleDimension_ = visitor.visitInt(mTargetBattleDimension_ != 0, mTargetBattleDimension_,    other.mTargetBattleDimension_ != 0, other.mTargetBattleDimension_);
          mTargetType_ = visitor.visitInt(mTargetType_ != 0, mTargetType_,    other.mTargetType_ != 0, other.mTargetType_);
          mUnitOfMeasure_ = visitor.visitInt(mUnitOfMeasure_ != 0, mUnitOfMeasure_,    other.mUnitOfMeasure_ != 0, other.mUnitOfMeasure_);
          mQuantity_ = visitor.visitInt(mQuantity_ != 0, mQuantity_,
              other.mQuantity_ != 0, other.mQuantity_);
          mImageMetadata_= visitor.visitList(mImageMetadata_, other.mImageMetadata_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 16: {

                  mRedForceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mReportId_ = input.readInt32();
                  break;
                }
                case 32: {

                  mReportTimestamp_ = input.readInt64();
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();

                  mReportType_ = rawValue;
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();

                  mBdaOutcomeObserver_ = rawValue;
                  break;
                }
                case 56: {
                  int rawValue = input.readEnum();

                  mBdaOutcome_ = rawValue;
                  break;
                }
                case 66: {
                  mcs.ExternalInterface.Location_Struct.Builder subBuilder = null;
                  if (mLocation_ != null) {
                    subBuilder = mLocation_.toBuilder();
                  }
                  mLocation_ = input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mLocation_);
                    mLocation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 72: {
                  int rawValue = input.readEnum();

                  mTargetAffiliation_ = rawValue;
                  break;
                }
                case 80: {
                  int rawValue = input.readEnum();

                  mTargetBattleDimension_ = rawValue;
                  break;
                }
                case 88: {
                  int rawValue = input.readEnum();

                  mTargetType_ = rawValue;
                  break;
                }
                case 96: {
                  int rawValue = input.readEnum();

                  mUnitOfMeasure_ = rawValue;
                  break;
                }
                case 104: {

                  mQuantity_ = input.readInt32();
                  break;
                }
                case 114: {
                  if (!mImageMetadata_.isModifiable()) {
                    mImageMetadata_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mImageMetadata_);
                  }
                  mImageMetadata_.add(
                      input.readMessage(mcs.ExternalInterface.ImageMetadata_Struct.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.BattleReport_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.BattleReport_Struct)
    private static final mcs.ExternalInterface.BattleReport_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BattleReport_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.BattleReport_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<BattleReport_Struct> PARSER;

    public static com.google.protobuf.Parser<BattleReport_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Eoi_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Eoi_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 m_eoi_id = 1;</code>
     */
    int getMEoiId();

    /**
     * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
     */
    boolean hasMTargetLocation();
    /**
     * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
     */
    mcs.ExternalInterface.Location_Struct getMTargetLocation();

    /**
     * <code>optional double m_target_location_error = 3;</code>
     */
    double getMTargetLocationError();

    /**
     * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
     */
    int getMEntityTypeValue();
    /**
     * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
     */
    mcs.ExternalInterface.TrackClassification_Enum getMEntityType();

    /**
     * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
     */
    int getMActivityTypeValue();
    /**
     * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
     */
    mcs.ExternalInterface.TaskType_Enum getMActivityType();
  }
  /**
   * Protobuf type {@code mcs.Eoi_Struct}
   */
  public  static final class Eoi_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Eoi_Struct, Eoi_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Eoi_Struct)
      Eoi_StructOrBuilder {
    private Eoi_Struct() {
    }
    public static final int M_EOI_ID_FIELD_NUMBER = 1;
    private int mEoiId_;
    /**
     * <code>optional int32 m_eoi_id = 1;</code>
     */
    public int getMEoiId() {
      return mEoiId_;
    }
    /**
     * <code>optional int32 m_eoi_id = 1;</code>
     */
    private void setMEoiId(int value) {
      
      mEoiId_ = value;
    }
    /**
     * <code>optional int32 m_eoi_id = 1;</code>
     */
    private void clearMEoiId() {
      
      mEoiId_ = 0;
    }

    public static final int M_TARGET_LOCATION_FIELD_NUMBER = 2;
    private mcs.ExternalInterface.Location_Struct mTargetLocation_;
    /**
     * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
     */
    public boolean hasMTargetLocation() {
      return mTargetLocation_ != null;
    }
    /**
     * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMTargetLocation() {
      return mTargetLocation_ == null ? mcs.ExternalInterface.Location_Struct.getDefaultInstance() : mTargetLocation_;
    }
    /**
     * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
     */
    private void setMTargetLocation(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mTargetLocation_ = value;
      
      }
    /**
     * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
     */
    private void setMTargetLocation(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      mTargetLocation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
     */
    private void mergeMTargetLocation(mcs.ExternalInterface.Location_Struct value) {
      if (mTargetLocation_ != null &&
          mTargetLocation_ != mcs.ExternalInterface.Location_Struct.getDefaultInstance()) {
        mTargetLocation_ =
          mcs.ExternalInterface.Location_Struct.newBuilder(mTargetLocation_).mergeFrom(value).buildPartial();
      } else {
        mTargetLocation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
     */
    private void clearMTargetLocation() {  mTargetLocation_ = null;
      
    }

    public static final int M_TARGET_LOCATION_ERROR_FIELD_NUMBER = 3;
    private double mTargetLocationError_;
    /**
     * <code>optional double m_target_location_error = 3;</code>
     */
    public double getMTargetLocationError() {
      return mTargetLocationError_;
    }
    /**
     * <code>optional double m_target_location_error = 3;</code>
     */
    private void setMTargetLocationError(double value) {
      
      mTargetLocationError_ = value;
    }
    /**
     * <code>optional double m_target_location_error = 3;</code>
     */
    private void clearMTargetLocationError() {
      
      mTargetLocationError_ = 0D;
    }

    public static final int M_ENTITY_TYPE_FIELD_NUMBER = 4;
    private int mEntityType_;
    /**
     * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
     */
    public int getMEntityTypeValue() {
      return mEntityType_;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
     */
    public mcs.ExternalInterface.TrackClassification_Enum getMEntityType() {
      mcs.ExternalInterface.TrackClassification_Enum result = mcs.ExternalInterface.TrackClassification_Enum.forNumber(mEntityType_);
      return result == null ? mcs.ExternalInterface.TrackClassification_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
     */
    private void setMEntityTypeValue(int value) {
        mEntityType_ = value;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
     */
    private void setMEntityType(mcs.ExternalInterface.TrackClassification_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mEntityType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
     */
    private void clearMEntityType() {
      
      mEntityType_ = 0;
    }

    public static final int M_ACTIVITY_TYPE_FIELD_NUMBER = 5;
    private int mActivityType_;
    /**
     * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
     */
    public int getMActivityTypeValue() {
      return mActivityType_;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
     */
    public mcs.ExternalInterface.TaskType_Enum getMActivityType() {
      mcs.ExternalInterface.TaskType_Enum result = mcs.ExternalInterface.TaskType_Enum.forNumber(mActivityType_);
      return result == null ? mcs.ExternalInterface.TaskType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
     */
    private void setMActivityTypeValue(int value) {
        mActivityType_ = value;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
     */
    private void setMActivityType(mcs.ExternalInterface.TaskType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mActivityType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
     */
    private void clearMActivityType() {
      
      mActivityType_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mEoiId_ != 0) {
        output.writeInt32(1, mEoiId_);
      }
      if (mTargetLocation_ != null) {
        output.writeMessage(2, getMTargetLocation());
      }
      if (mTargetLocationError_ != 0D) {
        output.writeDouble(3, mTargetLocationError_);
      }
      if (mEntityType_ != mcs.ExternalInterface.TrackClassification_Enum.UNKNOWN.getNumber()) {
        output.writeEnum(4, mEntityType_);
      }
      if (mActivityType_ != mcs.ExternalInterface.TaskType_Enum.TASK_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(5, mActivityType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mEoiId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mEoiId_);
      }
      if (mTargetLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMTargetLocation());
      }
      if (mTargetLocationError_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, mTargetLocationError_);
      }
      if (mEntityType_ != mcs.ExternalInterface.TrackClassification_Enum.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mEntityType_);
      }
      if (mActivityType_ != mcs.ExternalInterface.TaskType_Enum.TASK_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, mActivityType_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Eoi_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Eoi_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Eoi_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.Eoi_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Eoi_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Eoi_Struct)
        mcs.ExternalInterface.Eoi_StructOrBuilder {
      // Construct using mcs.ExternalInterface.Eoi_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 m_eoi_id = 1;</code>
       */
      public int getMEoiId() {
        return instance.getMEoiId();
      }
      /**
       * <code>optional int32 m_eoi_id = 1;</code>
       */
      public Builder setMEoiId(int value) {
        copyOnWrite();
        instance.setMEoiId(value);
        return this;
      }
      /**
       * <code>optional int32 m_eoi_id = 1;</code>
       */
      public Builder clearMEoiId() {
        copyOnWrite();
        instance.clearMEoiId();
        return this;
      }

      /**
       * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
       */
      public boolean hasMTargetLocation() {
        return instance.hasMTargetLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMTargetLocation() {
        return instance.getMTargetLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
       */
      public Builder setMTargetLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMTargetLocation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
       */
      public Builder setMTargetLocation(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMTargetLocation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
       */
      public Builder mergeMTargetLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.mergeMTargetLocation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_target_location = 2;</code>
       */
      public Builder clearMTargetLocation() {  copyOnWrite();
        instance.clearMTargetLocation();
        return this;
      }

      /**
       * <code>optional double m_target_location_error = 3;</code>
       */
      public double getMTargetLocationError() {
        return instance.getMTargetLocationError();
      }
      /**
       * <code>optional double m_target_location_error = 3;</code>
       */
      public Builder setMTargetLocationError(double value) {
        copyOnWrite();
        instance.setMTargetLocationError(value);
        return this;
      }
      /**
       * <code>optional double m_target_location_error = 3;</code>
       */
      public Builder clearMTargetLocationError() {
        copyOnWrite();
        instance.clearMTargetLocationError();
        return this;
      }

      /**
       * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
       */
      public int getMEntityTypeValue() {
        return instance.getMEntityTypeValue();
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
       */
      public Builder setMEntityTypeValue(int value) {
        copyOnWrite();
        instance.setMEntityTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
       */
      public mcs.ExternalInterface.TrackClassification_Enum getMEntityType() {
        return instance.getMEntityType();
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
       */
      public Builder setMEntityType(mcs.ExternalInterface.TrackClassification_Enum value) {
        copyOnWrite();
        instance.setMEntityType(value);
        return this;
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_entity_type = 4;</code>
       */
      public Builder clearMEntityType() {
        copyOnWrite();
        instance.clearMEntityType();
        return this;
      }

      /**
       * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
       */
      public int getMActivityTypeValue() {
        return instance.getMActivityTypeValue();
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
       */
      public Builder setMActivityTypeValue(int value) {
        copyOnWrite();
        instance.setMActivityTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
       */
      public mcs.ExternalInterface.TaskType_Enum getMActivityType() {
        return instance.getMActivityType();
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
       */
      public Builder setMActivityType(mcs.ExternalInterface.TaskType_Enum value) {
        copyOnWrite();
        instance.setMActivityType(value);
        return this;
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_activity_type = 5;</code>
       */
      public Builder clearMActivityType() {
        copyOnWrite();
        instance.clearMActivityType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Eoi_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Eoi_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Eoi_Struct other = (mcs.ExternalInterface.Eoi_Struct) arg1;
          mEoiId_ = visitor.visitInt(mEoiId_ != 0, mEoiId_,
              other.mEoiId_ != 0, other.mEoiId_);
          mTargetLocation_ = visitor.visitMessage(mTargetLocation_, other.mTargetLocation_);
          mTargetLocationError_ = visitor.visitDouble(mTargetLocationError_ != 0D, mTargetLocationError_,
              other.mTargetLocationError_ != 0D, other.mTargetLocationError_);
          mEntityType_ = visitor.visitInt(mEntityType_ != 0, mEntityType_,    other.mEntityType_ != 0, other.mEntityType_);
          mActivityType_ = visitor.visitInt(mActivityType_ != 0, mActivityType_,    other.mActivityType_ != 0, other.mActivityType_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mEoiId_ = input.readInt32();
                  break;
                }
                case 18: {
                  mcs.ExternalInterface.Location_Struct.Builder subBuilder = null;
                  if (mTargetLocation_ != null) {
                    subBuilder = mTargetLocation_.toBuilder();
                  }
                  mTargetLocation_ = input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mTargetLocation_);
                    mTargetLocation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 25: {

                  mTargetLocationError_ = input.readDouble();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  mEntityType_ = rawValue;
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();

                  mActivityType_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Eoi_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Eoi_Struct)
    private static final mcs.ExternalInterface.Eoi_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Eoi_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Eoi_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Eoi_Struct> PARSER;

    public static com.google.protobuf.Parser<Eoi_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ExtrudedPolyline_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.ExtrudedPolyline_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    java.util.List<mcs.ExternalInterface.Vertex2D_Struct> 
        getMVerticesList();
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    mcs.ExternalInterface.Vertex2D_Struct getMVertices(int index);
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    int getMVerticesCount();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Height above Mean Sea Level of lower altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_min_z = 2;</code>
     */
    double getMMinZ();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Height above Mean Sea Level of upper altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_max_z = 3;</code>
     */
    double getMMaxZ();
  }
  /**
   * Protobuf type {@code mcs.ExtrudedPolyline_Struct}
   */
  public  static final class ExtrudedPolyline_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          ExtrudedPolyline_Struct, ExtrudedPolyline_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.ExtrudedPolyline_Struct)
      ExtrudedPolyline_StructOrBuilder {
    private ExtrudedPolyline_Struct() {
      mVertices_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int M_VERTICES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.Vertex2D_Struct> mVertices_;
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    public java.util.List<mcs.ExternalInterface.Vertex2D_Struct> getMVerticesList() {
      return mVertices_;
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.Vertex2D_StructOrBuilder> 
        getMVerticesOrBuilderList() {
      return mVertices_;
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    public int getMVerticesCount() {
      return mVertices_.size();
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    public mcs.ExternalInterface.Vertex2D_Struct getMVertices(int index) {
      return mVertices_.get(index);
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    public mcs.ExternalInterface.Vertex2D_StructOrBuilder getMVerticesOrBuilder(
        int index) {
      return mVertices_.get(index);
    }
    private void ensureMVerticesIsMutable() {
      if (!mVertices_.isModifiable()) {
        mVertices_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mVertices_);
       }
    }

    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void setMVertices(
        int index, mcs.ExternalInterface.Vertex2D_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMVerticesIsMutable();
      mVertices_.set(index, value);
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void setMVertices(
        int index, mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
      ensureMVerticesIsMutable();
      mVertices_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void addMVertices(mcs.ExternalInterface.Vertex2D_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMVerticesIsMutable();
      mVertices_.add(value);
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void addMVertices(
        int index, mcs.ExternalInterface.Vertex2D_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMVerticesIsMutable();
      mVertices_.add(index, value);
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void addMVertices(
        mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
      ensureMVerticesIsMutable();
      mVertices_.add(builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void addMVertices(
        int index, mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
      ensureMVerticesIsMutable();
      mVertices_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void addAllMVertices(
        java.lang.Iterable<? extends mcs.ExternalInterface.Vertex2D_Struct> values) {
      ensureMVerticesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mVertices_);
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void clearMVertices() {
      mVertices_ = emptyProtobufList();
    }
    /**
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
     */
    private void removeMVertices(int index) {
      ensureMVerticesIsMutable();
      mVertices_.remove(index);
    }

    public static final int M_MIN_Z_FIELD_NUMBER = 2;
    private double mMinZ_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Height above Mean Sea Level of lower altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_min_z = 2;</code>
     */
    public double getMMinZ() {
      return mMinZ_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Height above Mean Sea Level of lower altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_min_z = 2;</code>
     */
    private void setMMinZ(double value) {
      
      mMinZ_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Height above Mean Sea Level of lower altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_min_z = 2;</code>
     */
    private void clearMMinZ() {
      
      mMinZ_ = 0D;
    }

    public static final int M_MAX_Z_FIELD_NUMBER = 3;
    private double mMaxZ_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Height above Mean Sea Level of upper altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_max_z = 3;</code>
     */
    public double getMMaxZ() {
      return mMaxZ_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Height above Mean Sea Level of upper altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_max_z = 3;</code>
     */
    private void setMMaxZ(double value) {
      
      mMaxZ_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Height above Mean Sea Level of upper altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_max_z = 3;</code>
     */
    private void clearMMaxZ() {
      
      mMaxZ_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < mVertices_.size(); i++) {
        output.writeMessage(1, mVertices_.get(i));
      }
      if (mMinZ_ != 0D) {
        output.writeDouble(2, mMinZ_);
      }
      if (mMaxZ_ != 0D) {
        output.writeDouble(3, mMaxZ_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mVertices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mVertices_.get(i));
      }
      if (mMinZ_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, mMinZ_);
      }
      if (mMaxZ_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, mMaxZ_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ExtrudedPolyline_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.ExtrudedPolyline_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.ExtrudedPolyline_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.ExtrudedPolyline_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.ExtrudedPolyline_Struct)
        mcs.ExternalInterface.ExtrudedPolyline_StructOrBuilder {
      // Construct using mcs.ExternalInterface.ExtrudedPolyline_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public java.util.List<mcs.ExternalInterface.Vertex2D_Struct> getMVerticesList() {
        return java.util.Collections.unmodifiableList(
            instance.getMVerticesList());
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public int getMVerticesCount() {
        return instance.getMVerticesCount();
      }/**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public mcs.ExternalInterface.Vertex2D_Struct getMVertices(int index) {
        return instance.getMVertices(index);
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder setMVertices(
          int index, mcs.ExternalInterface.Vertex2D_Struct value) {
        copyOnWrite();
        instance.setMVertices(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder setMVertices(
          int index, mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMVertices(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder addMVertices(mcs.ExternalInterface.Vertex2D_Struct value) {
        copyOnWrite();
        instance.addMVertices(value);
        return this;
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder addMVertices(
          int index, mcs.ExternalInterface.Vertex2D_Struct value) {
        copyOnWrite();
        instance.addMVertices(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder addMVertices(
          mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMVertices(builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder addMVertices(
          int index, mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMVertices(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder addAllMVertices(
          java.lang.Iterable<? extends mcs.ExternalInterface.Vertex2D_Struct> values) {
        copyOnWrite();
        instance.addAllMVertices(values);
        return this;
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder clearMVertices() {
        copyOnWrite();
        instance.clearMVertices();
        return this;
      }
      /**
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 1;</code>
       */
      public Builder removeMVertices(int index) {
        copyOnWrite();
        instance.removeMVertices(index);
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Height above Mean Sea Level of lower altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_min_z = 2;</code>
       */
      public double getMMinZ() {
        return instance.getMMinZ();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Height above Mean Sea Level of lower altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_min_z = 2;</code>
       */
      public Builder setMMinZ(double value) {
        copyOnWrite();
        instance.setMMinZ(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Height above Mean Sea Level of lower altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_min_z = 2;</code>
       */
      public Builder clearMMinZ() {
        copyOnWrite();
        instance.clearMMinZ();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Height above Mean Sea Level of upper altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_max_z = 3;</code>
       */
      public double getMMaxZ() {
        return instance.getMMaxZ();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Height above Mean Sea Level of upper altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_max_z = 3;</code>
       */
      public Builder setMMaxZ(double value) {
        copyOnWrite();
        instance.setMMaxZ(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Height above Mean Sea Level of upper altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_max_z = 3;</code>
       */
      public Builder clearMMaxZ() {
        copyOnWrite();
        instance.clearMMaxZ();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.ExtrudedPolyline_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.ExtrudedPolyline_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          mVertices_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.ExtrudedPolyline_Struct other = (mcs.ExternalInterface.ExtrudedPolyline_Struct) arg1;
          mVertices_= visitor.visitList(mVertices_, other.mVertices_);
          mMinZ_ = visitor.visitDouble(mMinZ_ != 0D, mMinZ_,
              other.mMinZ_ != 0D, other.mMinZ_);
          mMaxZ_ = visitor.visitDouble(mMaxZ_ != 0D, mMaxZ_,
              other.mMaxZ_ != 0D, other.mMaxZ_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!mVertices_.isModifiable()) {
                    mVertices_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mVertices_);
                  }
                  mVertices_.add(
                      input.readMessage(mcs.ExternalInterface.Vertex2D_Struct.parser(), extensionRegistry));
                  break;
                }
                case 17: {

                  mMinZ_ = input.readDouble();
                  break;
                }
                case 25: {

                  mMaxZ_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.ExtrudedPolyline_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.ExtrudedPolyline_Struct)
    private static final mcs.ExternalInterface.ExtrudedPolyline_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ExtrudedPolyline_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.ExtrudedPolyline_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ExtrudedPolyline_Struct> PARSER;

    public static com.google.protobuf.Parser<ExtrudedPolyline_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ImageMetadata_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.ImageMetadata_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Image ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_image_id = 1;</code>
     */
    int getMImageId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Source ID of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_source_id = 2;</code>
     */
    int getMSourceId();

    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    int getMSourceTypeValue();
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    mcs.ExternalInterface.SourceType_Enum getMSourceType();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_image_timestamp = 4;</code>
     */
    long getMImageTimestamp();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    java.lang.String getMImageFileExt();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    com.google.protobuf.ByteString
        getMImageFileExtBytes();
  }
  /**
   * Protobuf type {@code mcs.ImageMetadata_Struct}
   */
  public  static final class ImageMetadata_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          ImageMetadata_Struct, ImageMetadata_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.ImageMetadata_Struct)
      ImageMetadata_StructOrBuilder {
    private ImageMetadata_Struct() {
      mImageFileExt_ = "";
    }
    public static final int M_IMAGE_ID_FIELD_NUMBER = 1;
    private int mImageId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Image ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_image_id = 1;</code>
     */
    public int getMImageId() {
      return mImageId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Image ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_image_id = 1;</code>
     */
    private void setMImageId(int value) {
      
      mImageId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Image ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_image_id = 1;</code>
     */
    private void clearMImageId() {
      
      mImageId_ = 0;
    }

    public static final int M_SOURCE_ID_FIELD_NUMBER = 2;
    private int mSourceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Source ID of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_source_id = 2;</code>
     */
    public int getMSourceId() {
      return mSourceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Source ID of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_source_id = 2;</code>
     */
    private void setMSourceId(int value) {
      
      mSourceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Source ID of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_source_id = 2;</code>
     */
    private void clearMSourceId() {
      
      mSourceId_ = 0;
    }

    public static final int M_SOURCE_TYPE_FIELD_NUMBER = 3;
    private int mSourceType_;
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    public int getMSourceTypeValue() {
      return mSourceType_;
    }
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    public mcs.ExternalInterface.SourceType_Enum getMSourceType() {
      mcs.ExternalInterface.SourceType_Enum result = mcs.ExternalInterface.SourceType_Enum.forNumber(mSourceType_);
      return result == null ? mcs.ExternalInterface.SourceType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    private void setMSourceTypeValue(int value) {
        mSourceType_ = value;
    }
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    private void setMSourceType(mcs.ExternalInterface.SourceType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mSourceType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    private void clearMSourceType() {
      
      mSourceType_ = 0;
    }

    public static final int M_IMAGE_TIMESTAMP_FIELD_NUMBER = 4;
    private long mImageTimestamp_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_image_timestamp = 4;</code>
     */
    public long getMImageTimestamp() {
      return mImageTimestamp_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_image_timestamp = 4;</code>
     */
    private void setMImageTimestamp(long value) {
      
      mImageTimestamp_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_image_timestamp = 4;</code>
     */
    private void clearMImageTimestamp() {
      
      mImageTimestamp_ = 0L;
    }

    public static final int M_IMAGE_FILE_EXT_FIELD_NUMBER = 5;
    private java.lang.String mImageFileExt_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    public java.lang.String getMImageFileExt() {
      return mImageFileExt_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMImageFileExtBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(mImageFileExt_);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    private void setMImageFileExt(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      mImageFileExt_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    private void clearMImageFileExt() {
      
      mImageFileExt_ = getDefaultInstance().getMImageFileExt();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    private void setMImageFileExtBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      mImageFileExt_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mImageId_ != 0) {
        output.writeInt32(1, mImageId_);
      }
      if (mSourceId_ != 0) {
        output.writeInt32(2, mSourceId_);
      }
      if (mSourceType_ != mcs.ExternalInterface.SourceType_Enum.SOURCE_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(3, mSourceType_);
      }
      if (mImageTimestamp_ != 0L) {
        output.writeInt64(4, mImageTimestamp_);
      }
      if (!mImageFileExt_.isEmpty()) {
        output.writeString(5, getMImageFileExt());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mImageId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mImageId_);
      }
      if (mSourceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mSourceId_);
      }
      if (mSourceType_ != mcs.ExternalInterface.SourceType_Enum.SOURCE_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mSourceType_);
      }
      if (mImageTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, mImageTimestamp_);
      }
      if (!mImageFileExt_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getMImageFileExt());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.ImageMetadata_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ImageMetadata_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.ImageMetadata_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.ImageMetadata_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.ImageMetadata_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.ImageMetadata_Struct)
        mcs.ExternalInterface.ImageMetadata_StructOrBuilder {
      // Construct using mcs.ExternalInterface.ImageMetadata_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Image ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_image_id = 1;</code>
       */
      public int getMImageId() {
        return instance.getMImageId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Image ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_image_id = 1;</code>
       */
      public Builder setMImageId(int value) {
        copyOnWrite();
        instance.setMImageId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Image ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_image_id = 1;</code>
       */
      public Builder clearMImageId() {
        copyOnWrite();
        instance.clearMImageId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Source ID of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_source_id = 2;</code>
       */
      public int getMSourceId() {
        return instance.getMSourceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Source ID of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_source_id = 2;</code>
       */
      public Builder setMSourceId(int value) {
        copyOnWrite();
        instance.setMSourceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Source ID of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_source_id = 2;</code>
       */
      public Builder clearMSourceId() {
        copyOnWrite();
        instance.clearMSourceId();
        return this;
      }

      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public int getMSourceTypeValue() {
        return instance.getMSourceTypeValue();
      }
      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public Builder setMSourceTypeValue(int value) {
        copyOnWrite();
        instance.setMSourceTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public mcs.ExternalInterface.SourceType_Enum getMSourceType() {
        return instance.getMSourceType();
      }
      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public Builder setMSourceType(mcs.ExternalInterface.SourceType_Enum value) {
        copyOnWrite();
        instance.setMSourceType(value);
        return this;
      }
      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public Builder clearMSourceType() {
        copyOnWrite();
        instance.clearMSourceType();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_image_timestamp = 4;</code>
       */
      public long getMImageTimestamp() {
        return instance.getMImageTimestamp();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_image_timestamp = 4;</code>
       */
      public Builder setMImageTimestamp(long value) {
        copyOnWrite();
        instance.setMImageTimestamp(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_image_timestamp = 4;</code>
       */
      public Builder clearMImageTimestamp() {
        copyOnWrite();
        instance.clearMImageTimestamp();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public java.lang.String getMImageFileExt() {
        return instance.getMImageFileExt();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMImageFileExtBytes() {
        return instance.getMImageFileExtBytes();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public Builder setMImageFileExt(
          java.lang.String value) {
        copyOnWrite();
        instance.setMImageFileExt(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public Builder clearMImageFileExt() {
        copyOnWrite();
        instance.clearMImageFileExt();
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public Builder setMImageFileExtBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMImageFileExtBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.ImageMetadata_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.ImageMetadata_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.ImageMetadata_Struct other = (mcs.ExternalInterface.ImageMetadata_Struct) arg1;
          mImageId_ = visitor.visitInt(mImageId_ != 0, mImageId_,
              other.mImageId_ != 0, other.mImageId_);
          mSourceId_ = visitor.visitInt(mSourceId_ != 0, mSourceId_,
              other.mSourceId_ != 0, other.mSourceId_);
          mSourceType_ = visitor.visitInt(mSourceType_ != 0, mSourceType_,    other.mSourceType_ != 0, other.mSourceType_);
          mImageTimestamp_ = visitor.visitLong(mImageTimestamp_ != 0L, mImageTimestamp_,
              other.mImageTimestamp_ != 0L, other.mImageTimestamp_);
          mImageFileExt_ = visitor.visitString(!mImageFileExt_.isEmpty(), mImageFileExt_,
              !other.mImageFileExt_.isEmpty(), other.mImageFileExt_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mImageId_ = input.readInt32();
                  break;
                }
                case 16: {

                  mSourceId_ = input.readInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  mSourceType_ = rawValue;
                  break;
                }
                case 32: {

                  mImageTimestamp_ = input.readInt64();
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  mImageFileExt_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.ImageMetadata_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.ImageMetadata_Struct)
    private static final mcs.ExternalInterface.ImageMetadata_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ImageMetadata_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.ImageMetadata_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ImageMetadata_Struct> PARSER;

    public static com.google.protobuf.Parser<ImageMetadata_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Image_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Image_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Image ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_image_id = 1;</code>
     */
    int getMImageId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Source ID of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_source_id = 2;</code>
     */
    int getMSourceId();

    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    int getMSourceTypeValue();
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    mcs.ExternalInterface.SourceType_Enum getMSourceType();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_image_timestamp = 4;</code>
     */
    long getMImageTimestamp();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    java.lang.String getMImageFileExt();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    com.google.protobuf.ByteString
        getMImageFileExtBytes();

    /**
     * <code>optional bytes m_byte_seq = 6;</code>
     */
    com.google.protobuf.ByteString getMByteSeq();
  }
  /**
   * Protobuf type {@code mcs.Image_Struct}
   */
  public  static final class Image_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Image_Struct, Image_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Image_Struct)
      Image_StructOrBuilder {
    private Image_Struct() {
      mImageFileExt_ = "";
      mByteSeq_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int M_IMAGE_ID_FIELD_NUMBER = 1;
    private int mImageId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Image ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_image_id = 1;</code>
     */
    public int getMImageId() {
      return mImageId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Image ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_image_id = 1;</code>
     */
    private void setMImageId(int value) {
      
      mImageId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Image ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_image_id = 1;</code>
     */
    private void clearMImageId() {
      
      mImageId_ = 0;
    }

    public static final int M_SOURCE_ID_FIELD_NUMBER = 2;
    private int mSourceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Source ID of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_source_id = 2;</code>
     */
    public int getMSourceId() {
      return mSourceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Source ID of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_source_id = 2;</code>
     */
    private void setMSourceId(int value) {
      
      mSourceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Source ID of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_source_id = 2;</code>
     */
    private void clearMSourceId() {
      
      mSourceId_ = 0;
    }

    public static final int M_SOURCE_TYPE_FIELD_NUMBER = 3;
    private int mSourceType_;
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    public int getMSourceTypeValue() {
      return mSourceType_;
    }
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    public mcs.ExternalInterface.SourceType_Enum getMSourceType() {
      mcs.ExternalInterface.SourceType_Enum result = mcs.ExternalInterface.SourceType_Enum.forNumber(mSourceType_);
      return result == null ? mcs.ExternalInterface.SourceType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    private void setMSourceTypeValue(int value) {
        mSourceType_ = value;
    }
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    private void setMSourceType(mcs.ExternalInterface.SourceType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mSourceType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
     */
    private void clearMSourceType() {
      
      mSourceType_ = 0;
    }

    public static final int M_IMAGE_TIMESTAMP_FIELD_NUMBER = 4;
    private long mImageTimestamp_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_image_timestamp = 4;</code>
     */
    public long getMImageTimestamp() {
      return mImageTimestamp_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_image_timestamp = 4;</code>
     */
    private void setMImageTimestamp(long value) {
      
      mImageTimestamp_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_image_timestamp = 4;</code>
     */
    private void clearMImageTimestamp() {
      
      mImageTimestamp_ = 0L;
    }

    public static final int M_IMAGE_FILE_EXT_FIELD_NUMBER = 5;
    private java.lang.String mImageFileExt_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    public java.lang.String getMImageFileExt() {
      return mImageFileExt_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMImageFileExtBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(mImageFileExt_);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    private void setMImageFileExt(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      mImageFileExt_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    private void clearMImageFileExt() {
      
      mImageFileExt_ = getDefaultInstance().getMImageFileExt();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         File extension of the image.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_image_file_ext = 5;</code>
     */
    private void setMImageFileExtBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      mImageFileExt_ = value.toStringUtf8();
    }

    public static final int M_BYTE_SEQ_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString mByteSeq_;
    /**
     * <code>optional bytes m_byte_seq = 6;</code>
     */
    public com.google.protobuf.ByteString getMByteSeq() {
      return mByteSeq_;
    }
    /**
     * <code>optional bytes m_byte_seq = 6;</code>
     */
    private void setMByteSeq(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      mByteSeq_ = value;
    }
    /**
     * <code>optional bytes m_byte_seq = 6;</code>
     */
    private void clearMByteSeq() {
      
      mByteSeq_ = getDefaultInstance().getMByteSeq();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mImageId_ != 0) {
        output.writeInt32(1, mImageId_);
      }
      if (mSourceId_ != 0) {
        output.writeInt32(2, mSourceId_);
      }
      if (mSourceType_ != mcs.ExternalInterface.SourceType_Enum.SOURCE_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(3, mSourceType_);
      }
      if (mImageTimestamp_ != 0L) {
        output.writeInt64(4, mImageTimestamp_);
      }
      if (!mImageFileExt_.isEmpty()) {
        output.writeString(5, getMImageFileExt());
      }
      if (!mByteSeq_.isEmpty()) {
        output.writeBytes(6, mByteSeq_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mImageId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mImageId_);
      }
      if (mSourceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mSourceId_);
      }
      if (mSourceType_ != mcs.ExternalInterface.SourceType_Enum.SOURCE_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mSourceType_);
      }
      if (mImageTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, mImageTimestamp_);
      }
      if (!mImageFileExt_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getMImageFileExt());
      }
      if (!mByteSeq_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, mByteSeq_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Image_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Image_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Image_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Image_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Image_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Image_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Image_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Image_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Image_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Image_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Image_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.Image_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Image_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Image_Struct)
        mcs.ExternalInterface.Image_StructOrBuilder {
      // Construct using mcs.ExternalInterface.Image_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Image ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_image_id = 1;</code>
       */
      public int getMImageId() {
        return instance.getMImageId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Image ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_image_id = 1;</code>
       */
      public Builder setMImageId(int value) {
        copyOnWrite();
        instance.setMImageId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Image ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_image_id = 1;</code>
       */
      public Builder clearMImageId() {
        copyOnWrite();
        instance.clearMImageId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Source ID of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_source_id = 2;</code>
       */
      public int getMSourceId() {
        return instance.getMSourceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Source ID of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_source_id = 2;</code>
       */
      public Builder setMSourceId(int value) {
        copyOnWrite();
        instance.setMSourceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Source ID of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_source_id = 2;</code>
       */
      public Builder clearMSourceId() {
        copyOnWrite();
        instance.clearMSourceId();
        return this;
      }

      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public int getMSourceTypeValue() {
        return instance.getMSourceTypeValue();
      }
      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public Builder setMSourceTypeValue(int value) {
        copyOnWrite();
        instance.setMSourceTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public mcs.ExternalInterface.SourceType_Enum getMSourceType() {
        return instance.getMSourceType();
      }
      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public Builder setMSourceType(mcs.ExternalInterface.SourceType_Enum value) {
        copyOnWrite();
        instance.setMSourceType(value);
        return this;
      }
      /**
       * <code>optional .mcs.SourceType_Enum m_source_type = 3;</code>
       */
      public Builder clearMSourceType() {
        copyOnWrite();
        instance.clearMSourceType();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_image_timestamp = 4;</code>
       */
      public long getMImageTimestamp() {
        return instance.getMImageTimestamp();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_image_timestamp = 4;</code>
       */
      public Builder setMImageTimestamp(long value) {
        copyOnWrite();
        instance.setMImageTimestamp(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the image was taken.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_image_timestamp = 4;</code>
       */
      public Builder clearMImageTimestamp() {
        copyOnWrite();
        instance.clearMImageTimestamp();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public java.lang.String getMImageFileExt() {
        return instance.getMImageFileExt();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMImageFileExtBytes() {
        return instance.getMImageFileExtBytes();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public Builder setMImageFileExt(
          java.lang.String value) {
        copyOnWrite();
        instance.setMImageFileExt(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public Builder clearMImageFileExt() {
        copyOnWrite();
        instance.clearMImageFileExt();
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         File extension of the image.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_image_file_ext = 5;</code>
       */
      public Builder setMImageFileExtBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMImageFileExtBytes(value);
        return this;
      }

      /**
       * <code>optional bytes m_byte_seq = 6;</code>
       */
      public com.google.protobuf.ByteString getMByteSeq() {
        return instance.getMByteSeq();
      }
      /**
       * <code>optional bytes m_byte_seq = 6;</code>
       */
      public Builder setMByteSeq(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMByteSeq(value);
        return this;
      }
      /**
       * <code>optional bytes m_byte_seq = 6;</code>
       */
      public Builder clearMByteSeq() {
        copyOnWrite();
        instance.clearMByteSeq();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Image_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Image_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Image_Struct other = (mcs.ExternalInterface.Image_Struct) arg1;
          mImageId_ = visitor.visitInt(mImageId_ != 0, mImageId_,
              other.mImageId_ != 0, other.mImageId_);
          mSourceId_ = visitor.visitInt(mSourceId_ != 0, mSourceId_,
              other.mSourceId_ != 0, other.mSourceId_);
          mSourceType_ = visitor.visitInt(mSourceType_ != 0, mSourceType_,    other.mSourceType_ != 0, other.mSourceType_);
          mImageTimestamp_ = visitor.visitLong(mImageTimestamp_ != 0L, mImageTimestamp_,
              other.mImageTimestamp_ != 0L, other.mImageTimestamp_);
          mImageFileExt_ = visitor.visitString(!mImageFileExt_.isEmpty(), mImageFileExt_,
              !other.mImageFileExt_.isEmpty(), other.mImageFileExt_);
          mByteSeq_ = visitor.visitByteString(mByteSeq_ != com.google.protobuf.ByteString.EMPTY, mByteSeq_,
              other.mByteSeq_ != com.google.protobuf.ByteString.EMPTY, other.mByteSeq_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mImageId_ = input.readInt32();
                  break;
                }
                case 16: {

                  mSourceId_ = input.readInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  mSourceType_ = rawValue;
                  break;
                }
                case 32: {

                  mImageTimestamp_ = input.readInt64();
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  mImageFileExt_ = s;
                  break;
                }
                case 50: {

                  mByteSeq_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Image_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Image_Struct)
    private static final mcs.ExternalInterface.Image_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Image_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Image_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Image_Struct> PARSER;

    public static com.google.protobuf.Parser<Image_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Location_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Location_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_longitude = 1;</code>
     */
    double getMLongitude();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi/2
     * Max val:         pi/2
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_latitude = 2;</code>
     */
    double getMLatitude();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Altitude above Mean Sea Level. 
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_altitude = 3;</code>
     */
    double getMAltitude();
  }
  /**
   * Protobuf type {@code mcs.Location_Struct}
   */
  public  static final class Location_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Location_Struct, Location_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Location_Struct)
      Location_StructOrBuilder {
    private Location_Struct() {
    }
    public static final int M_LONGITUDE_FIELD_NUMBER = 1;
    private double mLongitude_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_longitude = 1;</code>
     */
    public double getMLongitude() {
      return mLongitude_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_longitude = 1;</code>
     */
    private void setMLongitude(double value) {
      
      mLongitude_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_longitude = 1;</code>
     */
    private void clearMLongitude() {
      
      mLongitude_ = 0D;
    }

    public static final int M_LATITUDE_FIELD_NUMBER = 2;
    private double mLatitude_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi/2
     * Max val:         pi/2
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_latitude = 2;</code>
     */
    public double getMLatitude() {
      return mLatitude_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi/2
     * Max val:         pi/2
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_latitude = 2;</code>
     */
    private void setMLatitude(double value) {
      
      mLatitude_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi/2
     * Max val:         pi/2
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_latitude = 2;</code>
     */
    private void clearMLatitude() {
      
      mLatitude_ = 0D;
    }

    public static final int M_ALTITUDE_FIELD_NUMBER = 3;
    private double mAltitude_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Altitude above Mean Sea Level. 
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_altitude = 3;</code>
     */
    public double getMAltitude() {
      return mAltitude_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Altitude above Mean Sea Level. 
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_altitude = 3;</code>
     */
    private void setMAltitude(double value) {
      
      mAltitude_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Altitude above Mean Sea Level. 
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_altitude = 3;</code>
     */
    private void clearMAltitude() {
      
      mAltitude_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mLongitude_ != 0D) {
        output.writeDouble(1, mLongitude_);
      }
      if (mLatitude_ != 0D) {
        output.writeDouble(2, mLatitude_);
      }
      if (mAltitude_ != 0D) {
        output.writeDouble(3, mAltitude_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mLongitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, mLongitude_);
      }
      if (mLatitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, mLatitude_);
      }
      if (mAltitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, mAltitude_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Location_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Location_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Location_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Location_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Location_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Location_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Location_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Location_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Location_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Location_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Location_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.Location_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Location_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Location_Struct)
        mcs.ExternalInterface.Location_StructOrBuilder {
      // Construct using mcs.ExternalInterface.Location_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_longitude = 1;</code>
       */
      public double getMLongitude() {
        return instance.getMLongitude();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_longitude = 1;</code>
       */
      public Builder setMLongitude(double value) {
        copyOnWrite();
        instance.setMLongitude(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_longitude = 1;</code>
       */
      public Builder clearMLongitude() {
        copyOnWrite();
        instance.clearMLongitude();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi/2
       * Max val:         pi/2
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_latitude = 2;</code>
       */
      public double getMLatitude() {
        return instance.getMLatitude();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi/2
       * Max val:         pi/2
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_latitude = 2;</code>
       */
      public Builder setMLatitude(double value) {
        copyOnWrite();
        instance.setMLatitude(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi/2
       * Max val:         pi/2
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_latitude = 2;</code>
       */
      public Builder clearMLatitude() {
        copyOnWrite();
        instance.clearMLatitude();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Altitude above Mean Sea Level. 
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_altitude = 3;</code>
       */
      public double getMAltitude() {
        return instance.getMAltitude();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Altitude above Mean Sea Level. 
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_altitude = 3;</code>
       */
      public Builder setMAltitude(double value) {
        copyOnWrite();
        instance.setMAltitude(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Altitude above Mean Sea Level. 
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_altitude = 3;</code>
       */
      public Builder clearMAltitude() {
        copyOnWrite();
        instance.clearMAltitude();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Location_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Location_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Location_Struct other = (mcs.ExternalInterface.Location_Struct) arg1;
          mLongitude_ = visitor.visitDouble(mLongitude_ != 0D, mLongitude_,
              other.mLongitude_ != 0D, other.mLongitude_);
          mLatitude_ = visitor.visitDouble(mLatitude_ != 0D, mLatitude_,
              other.mLatitude_ != 0D, other.mLatitude_);
          mAltitude_ = visitor.visitDouble(mAltitude_ != 0D, mAltitude_,
              other.mAltitude_ != 0D, other.mAltitude_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 9: {

                  mLongitude_ = input.readDouble();
                  break;
                }
                case 17: {

                  mLatitude_ = input.readDouble();
                  break;
                }
                case 25: {

                  mAltitude_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Location_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Location_Struct)
    private static final mcs.ExternalInterface.Location_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Location_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Location_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Location_Struct> PARSER;

    public static com.google.protobuf.Parser<Location_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Loiter_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Loiter_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
     */
    int getMLoiterPatternValue();
    /**
     * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
     */
    mcs.ExternalInterface.LoiterPattern_Enum getMLoiterPattern();

    /**
     * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
     */
    int getMLoiterDurationUnitsValue();
    /**
     * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
     */
    mcs.ExternalInterface.LoiterDurationUnits_Enum getMLoiterDurationUnits();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second or lap
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Loiter duration.  -1 = forever.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_loiter_duration = 3;</code>
     */
    int getMLoiterDuration();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         TODO
     * Remarks:         Loiter radius for CIRCULAR, RACECOURSE, FIGURE_OF_EIGHT
     ******************************************************************************************************************	
     * </pre>
     *
     * <code>optional double m_loiter_radius = 4;</code>
     */
    double getMLoiterRadius();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         TODO
     * Remarks:         Loiter length for RACECOURSE, FIGURE_OF_EIGHT
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_loiter_length = 5;</code>
     */
    double getMLoiterLength();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         0
     * Max val:         TODO
     * Remarks:         With respect to true north
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_loiter_bearing = 6;</code>
     */
    double getMLoiterBearing();

    /**
     * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
     */
    int getMLoiterDirectionValue();
    /**
     * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
     */
    mcs.ExternalInterface.LoiterDirection_Enum getMLoiterDirection();
  }
  /**
   * Protobuf type {@code mcs.Loiter_Struct}
   */
  public  static final class Loiter_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Loiter_Struct, Loiter_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Loiter_Struct)
      Loiter_StructOrBuilder {
    private Loiter_Struct() {
    }
    public static final int M_LOITER_PATTERN_FIELD_NUMBER = 1;
    private int mLoiterPattern_;
    /**
     * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
     */
    public int getMLoiterPatternValue() {
      return mLoiterPattern_;
    }
    /**
     * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
     */
    public mcs.ExternalInterface.LoiterPattern_Enum getMLoiterPattern() {
      mcs.ExternalInterface.LoiterPattern_Enum result = mcs.ExternalInterface.LoiterPattern_Enum.forNumber(mLoiterPattern_);
      return result == null ? mcs.ExternalInterface.LoiterPattern_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
     */
    private void setMLoiterPatternValue(int value) {
        mLoiterPattern_ = value;
    }
    /**
     * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
     */
    private void setMLoiterPattern(mcs.ExternalInterface.LoiterPattern_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mLoiterPattern_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
     */
    private void clearMLoiterPattern() {
      
      mLoiterPattern_ = 0;
    }

    public static final int M_LOITER_DURATION_UNITS_FIELD_NUMBER = 2;
    private int mLoiterDurationUnits_;
    /**
     * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
     */
    public int getMLoiterDurationUnitsValue() {
      return mLoiterDurationUnits_;
    }
    /**
     * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
     */
    public mcs.ExternalInterface.LoiterDurationUnits_Enum getMLoiterDurationUnits() {
      mcs.ExternalInterface.LoiterDurationUnits_Enum result = mcs.ExternalInterface.LoiterDurationUnits_Enum.forNumber(mLoiterDurationUnits_);
      return result == null ? mcs.ExternalInterface.LoiterDurationUnits_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
     */
    private void setMLoiterDurationUnitsValue(int value) {
        mLoiterDurationUnits_ = value;
    }
    /**
     * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
     */
    private void setMLoiterDurationUnits(mcs.ExternalInterface.LoiterDurationUnits_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mLoiterDurationUnits_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
     */
    private void clearMLoiterDurationUnits() {
      
      mLoiterDurationUnits_ = 0;
    }

    public static final int M_LOITER_DURATION_FIELD_NUMBER = 3;
    private int mLoiterDuration_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second or lap
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Loiter duration.  -1 = forever.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_loiter_duration = 3;</code>
     */
    public int getMLoiterDuration() {
      return mLoiterDuration_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second or lap
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Loiter duration.  -1 = forever.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_loiter_duration = 3;</code>
     */
    private void setMLoiterDuration(int value) {
      
      mLoiterDuration_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second or lap
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Loiter duration.  -1 = forever.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_loiter_duration = 3;</code>
     */
    private void clearMLoiterDuration() {
      
      mLoiterDuration_ = 0;
    }

    public static final int M_LOITER_RADIUS_FIELD_NUMBER = 4;
    private double mLoiterRadius_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         TODO
     * Remarks:         Loiter radius for CIRCULAR, RACECOURSE, FIGURE_OF_EIGHT
     ******************************************************************************************************************	
     * </pre>
     *
     * <code>optional double m_loiter_radius = 4;</code>
     */
    public double getMLoiterRadius() {
      return mLoiterRadius_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         TODO
     * Remarks:         Loiter radius for CIRCULAR, RACECOURSE, FIGURE_OF_EIGHT
     ******************************************************************************************************************	
     * </pre>
     *
     * <code>optional double m_loiter_radius = 4;</code>
     */
    private void setMLoiterRadius(double value) {
      
      mLoiterRadius_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         TODO
     * Remarks:         Loiter radius for CIRCULAR, RACECOURSE, FIGURE_OF_EIGHT
     ******************************************************************************************************************	
     * </pre>
     *
     * <code>optional double m_loiter_radius = 4;</code>
     */
    private void clearMLoiterRadius() {
      
      mLoiterRadius_ = 0D;
    }

    public static final int M_LOITER_LENGTH_FIELD_NUMBER = 5;
    private double mLoiterLength_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         TODO
     * Remarks:         Loiter length for RACECOURSE, FIGURE_OF_EIGHT
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_loiter_length = 5;</code>
     */
    public double getMLoiterLength() {
      return mLoiterLength_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         TODO
     * Remarks:         Loiter length for RACECOURSE, FIGURE_OF_EIGHT
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_loiter_length = 5;</code>
     */
    private void setMLoiterLength(double value) {
      
      mLoiterLength_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         TODO
     * Remarks:         Loiter length for RACECOURSE, FIGURE_OF_EIGHT
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_loiter_length = 5;</code>
     */
    private void clearMLoiterLength() {
      
      mLoiterLength_ = 0D;
    }

    public static final int M_LOITER_BEARING_FIELD_NUMBER = 6;
    private double mLoiterBearing_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         0
     * Max val:         TODO
     * Remarks:         With respect to true north
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_loiter_bearing = 6;</code>
     */
    public double getMLoiterBearing() {
      return mLoiterBearing_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         0
     * Max val:         TODO
     * Remarks:         With respect to true north
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_loiter_bearing = 6;</code>
     */
    private void setMLoiterBearing(double value) {
      
      mLoiterBearing_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         0
     * Max val:         TODO
     * Remarks:         With respect to true north
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_loiter_bearing = 6;</code>
     */
    private void clearMLoiterBearing() {
      
      mLoiterBearing_ = 0D;
    }

    public static final int M_LOITER_DIRECTION_FIELD_NUMBER = 7;
    private int mLoiterDirection_;
    /**
     * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
     */
    public int getMLoiterDirectionValue() {
      return mLoiterDirection_;
    }
    /**
     * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
     */
    public mcs.ExternalInterface.LoiterDirection_Enum getMLoiterDirection() {
      mcs.ExternalInterface.LoiterDirection_Enum result = mcs.ExternalInterface.LoiterDirection_Enum.forNumber(mLoiterDirection_);
      return result == null ? mcs.ExternalInterface.LoiterDirection_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
     */
    private void setMLoiterDirectionValue(int value) {
        mLoiterDirection_ = value;
    }
    /**
     * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
     */
    private void setMLoiterDirection(mcs.ExternalInterface.LoiterDirection_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mLoiterDirection_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
     */
    private void clearMLoiterDirection() {
      
      mLoiterDirection_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mLoiterPattern_ != mcs.ExternalInterface.LoiterPattern_Enum.LOITER_NONE.getNumber()) {
        output.writeEnum(1, mLoiterPattern_);
      }
      if (mLoiterDurationUnits_ != mcs.ExternalInterface.LoiterDurationUnits_Enum.LOITER_DURATION_SECOND.getNumber()) {
        output.writeEnum(2, mLoiterDurationUnits_);
      }
      if (mLoiterDuration_ != 0) {
        output.writeInt32(3, mLoiterDuration_);
      }
      if (mLoiterRadius_ != 0D) {
        output.writeDouble(4, mLoiterRadius_);
      }
      if (mLoiterLength_ != 0D) {
        output.writeDouble(5, mLoiterLength_);
      }
      if (mLoiterBearing_ != 0D) {
        output.writeDouble(6, mLoiterBearing_);
      }
      if (mLoiterDirection_ != mcs.ExternalInterface.LoiterDirection_Enum.LOITER_DIRECTION_VEHICLE_DEPENDENT.getNumber()) {
        output.writeEnum(7, mLoiterDirection_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mLoiterPattern_ != mcs.ExternalInterface.LoiterPattern_Enum.LOITER_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mLoiterPattern_);
      }
      if (mLoiterDurationUnits_ != mcs.ExternalInterface.LoiterDurationUnits_Enum.LOITER_DURATION_SECOND.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mLoiterDurationUnits_);
      }
      if (mLoiterDuration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mLoiterDuration_);
      }
      if (mLoiterRadius_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, mLoiterRadius_);
      }
      if (mLoiterLength_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, mLoiterLength_);
      }
      if (mLoiterBearing_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, mLoiterBearing_);
      }
      if (mLoiterDirection_ != mcs.ExternalInterface.LoiterDirection_Enum.LOITER_DIRECTION_VEHICLE_DEPENDENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, mLoiterDirection_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Loiter_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Loiter_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Loiter_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.Loiter_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Loiter_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Loiter_Struct)
        mcs.ExternalInterface.Loiter_StructOrBuilder {
      // Construct using mcs.ExternalInterface.Loiter_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
       */
      public int getMLoiterPatternValue() {
        return instance.getMLoiterPatternValue();
      }
      /**
       * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
       */
      public Builder setMLoiterPatternValue(int value) {
        copyOnWrite();
        instance.setMLoiterPatternValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
       */
      public mcs.ExternalInterface.LoiterPattern_Enum getMLoiterPattern() {
        return instance.getMLoiterPattern();
      }
      /**
       * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
       */
      public Builder setMLoiterPattern(mcs.ExternalInterface.LoiterPattern_Enum value) {
        copyOnWrite();
        instance.setMLoiterPattern(value);
        return this;
      }
      /**
       * <code>optional .mcs.LoiterPattern_Enum m_loiter_pattern = 1;</code>
       */
      public Builder clearMLoiterPattern() {
        copyOnWrite();
        instance.clearMLoiterPattern();
        return this;
      }

      /**
       * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
       */
      public int getMLoiterDurationUnitsValue() {
        return instance.getMLoiterDurationUnitsValue();
      }
      /**
       * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
       */
      public Builder setMLoiterDurationUnitsValue(int value) {
        copyOnWrite();
        instance.setMLoiterDurationUnitsValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
       */
      public mcs.ExternalInterface.LoiterDurationUnits_Enum getMLoiterDurationUnits() {
        return instance.getMLoiterDurationUnits();
      }
      /**
       * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
       */
      public Builder setMLoiterDurationUnits(mcs.ExternalInterface.LoiterDurationUnits_Enum value) {
        copyOnWrite();
        instance.setMLoiterDurationUnits(value);
        return this;
      }
      /**
       * <code>optional .mcs.LoiterDurationUnits_Enum m_loiter_duration_units = 2;</code>
       */
      public Builder clearMLoiterDurationUnits() {
        copyOnWrite();
        instance.clearMLoiterDurationUnits();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second or lap
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Loiter duration.  -1 = forever.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_loiter_duration = 3;</code>
       */
      public int getMLoiterDuration() {
        return instance.getMLoiterDuration();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second or lap
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Loiter duration.  -1 = forever.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_loiter_duration = 3;</code>
       */
      public Builder setMLoiterDuration(int value) {
        copyOnWrite();
        instance.setMLoiterDuration(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second or lap
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Loiter duration.  -1 = forever.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_loiter_duration = 3;</code>
       */
      public Builder clearMLoiterDuration() {
        copyOnWrite();
        instance.clearMLoiterDuration();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         TODO
       * Remarks:         Loiter radius for CIRCULAR, RACECOURSE, FIGURE_OF_EIGHT
       ******************************************************************************************************************	
       * </pre>
       *
       * <code>optional double m_loiter_radius = 4;</code>
       */
      public double getMLoiterRadius() {
        return instance.getMLoiterRadius();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         TODO
       * Remarks:         Loiter radius for CIRCULAR, RACECOURSE, FIGURE_OF_EIGHT
       ******************************************************************************************************************	
       * </pre>
       *
       * <code>optional double m_loiter_radius = 4;</code>
       */
      public Builder setMLoiterRadius(double value) {
        copyOnWrite();
        instance.setMLoiterRadius(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         TODO
       * Remarks:         Loiter radius for CIRCULAR, RACECOURSE, FIGURE_OF_EIGHT
       ******************************************************************************************************************	
       * </pre>
       *
       * <code>optional double m_loiter_radius = 4;</code>
       */
      public Builder clearMLoiterRadius() {
        copyOnWrite();
        instance.clearMLoiterRadius();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         TODO
       * Remarks:         Loiter length for RACECOURSE, FIGURE_OF_EIGHT
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_loiter_length = 5;</code>
       */
      public double getMLoiterLength() {
        return instance.getMLoiterLength();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         TODO
       * Remarks:         Loiter length for RACECOURSE, FIGURE_OF_EIGHT
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_loiter_length = 5;</code>
       */
      public Builder setMLoiterLength(double value) {
        copyOnWrite();
        instance.setMLoiterLength(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         TODO
       * Remarks:         Loiter length for RACECOURSE, FIGURE_OF_EIGHT
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_loiter_length = 5;</code>
       */
      public Builder clearMLoiterLength() {
        copyOnWrite();
        instance.clearMLoiterLength();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         0
       * Max val:         TODO
       * Remarks:         With respect to true north
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_loiter_bearing = 6;</code>
       */
      public double getMLoiterBearing() {
        return instance.getMLoiterBearing();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         0
       * Max val:         TODO
       * Remarks:         With respect to true north
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_loiter_bearing = 6;</code>
       */
      public Builder setMLoiterBearing(double value) {
        copyOnWrite();
        instance.setMLoiterBearing(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         0
       * Max val:         TODO
       * Remarks:         With respect to true north
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_loiter_bearing = 6;</code>
       */
      public Builder clearMLoiterBearing() {
        copyOnWrite();
        instance.clearMLoiterBearing();
        return this;
      }

      /**
       * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
       */
      public int getMLoiterDirectionValue() {
        return instance.getMLoiterDirectionValue();
      }
      /**
       * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
       */
      public Builder setMLoiterDirectionValue(int value) {
        copyOnWrite();
        instance.setMLoiterDirectionValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
       */
      public mcs.ExternalInterface.LoiterDirection_Enum getMLoiterDirection() {
        return instance.getMLoiterDirection();
      }
      /**
       * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
       */
      public Builder setMLoiterDirection(mcs.ExternalInterface.LoiterDirection_Enum value) {
        copyOnWrite();
        instance.setMLoiterDirection(value);
        return this;
      }
      /**
       * <code>optional .mcs.LoiterDirection_Enum m_loiter_direction = 7;</code>
       */
      public Builder clearMLoiterDirection() {
        copyOnWrite();
        instance.clearMLoiterDirection();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Loiter_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Loiter_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Loiter_Struct other = (mcs.ExternalInterface.Loiter_Struct) arg1;
          mLoiterPattern_ = visitor.visitInt(mLoiterPattern_ != 0, mLoiterPattern_,    other.mLoiterPattern_ != 0, other.mLoiterPattern_);
          mLoiterDurationUnits_ = visitor.visitInt(mLoiterDurationUnits_ != 0, mLoiterDurationUnits_,    other.mLoiterDurationUnits_ != 0, other.mLoiterDurationUnits_);
          mLoiterDuration_ = visitor.visitInt(mLoiterDuration_ != 0, mLoiterDuration_,
              other.mLoiterDuration_ != 0, other.mLoiterDuration_);
          mLoiterRadius_ = visitor.visitDouble(mLoiterRadius_ != 0D, mLoiterRadius_,
              other.mLoiterRadius_ != 0D, other.mLoiterRadius_);
          mLoiterLength_ = visitor.visitDouble(mLoiterLength_ != 0D, mLoiterLength_,
              other.mLoiterLength_ != 0D, other.mLoiterLength_);
          mLoiterBearing_ = visitor.visitDouble(mLoiterBearing_ != 0D, mLoiterBearing_,
              other.mLoiterBearing_ != 0D, other.mLoiterBearing_);
          mLoiterDirection_ = visitor.visitInt(mLoiterDirection_ != 0, mLoiterDirection_,    other.mLoiterDirection_ != 0, other.mLoiterDirection_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  mLoiterPattern_ = rawValue;
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  mLoiterDurationUnits_ = rawValue;
                  break;
                }
                case 24: {

                  mLoiterDuration_ = input.readInt32();
                  break;
                }
                case 33: {

                  mLoiterRadius_ = input.readDouble();
                  break;
                }
                case 41: {

                  mLoiterLength_ = input.readDouble();
                  break;
                }
                case 49: {

                  mLoiterBearing_ = input.readDouble();
                  break;
                }
                case 56: {
                  int rawValue = input.readEnum();

                  mLoiterDirection_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Loiter_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Loiter_Struct)
    private static final mcs.ExternalInterface.Loiter_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Loiter_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Loiter_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Loiter_Struct> PARSER;

    public static com.google.protobuf.Parser<Loiter_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MsgHeader_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.MsgHeader_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Remarks:         Unique ID of this message type
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
     */
    int getMMsgTypeIdValue();
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Remarks:         Unique ID of this message type
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
     */
    mcs.ExternalInterface.MsgTypeId_Enum getMMsgTypeId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the message was sent.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_timestamp = 2;</code>
     */
    long getMTimestamp();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         System ID of system sending the message
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_system_id = 3;</code>
     */
    int getMSystemId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         System ID of the recipient system
     ******************************************************************************************************************    
     * </pre>
     *
     * <code>optional int32 m_destination_id = 4;</code>
     */
    int getMDestinationId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Expiry time of the message.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_expiry_time = 5;</code>
     */
    long getMExpiryTime();
  }
  /**
   * Protobuf type {@code mcs.MsgHeader_Struct}
   */
  public  static final class MsgHeader_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          MsgHeader_Struct, MsgHeader_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.MsgHeader_Struct)
      MsgHeader_StructOrBuilder {
    private MsgHeader_Struct() {
    }
    public static final int M_MSG_TYPE_ID_FIELD_NUMBER = 1;
    private int mMsgTypeId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Remarks:         Unique ID of this message type
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
     */
    public int getMMsgTypeIdValue() {
      return mMsgTypeId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Remarks:         Unique ID of this message type
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
     */
    public mcs.ExternalInterface.MsgTypeId_Enum getMMsgTypeId() {
      mcs.ExternalInterface.MsgTypeId_Enum result = mcs.ExternalInterface.MsgTypeId_Enum.forNumber(mMsgTypeId_);
      return result == null ? mcs.ExternalInterface.MsgTypeId_Enum.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Remarks:         Unique ID of this message type
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
     */
    private void setMMsgTypeIdValue(int value) {
        mMsgTypeId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Remarks:         Unique ID of this message type
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
     */
    private void setMMsgTypeId(mcs.ExternalInterface.MsgTypeId_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mMsgTypeId_ = value.getNumber();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Remarks:         Unique ID of this message type
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
     */
    private void clearMMsgTypeId() {
      
      mMsgTypeId_ = 0;
    }

    public static final int M_TIMESTAMP_FIELD_NUMBER = 2;
    private long mTimestamp_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the message was sent.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_timestamp = 2;</code>
     */
    public long getMTimestamp() {
      return mTimestamp_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the message was sent.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_timestamp = 2;</code>
     */
    private void setMTimestamp(long value) {
      
      mTimestamp_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Time that the message was sent.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_timestamp = 2;</code>
     */
    private void clearMTimestamp() {
      
      mTimestamp_ = 0L;
    }

    public static final int M_SYSTEM_ID_FIELD_NUMBER = 3;
    private int mSystemId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         System ID of system sending the message
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_system_id = 3;</code>
     */
    public int getMSystemId() {
      return mSystemId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         System ID of system sending the message
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_system_id = 3;</code>
     */
    private void setMSystemId(int value) {
      
      mSystemId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         System ID of system sending the message
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_system_id = 3;</code>
     */
    private void clearMSystemId() {
      
      mSystemId_ = 0;
    }

    public static final int M_DESTINATION_ID_FIELD_NUMBER = 4;
    private int mDestinationId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         System ID of the recipient system
     ******************************************************************************************************************    
     * </pre>
     *
     * <code>optional int32 m_destination_id = 4;</code>
     */
    public int getMDestinationId() {
      return mDestinationId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         System ID of the recipient system
     ******************************************************************************************************************    
     * </pre>
     *
     * <code>optional int32 m_destination_id = 4;</code>
     */
    private void setMDestinationId(int value) {
      
      mDestinationId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         System ID of the recipient system
     ******************************************************************************************************************    
     * </pre>
     *
     * <code>optional int32 m_destination_id = 4;</code>
     */
    private void clearMDestinationId() {
      
      mDestinationId_ = 0;
    }

    public static final int M_EXPIRY_TIME_FIELD_NUMBER = 5;
    private long mExpiryTime_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Expiry time of the message.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_expiry_time = 5;</code>
     */
    public long getMExpiryTime() {
      return mExpiryTime_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Expiry time of the message.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_expiry_time = 5;</code>
     */
    private void setMExpiryTime(long value) {
      
      mExpiryTime_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Expiry time of the message.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_expiry_time = 5;</code>
     */
    private void clearMExpiryTime() {
      
      mExpiryTime_ = 0L;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgTypeId_ != mcs.ExternalInterface.MsgTypeId_Enum.MSG_TYPE_ID_NOT_IN_USE.getNumber()) {
        output.writeEnum(1, mMsgTypeId_);
      }
      if (mTimestamp_ != 0L) {
        output.writeInt64(2, mTimestamp_);
      }
      if (mSystemId_ != 0) {
        output.writeInt32(3, mSystemId_);
      }
      if (mDestinationId_ != 0) {
        output.writeInt32(4, mDestinationId_);
      }
      if (mExpiryTime_ != 0L) {
        output.writeInt64(5, mExpiryTime_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgTypeId_ != mcs.ExternalInterface.MsgTypeId_Enum.MSG_TYPE_ID_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mMsgTypeId_);
      }
      if (mTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, mTimestamp_);
      }
      if (mSystemId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mSystemId_);
      }
      if (mDestinationId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mDestinationId_);
      }
      if (mExpiryTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, mExpiryTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.MsgHeader_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.MsgHeader_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.MsgHeader_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.MsgHeader_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.MsgHeader_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.MsgHeader_Struct)
        mcs.ExternalInterface.MsgHeader_StructOrBuilder {
      // Construct using mcs.ExternalInterface.MsgHeader_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Remarks:         Unique ID of this message type
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
       */
      public int getMMsgTypeIdValue() {
        return instance.getMMsgTypeIdValue();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Remarks:         Unique ID of this message type
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
       */
      public Builder setMMsgTypeIdValue(int value) {
        copyOnWrite();
        instance.setMMsgTypeIdValue(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Remarks:         Unique ID of this message type
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
       */
      public mcs.ExternalInterface.MsgTypeId_Enum getMMsgTypeId() {
        return instance.getMMsgTypeId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Remarks:         Unique ID of this message type
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
       */
      public Builder setMMsgTypeId(mcs.ExternalInterface.MsgTypeId_Enum value) {
        copyOnWrite();
        instance.setMMsgTypeId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Remarks:         Unique ID of this message type
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_msg_type_id = 1;</code>
       */
      public Builder clearMMsgTypeId() {
        copyOnWrite();
        instance.clearMMsgTypeId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the message was sent.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_timestamp = 2;</code>
       */
      public long getMTimestamp() {
        return instance.getMTimestamp();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the message was sent.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_timestamp = 2;</code>
       */
      public Builder setMTimestamp(long value) {
        copyOnWrite();
        instance.setMTimestamp(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Time that the message was sent.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_timestamp = 2;</code>
       */
      public Builder clearMTimestamp() {
        copyOnWrite();
        instance.clearMTimestamp();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         System ID of system sending the message
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_system_id = 3;</code>
       */
      public int getMSystemId() {
        return instance.getMSystemId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         System ID of system sending the message
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_system_id = 3;</code>
       */
      public Builder setMSystemId(int value) {
        copyOnWrite();
        instance.setMSystemId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         System ID of system sending the message
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_system_id = 3;</code>
       */
      public Builder clearMSystemId() {
        copyOnWrite();
        instance.clearMSystemId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         System ID of the recipient system
       ******************************************************************************************************************    
       * </pre>
       *
       * <code>optional int32 m_destination_id = 4;</code>
       */
      public int getMDestinationId() {
        return instance.getMDestinationId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         System ID of the recipient system
       ******************************************************************************************************************    
       * </pre>
       *
       * <code>optional int32 m_destination_id = 4;</code>
       */
      public Builder setMDestinationId(int value) {
        copyOnWrite();
        instance.setMDestinationId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         System ID of the recipient system
       ******************************************************************************************************************    
       * </pre>
       *
       * <code>optional int32 m_destination_id = 4;</code>
       */
      public Builder clearMDestinationId() {
        copyOnWrite();
        instance.clearMDestinationId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Expiry time of the message.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_expiry_time = 5;</code>
       */
      public long getMExpiryTime() {
        return instance.getMExpiryTime();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Expiry time of the message.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_expiry_time = 5;</code>
       */
      public Builder setMExpiryTime(long value) {
        copyOnWrite();
        instance.setMExpiryTime(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Expiry time of the message.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_expiry_time = 5;</code>
       */
      public Builder clearMExpiryTime() {
        copyOnWrite();
        instance.clearMExpiryTime();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.MsgHeader_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.MsgHeader_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.MsgHeader_Struct other = (mcs.ExternalInterface.MsgHeader_Struct) arg1;
          mMsgTypeId_ = visitor.visitInt(mMsgTypeId_ != 0, mMsgTypeId_,    other.mMsgTypeId_ != 0, other.mMsgTypeId_);
          mTimestamp_ = visitor.visitLong(mTimestamp_ != 0L, mTimestamp_,
              other.mTimestamp_ != 0L, other.mTimestamp_);
          mSystemId_ = visitor.visitInt(mSystemId_ != 0, mSystemId_,
              other.mSystemId_ != 0, other.mSystemId_);
          mDestinationId_ = visitor.visitInt(mDestinationId_ != 0, mDestinationId_,
              other.mDestinationId_ != 0, other.mDestinationId_);
          mExpiryTime_ = visitor.visitLong(mExpiryTime_ != 0L, mExpiryTime_,
              other.mExpiryTime_ != 0L, other.mExpiryTime_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  mMsgTypeId_ = rawValue;
                  break;
                }
                case 16: {

                  mTimestamp_ = input.readInt64();
                  break;
                }
                case 24: {

                  mSystemId_ = input.readInt32();
                  break;
                }
                case 32: {

                  mDestinationId_ = input.readInt32();
                  break;
                }
                case 40: {

                  mExpiryTime_ = input.readInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.MsgHeader_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.MsgHeader_Struct)
    private static final mcs.ExternalInterface.MsgHeader_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MsgHeader_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.MsgHeader_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<MsgHeader_Struct> PARSER;

    public static com.google.protobuf.Parser<MsgHeader_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Orientation_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Orientation_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
     */
    int getMFrameOfReferenceValue();
    /**
     * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
     */
    mcs.ExternalInterface.FrameOfReference_Enum getMFrameOfReference();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_roll = 2;</code>
     */
    double getMRoll();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_pitch = 3;</code>
     */
    double getMPitch();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_yaw = 4;</code>
     */
    double getMYaw();
  }
  /**
   * Protobuf type {@code mcs.Orientation_Struct}
   */
  public  static final class Orientation_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Orientation_Struct, Orientation_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Orientation_Struct)
      Orientation_StructOrBuilder {
    private Orientation_Struct() {
    }
    public static final int M_FRAME_OF_REFERENCE_FIELD_NUMBER = 1;
    private int mFrameOfReference_;
    /**
     * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
     */
    public int getMFrameOfReferenceValue() {
      return mFrameOfReference_;
    }
    /**
     * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
     */
    public mcs.ExternalInterface.FrameOfReference_Enum getMFrameOfReference() {
      mcs.ExternalInterface.FrameOfReference_Enum result = mcs.ExternalInterface.FrameOfReference_Enum.forNumber(mFrameOfReference_);
      return result == null ? mcs.ExternalInterface.FrameOfReference_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
     */
    private void setMFrameOfReferenceValue(int value) {
        mFrameOfReference_ = value;
    }
    /**
     * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
     */
    private void setMFrameOfReference(mcs.ExternalInterface.FrameOfReference_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mFrameOfReference_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
     */
    private void clearMFrameOfReference() {
      
      mFrameOfReference_ = 0;
    }

    public static final int M_ROLL_FIELD_NUMBER = 2;
    private double mRoll_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_roll = 2;</code>
     */
    public double getMRoll() {
      return mRoll_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_roll = 2;</code>
     */
    private void setMRoll(double value) {
      
      mRoll_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_roll = 2;</code>
     */
    private void clearMRoll() {
      
      mRoll_ = 0D;
    }

    public static final int M_PITCH_FIELD_NUMBER = 3;
    private double mPitch_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_pitch = 3;</code>
     */
    public double getMPitch() {
      return mPitch_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_pitch = 3;</code>
     */
    private void setMPitch(double value) {
      
      mPitch_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_pitch = 3;</code>
     */
    private void clearMPitch() {
      
      mPitch_ = 0D;
    }

    public static final int M_YAW_FIELD_NUMBER = 4;
    private double mYaw_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_yaw = 4;</code>
     */
    public double getMYaw() {
      return mYaw_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_yaw = 4;</code>
     */
    private void setMYaw(double value) {
      
      mYaw_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_yaw = 4;</code>
     */
    private void clearMYaw() {
      
      mYaw_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mFrameOfReference_ != mcs.ExternalInterface.FrameOfReference_Enum.FRAME_OF_REFERENCE_NOT_IN_USE.getNumber()) {
        output.writeEnum(1, mFrameOfReference_);
      }
      if (mRoll_ != 0D) {
        output.writeDouble(2, mRoll_);
      }
      if (mPitch_ != 0D) {
        output.writeDouble(3, mPitch_);
      }
      if (mYaw_ != 0D) {
        output.writeDouble(4, mYaw_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mFrameOfReference_ != mcs.ExternalInterface.FrameOfReference_Enum.FRAME_OF_REFERENCE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mFrameOfReference_);
      }
      if (mRoll_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, mRoll_);
      }
      if (mPitch_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, mPitch_);
      }
      if (mYaw_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, mYaw_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Orientation_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Orientation_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Orientation_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.Orientation_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Orientation_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Orientation_Struct)
        mcs.ExternalInterface.Orientation_StructOrBuilder {
      // Construct using mcs.ExternalInterface.Orientation_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
       */
      public int getMFrameOfReferenceValue() {
        return instance.getMFrameOfReferenceValue();
      }
      /**
       * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
       */
      public Builder setMFrameOfReferenceValue(int value) {
        copyOnWrite();
        instance.setMFrameOfReferenceValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
       */
      public mcs.ExternalInterface.FrameOfReference_Enum getMFrameOfReference() {
        return instance.getMFrameOfReference();
      }
      /**
       * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
       */
      public Builder setMFrameOfReference(mcs.ExternalInterface.FrameOfReference_Enum value) {
        copyOnWrite();
        instance.setMFrameOfReference(value);
        return this;
      }
      /**
       * <code>optional .mcs.FrameOfReference_Enum m_frame_of_reference = 1;</code>
       */
      public Builder clearMFrameOfReference() {
        copyOnWrite();
        instance.clearMFrameOfReference();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_roll = 2;</code>
       */
      public double getMRoll() {
        return instance.getMRoll();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_roll = 2;</code>
       */
      public Builder setMRoll(double value) {
        copyOnWrite();
        instance.setMRoll(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_roll = 2;</code>
       */
      public Builder clearMRoll() {
        copyOnWrite();
        instance.clearMRoll();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_pitch = 3;</code>
       */
      public double getMPitch() {
        return instance.getMPitch();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_pitch = 3;</code>
       */
      public Builder setMPitch(double value) {
        copyOnWrite();
        instance.setMPitch(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_pitch = 3;</code>
       */
      public Builder clearMPitch() {
        copyOnWrite();
        instance.clearMPitch();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_yaw = 4;</code>
       */
      public double getMYaw() {
        return instance.getMYaw();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_yaw = 4;</code>
       */
      public Builder setMYaw(double value) {
        copyOnWrite();
        instance.setMYaw(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_yaw = 4;</code>
       */
      public Builder clearMYaw() {
        copyOnWrite();
        instance.clearMYaw();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Orientation_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Orientation_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Orientation_Struct other = (mcs.ExternalInterface.Orientation_Struct) arg1;
          mFrameOfReference_ = visitor.visitInt(mFrameOfReference_ != 0, mFrameOfReference_,    other.mFrameOfReference_ != 0, other.mFrameOfReference_);
          mRoll_ = visitor.visitDouble(mRoll_ != 0D, mRoll_,
              other.mRoll_ != 0D, other.mRoll_);
          mPitch_ = visitor.visitDouble(mPitch_ != 0D, mPitch_,
              other.mPitch_ != 0D, other.mPitch_);
          mYaw_ = visitor.visitDouble(mYaw_ != 0D, mYaw_,
              other.mYaw_ != 0D, other.mYaw_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();

                  mFrameOfReference_ = rawValue;
                  break;
                }
                case 17: {

                  mRoll_ = input.readDouble();
                  break;
                }
                case 25: {

                  mPitch_ = input.readDouble();
                  break;
                }
                case 33: {

                  mYaw_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Orientation_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Orientation_Struct)
    private static final mcs.ExternalInterface.Orientation_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Orientation_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Orientation_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Orientation_Struct> PARSER;

    public static com.google.protobuf.Parser<Orientation_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PayloadSensorStatus_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.PayloadSensorStatus_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 1;</code>
     */
    int getMPayloadId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload type of asset.
     *                  1 = TRP2 SURVEILLANCE CAMERA DAY
     *                  2 = TRP2 SURVEILLANCE CAMERA NIGHT
     *                  3 = TRP2 LASER RANGE FINDER
     *                  4 = TRP2 VEHICLE CAMERA FRONT DAY
     *                  5 = TRP2 VEHICLE CAMERA FRONT NIGHT
     *                  6 = TRP2 VEHICLE CAMERA REAR DAY
     *                  7 = TRP2 FIRING CAMERA DAY
     *                  8 = TRP2 FIRING CAMERA NIGHT
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_type = 2;</code>
     */
    int getMPayloadType();

    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    int getMIsActiveValue();
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    mcs.ExternalInterface.IsActive_Enum getMIsActive();

    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    int getMPayloadHealthValue();
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    mcs.ExternalInterface.PayloadHealth_Enum getMPayloadHealth();

    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    boolean hasMOrientation();
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    mcs.ExternalInterface.Orientation_Struct getMOrientation();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -1
     * Max val:         pi
     * Remarks:         Vertical field of view.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_v_fov = 6;</code>
     */
    double getMVFov();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -1
     * Max val:         pi
     * Remarks:         Horizontal field of view.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_h_fov = 7;</code>
     */
    double getMHFov();
  }
  /**
   * Protobuf type {@code mcs.PayloadSensorStatus_Struct}
   */
  public  static final class PayloadSensorStatus_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          PayloadSensorStatus_Struct, PayloadSensorStatus_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.PayloadSensorStatus_Struct)
      PayloadSensorStatus_StructOrBuilder {
    private PayloadSensorStatus_Struct() {
    }
    public static final int M_PAYLOAD_ID_FIELD_NUMBER = 1;
    private int mPayloadId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 1;</code>
     */
    public int getMPayloadId() {
      return mPayloadId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 1;</code>
     */
    private void setMPayloadId(int value) {
      
      mPayloadId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 1;</code>
     */
    private void clearMPayloadId() {
      
      mPayloadId_ = 0;
    }

    public static final int M_PAYLOAD_TYPE_FIELD_NUMBER = 2;
    private int mPayloadType_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload type of asset.
     *                  1 = TRP2 SURVEILLANCE CAMERA DAY
     *                  2 = TRP2 SURVEILLANCE CAMERA NIGHT
     *                  3 = TRP2 LASER RANGE FINDER
     *                  4 = TRP2 VEHICLE CAMERA FRONT DAY
     *                  5 = TRP2 VEHICLE CAMERA FRONT NIGHT
     *                  6 = TRP2 VEHICLE CAMERA REAR DAY
     *                  7 = TRP2 FIRING CAMERA DAY
     *                  8 = TRP2 FIRING CAMERA NIGHT
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_type = 2;</code>
     */
    public int getMPayloadType() {
      return mPayloadType_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload type of asset.
     *                  1 = TRP2 SURVEILLANCE CAMERA DAY
     *                  2 = TRP2 SURVEILLANCE CAMERA NIGHT
     *                  3 = TRP2 LASER RANGE FINDER
     *                  4 = TRP2 VEHICLE CAMERA FRONT DAY
     *                  5 = TRP2 VEHICLE CAMERA FRONT NIGHT
     *                  6 = TRP2 VEHICLE CAMERA REAR DAY
     *                  7 = TRP2 FIRING CAMERA DAY
     *                  8 = TRP2 FIRING CAMERA NIGHT
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_type = 2;</code>
     */
    private void setMPayloadType(int value) {
      
      mPayloadType_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload type of asset.
     *                  1 = TRP2 SURVEILLANCE CAMERA DAY
     *                  2 = TRP2 SURVEILLANCE CAMERA NIGHT
     *                  3 = TRP2 LASER RANGE FINDER
     *                  4 = TRP2 VEHICLE CAMERA FRONT DAY
     *                  5 = TRP2 VEHICLE CAMERA FRONT NIGHT
     *                  6 = TRP2 VEHICLE CAMERA REAR DAY
     *                  7 = TRP2 FIRING CAMERA DAY
     *                  8 = TRP2 FIRING CAMERA NIGHT
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_type = 2;</code>
     */
    private void clearMPayloadType() {
      
      mPayloadType_ = 0;
    }

    public static final int M_IS_ACTIVE_FIELD_NUMBER = 3;
    private int mIsActive_;
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    public int getMIsActiveValue() {
      return mIsActive_;
    }
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    public mcs.ExternalInterface.IsActive_Enum getMIsActive() {
      mcs.ExternalInterface.IsActive_Enum result = mcs.ExternalInterface.IsActive_Enum.forNumber(mIsActive_);
      return result == null ? mcs.ExternalInterface.IsActive_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    private void setMIsActiveValue(int value) {
        mIsActive_ = value;
    }
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    private void setMIsActive(mcs.ExternalInterface.IsActive_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mIsActive_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    private void clearMIsActive() {
      
      mIsActive_ = 0;
    }

    public static final int M_PAYLOAD_HEALTH_FIELD_NUMBER = 4;
    private int mPayloadHealth_;
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    public int getMPayloadHealthValue() {
      return mPayloadHealth_;
    }
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    public mcs.ExternalInterface.PayloadHealth_Enum getMPayloadHealth() {
      mcs.ExternalInterface.PayloadHealth_Enum result = mcs.ExternalInterface.PayloadHealth_Enum.forNumber(mPayloadHealth_);
      return result == null ? mcs.ExternalInterface.PayloadHealth_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    private void setMPayloadHealthValue(int value) {
        mPayloadHealth_ = value;
    }
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    private void setMPayloadHealth(mcs.ExternalInterface.PayloadHealth_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mPayloadHealth_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    private void clearMPayloadHealth() {
      
      mPayloadHealth_ = 0;
    }

    public static final int M_ORIENTATION_FIELD_NUMBER = 5;
    private mcs.ExternalInterface.Orientation_Struct mOrientation_;
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    public boolean hasMOrientation() {
      return mOrientation_ != null;
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    public mcs.ExternalInterface.Orientation_Struct getMOrientation() {
      return mOrientation_ == null ? mcs.ExternalInterface.Orientation_Struct.getDefaultInstance() : mOrientation_;
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void setMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mOrientation_ = value;
      
      }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void setMOrientation(
        mcs.ExternalInterface.Orientation_Struct.Builder builderForValue) {
      mOrientation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void mergeMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
      if (mOrientation_ != null &&
          mOrientation_ != mcs.ExternalInterface.Orientation_Struct.getDefaultInstance()) {
        mOrientation_ =
          mcs.ExternalInterface.Orientation_Struct.newBuilder(mOrientation_).mergeFrom(value).buildPartial();
      } else {
        mOrientation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void clearMOrientation() {  mOrientation_ = null;
      
    }

    public static final int M_V_FOV_FIELD_NUMBER = 6;
    private double mVFov_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -1
     * Max val:         pi
     * Remarks:         Vertical field of view.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_v_fov = 6;</code>
     */
    public double getMVFov() {
      return mVFov_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -1
     * Max val:         pi
     * Remarks:         Vertical field of view.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_v_fov = 6;</code>
     */
    private void setMVFov(double value) {
      
      mVFov_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -1
     * Max val:         pi
     * Remarks:         Vertical field of view.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_v_fov = 6;</code>
     */
    private void clearMVFov() {
      
      mVFov_ = 0D;
    }

    public static final int M_H_FOV_FIELD_NUMBER = 7;
    private double mHFov_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -1
     * Max val:         pi
     * Remarks:         Horizontal field of view.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_h_fov = 7;</code>
     */
    public double getMHFov() {
      return mHFov_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -1
     * Max val:         pi
     * Remarks:         Horizontal field of view.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_h_fov = 7;</code>
     */
    private void setMHFov(double value) {
      
      mHFov_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -1
     * Max val:         pi
     * Remarks:         Horizontal field of view.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_h_fov = 7;</code>
     */
    private void clearMHFov() {
      
      mHFov_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mPayloadId_ != 0) {
        output.writeInt32(1, mPayloadId_);
      }
      if (mPayloadType_ != 0) {
        output.writeInt32(2, mPayloadType_);
      }
      if (mIsActive_ != mcs.ExternalInterface.IsActive_Enum.IS_ACTIVE_NOT_IN_USE.getNumber()) {
        output.writeEnum(3, mIsActive_);
      }
      if (mPayloadHealth_ != mcs.ExternalInterface.PayloadHealth_Enum.PAYLOAD_HEALTH_NOT_IN_USE.getNumber()) {
        output.writeEnum(4, mPayloadHealth_);
      }
      if (mOrientation_ != null) {
        output.writeMessage(5, getMOrientation());
      }
      if (mVFov_ != 0D) {
        output.writeDouble(6, mVFov_);
      }
      if (mHFov_ != 0D) {
        output.writeDouble(7, mHFov_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mPayloadId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mPayloadId_);
      }
      if (mPayloadType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mPayloadType_);
      }
      if (mIsActive_ != mcs.ExternalInterface.IsActive_Enum.IS_ACTIVE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mIsActive_);
      }
      if (mPayloadHealth_ != mcs.ExternalInterface.PayloadHealth_Enum.PAYLOAD_HEALTH_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mPayloadHealth_);
      }
      if (mOrientation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMOrientation());
      }
      if (mVFov_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, mVFov_);
      }
      if (mHFov_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, mHFov_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.PayloadSensorStatus_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.PayloadSensorStatus_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.PayloadSensorStatus_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.PayloadSensorStatus_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.PayloadSensorStatus_Struct)
        mcs.ExternalInterface.PayloadSensorStatus_StructOrBuilder {
      // Construct using mcs.ExternalInterface.PayloadSensorStatus_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 1;</code>
       */
      public int getMPayloadId() {
        return instance.getMPayloadId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 1;</code>
       */
      public Builder setMPayloadId(int value) {
        copyOnWrite();
        instance.setMPayloadId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 1;</code>
       */
      public Builder clearMPayloadId() {
        copyOnWrite();
        instance.clearMPayloadId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload type of asset.
       *                  1 = TRP2 SURVEILLANCE CAMERA DAY
       *                  2 = TRP2 SURVEILLANCE CAMERA NIGHT
       *                  3 = TRP2 LASER RANGE FINDER
       *                  4 = TRP2 VEHICLE CAMERA FRONT DAY
       *                  5 = TRP2 VEHICLE CAMERA FRONT NIGHT
       *                  6 = TRP2 VEHICLE CAMERA REAR DAY
       *                  7 = TRP2 FIRING CAMERA DAY
       *                  8 = TRP2 FIRING CAMERA NIGHT
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_type = 2;</code>
       */
      public int getMPayloadType() {
        return instance.getMPayloadType();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload type of asset.
       *                  1 = TRP2 SURVEILLANCE CAMERA DAY
       *                  2 = TRP2 SURVEILLANCE CAMERA NIGHT
       *                  3 = TRP2 LASER RANGE FINDER
       *                  4 = TRP2 VEHICLE CAMERA FRONT DAY
       *                  5 = TRP2 VEHICLE CAMERA FRONT NIGHT
       *                  6 = TRP2 VEHICLE CAMERA REAR DAY
       *                  7 = TRP2 FIRING CAMERA DAY
       *                  8 = TRP2 FIRING CAMERA NIGHT
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_type = 2;</code>
       */
      public Builder setMPayloadType(int value) {
        copyOnWrite();
        instance.setMPayloadType(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload type of asset.
       *                  1 = TRP2 SURVEILLANCE CAMERA DAY
       *                  2 = TRP2 SURVEILLANCE CAMERA NIGHT
       *                  3 = TRP2 LASER RANGE FINDER
       *                  4 = TRP2 VEHICLE CAMERA FRONT DAY
       *                  5 = TRP2 VEHICLE CAMERA FRONT NIGHT
       *                  6 = TRP2 VEHICLE CAMERA REAR DAY
       *                  7 = TRP2 FIRING CAMERA DAY
       *                  8 = TRP2 FIRING CAMERA NIGHT
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_type = 2;</code>
       */
      public Builder clearMPayloadType() {
        copyOnWrite();
        instance.clearMPayloadType();
        return this;
      }

      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public int getMIsActiveValue() {
        return instance.getMIsActiveValue();
      }
      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public Builder setMIsActiveValue(int value) {
        copyOnWrite();
        instance.setMIsActiveValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public mcs.ExternalInterface.IsActive_Enum getMIsActive() {
        return instance.getMIsActive();
      }
      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public Builder setMIsActive(mcs.ExternalInterface.IsActive_Enum value) {
        copyOnWrite();
        instance.setMIsActive(value);
        return this;
      }
      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public Builder clearMIsActive() {
        copyOnWrite();
        instance.clearMIsActive();
        return this;
      }

      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public int getMPayloadHealthValue() {
        return instance.getMPayloadHealthValue();
      }
      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public Builder setMPayloadHealthValue(int value) {
        copyOnWrite();
        instance.setMPayloadHealthValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public mcs.ExternalInterface.PayloadHealth_Enum getMPayloadHealth() {
        return instance.getMPayloadHealth();
      }
      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public Builder setMPayloadHealth(mcs.ExternalInterface.PayloadHealth_Enum value) {
        copyOnWrite();
        instance.setMPayloadHealth(value);
        return this;
      }
      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public Builder clearMPayloadHealth() {
        copyOnWrite();
        instance.clearMPayloadHealth();
        return this;
      }

      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public boolean hasMOrientation() {
        return instance.hasMOrientation();
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public mcs.ExternalInterface.Orientation_Struct getMOrientation() {
        return instance.getMOrientation();
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder setMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
        copyOnWrite();
        instance.setMOrientation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder setMOrientation(
          mcs.ExternalInterface.Orientation_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMOrientation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder mergeMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
        copyOnWrite();
        instance.mergeMOrientation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder clearMOrientation() {  copyOnWrite();
        instance.clearMOrientation();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -1
       * Max val:         pi
       * Remarks:         Vertical field of view.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_v_fov = 6;</code>
       */
      public double getMVFov() {
        return instance.getMVFov();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -1
       * Max val:         pi
       * Remarks:         Vertical field of view.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_v_fov = 6;</code>
       */
      public Builder setMVFov(double value) {
        copyOnWrite();
        instance.setMVFov(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -1
       * Max val:         pi
       * Remarks:         Vertical field of view.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_v_fov = 6;</code>
       */
      public Builder clearMVFov() {
        copyOnWrite();
        instance.clearMVFov();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -1
       * Max val:         pi
       * Remarks:         Horizontal field of view.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_h_fov = 7;</code>
       */
      public double getMHFov() {
        return instance.getMHFov();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -1
       * Max val:         pi
       * Remarks:         Horizontal field of view.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_h_fov = 7;</code>
       */
      public Builder setMHFov(double value) {
        copyOnWrite();
        instance.setMHFov(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -1
       * Max val:         pi
       * Remarks:         Horizontal field of view.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_h_fov = 7;</code>
       */
      public Builder clearMHFov() {
        copyOnWrite();
        instance.clearMHFov();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.PayloadSensorStatus_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.PayloadSensorStatus_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.PayloadSensorStatus_Struct other = (mcs.ExternalInterface.PayloadSensorStatus_Struct) arg1;
          mPayloadId_ = visitor.visitInt(mPayloadId_ != 0, mPayloadId_,
              other.mPayloadId_ != 0, other.mPayloadId_);
          mPayloadType_ = visitor.visitInt(mPayloadType_ != 0, mPayloadType_,
              other.mPayloadType_ != 0, other.mPayloadType_);
          mIsActive_ = visitor.visitInt(mIsActive_ != 0, mIsActive_,    other.mIsActive_ != 0, other.mIsActive_);
          mPayloadHealth_ = visitor.visitInt(mPayloadHealth_ != 0, mPayloadHealth_,    other.mPayloadHealth_ != 0, other.mPayloadHealth_);
          mOrientation_ = visitor.visitMessage(mOrientation_, other.mOrientation_);
          mVFov_ = visitor.visitDouble(mVFov_ != 0D, mVFov_,
              other.mVFov_ != 0D, other.mVFov_);
          mHFov_ = visitor.visitDouble(mHFov_ != 0D, mHFov_,
              other.mHFov_ != 0D, other.mHFov_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mPayloadId_ = input.readInt32();
                  break;
                }
                case 16: {

                  mPayloadType_ = input.readInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  mIsActive_ = rawValue;
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  mPayloadHealth_ = rawValue;
                  break;
                }
                case 42: {
                  mcs.ExternalInterface.Orientation_Struct.Builder subBuilder = null;
                  if (mOrientation_ != null) {
                    subBuilder = mOrientation_.toBuilder();
                  }
                  mOrientation_ = input.readMessage(mcs.ExternalInterface.Orientation_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mOrientation_);
                    mOrientation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 49: {

                  mVFov_ = input.readDouble();
                  break;
                }
                case 57: {

                  mHFov_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.PayloadSensorStatus_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.PayloadSensorStatus_Struct)
    private static final mcs.ExternalInterface.PayloadSensorStatus_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PayloadSensorStatus_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.PayloadSensorStatus_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PayloadSensorStatus_Struct> PARSER;

    public static com.google.protobuf.Parser<PayloadSensorStatus_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PayloadWeaponStatus_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.PayloadWeaponStatus_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 1;</code>
     */
    int getMPayloadId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload type of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_type = 2;</code>
     */
    int getMPayloadType();

    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    int getMIsActiveValue();
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    mcs.ExternalInterface.IsActive_Enum getMIsActive();

    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    int getMPayloadHealthValue();
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    mcs.ExternalInterface.PayloadHealth_Enum getMPayloadHealth();

    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    boolean hasMOrientation();
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    mcs.ExternalInterface.Orientation_Struct getMOrientation();

    /**
     * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
     */
    int getMWeaponFireStatusValue();
    /**
     * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
     */
    mcs.ExternalInterface.WeaponFireStatus_Enum getMWeaponFireStatus();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Indicates the ammo quantity remaining.  -1 if unknown.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_ammo_qty_remaining = 7;</code>
     */
    int getMAmmoQtyRemaining();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Indicates the ammo quantity fired.  -1 if unknown.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_ammo_qty_fired = 8;</code>
     */
    int getMAmmoQtyFired();
  }
  /**
   * Protobuf type {@code mcs.PayloadWeaponStatus_Struct}
   */
  public  static final class PayloadWeaponStatus_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          PayloadWeaponStatus_Struct, PayloadWeaponStatus_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.PayloadWeaponStatus_Struct)
      PayloadWeaponStatus_StructOrBuilder {
    private PayloadWeaponStatus_Struct() {
    }
    public static final int M_PAYLOAD_ID_FIELD_NUMBER = 1;
    private int mPayloadId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 1;</code>
     */
    public int getMPayloadId() {
      return mPayloadId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 1;</code>
     */
    private void setMPayloadId(int value) {
      
      mPayloadId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 1;</code>
     */
    private void clearMPayloadId() {
      
      mPayloadId_ = 0;
    }

    public static final int M_PAYLOAD_TYPE_FIELD_NUMBER = 2;
    private int mPayloadType_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload type of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_type = 2;</code>
     */
    public int getMPayloadType() {
      return mPayloadType_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload type of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_type = 2;</code>
     */
    private void setMPayloadType(int value) {
      
      mPayloadType_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Payload type of asset.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_type = 2;</code>
     */
    private void clearMPayloadType() {
      
      mPayloadType_ = 0;
    }

    public static final int M_IS_ACTIVE_FIELD_NUMBER = 3;
    private int mIsActive_;
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    public int getMIsActiveValue() {
      return mIsActive_;
    }
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    public mcs.ExternalInterface.IsActive_Enum getMIsActive() {
      mcs.ExternalInterface.IsActive_Enum result = mcs.ExternalInterface.IsActive_Enum.forNumber(mIsActive_);
      return result == null ? mcs.ExternalInterface.IsActive_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    private void setMIsActiveValue(int value) {
        mIsActive_ = value;
    }
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    private void setMIsActive(mcs.ExternalInterface.IsActive_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mIsActive_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
     */
    private void clearMIsActive() {
      
      mIsActive_ = 0;
    }

    public static final int M_PAYLOAD_HEALTH_FIELD_NUMBER = 4;
    private int mPayloadHealth_;
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    public int getMPayloadHealthValue() {
      return mPayloadHealth_;
    }
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    public mcs.ExternalInterface.PayloadHealth_Enum getMPayloadHealth() {
      mcs.ExternalInterface.PayloadHealth_Enum result = mcs.ExternalInterface.PayloadHealth_Enum.forNumber(mPayloadHealth_);
      return result == null ? mcs.ExternalInterface.PayloadHealth_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    private void setMPayloadHealthValue(int value) {
        mPayloadHealth_ = value;
    }
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    private void setMPayloadHealth(mcs.ExternalInterface.PayloadHealth_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mPayloadHealth_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
     */
    private void clearMPayloadHealth() {
      
      mPayloadHealth_ = 0;
    }

    public static final int M_ORIENTATION_FIELD_NUMBER = 5;
    private mcs.ExternalInterface.Orientation_Struct mOrientation_;
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    public boolean hasMOrientation() {
      return mOrientation_ != null;
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    public mcs.ExternalInterface.Orientation_Struct getMOrientation() {
      return mOrientation_ == null ? mcs.ExternalInterface.Orientation_Struct.getDefaultInstance() : mOrientation_;
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void setMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mOrientation_ = value;
      
      }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void setMOrientation(
        mcs.ExternalInterface.Orientation_Struct.Builder builderForValue) {
      mOrientation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void mergeMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
      if (mOrientation_ != null &&
          mOrientation_ != mcs.ExternalInterface.Orientation_Struct.getDefaultInstance()) {
        mOrientation_ =
          mcs.ExternalInterface.Orientation_Struct.newBuilder(mOrientation_).mergeFrom(value).buildPartial();
      } else {
        mOrientation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void clearMOrientation() {  mOrientation_ = null;
      
    }

    public static final int M_WEAPON_FIRE_STATUS_FIELD_NUMBER = 6;
    private int mWeaponFireStatus_;
    /**
     * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
     */
    public int getMWeaponFireStatusValue() {
      return mWeaponFireStatus_;
    }
    /**
     * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
     */
    public mcs.ExternalInterface.WeaponFireStatus_Enum getMWeaponFireStatus() {
      mcs.ExternalInterface.WeaponFireStatus_Enum result = mcs.ExternalInterface.WeaponFireStatus_Enum.forNumber(mWeaponFireStatus_);
      return result == null ? mcs.ExternalInterface.WeaponFireStatus_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
     */
    private void setMWeaponFireStatusValue(int value) {
        mWeaponFireStatus_ = value;
    }
    /**
     * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
     */
    private void setMWeaponFireStatus(mcs.ExternalInterface.WeaponFireStatus_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mWeaponFireStatus_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
     */
    private void clearMWeaponFireStatus() {
      
      mWeaponFireStatus_ = 0;
    }

    public static final int M_AMMO_QTY_REMAINING_FIELD_NUMBER = 7;
    private int mAmmoQtyRemaining_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Indicates the ammo quantity remaining.  -1 if unknown.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_ammo_qty_remaining = 7;</code>
     */
    public int getMAmmoQtyRemaining() {
      return mAmmoQtyRemaining_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Indicates the ammo quantity remaining.  -1 if unknown.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_ammo_qty_remaining = 7;</code>
     */
    private void setMAmmoQtyRemaining(int value) {
      
      mAmmoQtyRemaining_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Indicates the ammo quantity remaining.  -1 if unknown.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_ammo_qty_remaining = 7;</code>
     */
    private void clearMAmmoQtyRemaining() {
      
      mAmmoQtyRemaining_ = 0;
    }

    public static final int M_AMMO_QTY_FIRED_FIELD_NUMBER = 8;
    private int mAmmoQtyFired_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Indicates the ammo quantity fired.  -1 if unknown.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_ammo_qty_fired = 8;</code>
     */
    public int getMAmmoQtyFired() {
      return mAmmoQtyFired_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Indicates the ammo quantity fired.  -1 if unknown.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_ammo_qty_fired = 8;</code>
     */
    private void setMAmmoQtyFired(int value) {
      
      mAmmoQtyFired_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Indicates the ammo quantity fired.  -1 if unknown.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_ammo_qty_fired = 8;</code>
     */
    private void clearMAmmoQtyFired() {
      
      mAmmoQtyFired_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mPayloadId_ != 0) {
        output.writeInt32(1, mPayloadId_);
      }
      if (mPayloadType_ != 0) {
        output.writeInt32(2, mPayloadType_);
      }
      if (mIsActive_ != mcs.ExternalInterface.IsActive_Enum.IS_ACTIVE_NOT_IN_USE.getNumber()) {
        output.writeEnum(3, mIsActive_);
      }
      if (mPayloadHealth_ != mcs.ExternalInterface.PayloadHealth_Enum.PAYLOAD_HEALTH_NOT_IN_USE.getNumber()) {
        output.writeEnum(4, mPayloadHealth_);
      }
      if (mOrientation_ != null) {
        output.writeMessage(5, getMOrientation());
      }
      if (mWeaponFireStatus_ != mcs.ExternalInterface.WeaponFireStatus_Enum.WEAPON_FIRE_STATUS_NOT_IN_USE.getNumber()) {
        output.writeEnum(6, mWeaponFireStatus_);
      }
      if (mAmmoQtyRemaining_ != 0) {
        output.writeInt32(7, mAmmoQtyRemaining_);
      }
      if (mAmmoQtyFired_ != 0) {
        output.writeInt32(8, mAmmoQtyFired_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mPayloadId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mPayloadId_);
      }
      if (mPayloadType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mPayloadType_);
      }
      if (mIsActive_ != mcs.ExternalInterface.IsActive_Enum.IS_ACTIVE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mIsActive_);
      }
      if (mPayloadHealth_ != mcs.ExternalInterface.PayloadHealth_Enum.PAYLOAD_HEALTH_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mPayloadHealth_);
      }
      if (mOrientation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMOrientation());
      }
      if (mWeaponFireStatus_ != mcs.ExternalInterface.WeaponFireStatus_Enum.WEAPON_FIRE_STATUS_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, mWeaponFireStatus_);
      }
      if (mAmmoQtyRemaining_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, mAmmoQtyRemaining_);
      }
      if (mAmmoQtyFired_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, mAmmoQtyFired_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.PayloadWeaponStatus_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.PayloadWeaponStatus_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.PayloadWeaponStatus_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.PayloadWeaponStatus_Struct)
        mcs.ExternalInterface.PayloadWeaponStatus_StructOrBuilder {
      // Construct using mcs.ExternalInterface.PayloadWeaponStatus_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 1;</code>
       */
      public int getMPayloadId() {
        return instance.getMPayloadId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 1;</code>
       */
      public Builder setMPayloadId(int value) {
        copyOnWrite();
        instance.setMPayloadId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 1;</code>
       */
      public Builder clearMPayloadId() {
        copyOnWrite();
        instance.clearMPayloadId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload type of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_type = 2;</code>
       */
      public int getMPayloadType() {
        return instance.getMPayloadType();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload type of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_type = 2;</code>
       */
      public Builder setMPayloadType(int value) {
        copyOnWrite();
        instance.setMPayloadType(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Payload type of asset.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_type = 2;</code>
       */
      public Builder clearMPayloadType() {
        copyOnWrite();
        instance.clearMPayloadType();
        return this;
      }

      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public int getMIsActiveValue() {
        return instance.getMIsActiveValue();
      }
      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public Builder setMIsActiveValue(int value) {
        copyOnWrite();
        instance.setMIsActiveValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public mcs.ExternalInterface.IsActive_Enum getMIsActive() {
        return instance.getMIsActive();
      }
      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public Builder setMIsActive(mcs.ExternalInterface.IsActive_Enum value) {
        copyOnWrite();
        instance.setMIsActive(value);
        return this;
      }
      /**
       * <code>optional .mcs.IsActive_Enum m_is_active = 3;</code>
       */
      public Builder clearMIsActive() {
        copyOnWrite();
        instance.clearMIsActive();
        return this;
      }

      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public int getMPayloadHealthValue() {
        return instance.getMPayloadHealthValue();
      }
      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public Builder setMPayloadHealthValue(int value) {
        copyOnWrite();
        instance.setMPayloadHealthValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public mcs.ExternalInterface.PayloadHealth_Enum getMPayloadHealth() {
        return instance.getMPayloadHealth();
      }
      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public Builder setMPayloadHealth(mcs.ExternalInterface.PayloadHealth_Enum value) {
        copyOnWrite();
        instance.setMPayloadHealth(value);
        return this;
      }
      /**
       * <code>optional .mcs.PayloadHealth_Enum m_payload_health = 4;</code>
       */
      public Builder clearMPayloadHealth() {
        copyOnWrite();
        instance.clearMPayloadHealth();
        return this;
      }

      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public boolean hasMOrientation() {
        return instance.hasMOrientation();
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public mcs.ExternalInterface.Orientation_Struct getMOrientation() {
        return instance.getMOrientation();
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder setMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
        copyOnWrite();
        instance.setMOrientation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder setMOrientation(
          mcs.ExternalInterface.Orientation_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMOrientation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder mergeMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
        copyOnWrite();
        instance.mergeMOrientation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder clearMOrientation() {  copyOnWrite();
        instance.clearMOrientation();
        return this;
      }

      /**
       * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
       */
      public int getMWeaponFireStatusValue() {
        return instance.getMWeaponFireStatusValue();
      }
      /**
       * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
       */
      public Builder setMWeaponFireStatusValue(int value) {
        copyOnWrite();
        instance.setMWeaponFireStatusValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
       */
      public mcs.ExternalInterface.WeaponFireStatus_Enum getMWeaponFireStatus() {
        return instance.getMWeaponFireStatus();
      }
      /**
       * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
       */
      public Builder setMWeaponFireStatus(mcs.ExternalInterface.WeaponFireStatus_Enum value) {
        copyOnWrite();
        instance.setMWeaponFireStatus(value);
        return this;
      }
      /**
       * <code>optional .mcs.WeaponFireStatus_Enum m_weapon_fire_status = 6;</code>
       */
      public Builder clearMWeaponFireStatus() {
        copyOnWrite();
        instance.clearMWeaponFireStatus();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Indicates the ammo quantity remaining.  -1 if unknown.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_ammo_qty_remaining = 7;</code>
       */
      public int getMAmmoQtyRemaining() {
        return instance.getMAmmoQtyRemaining();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Indicates the ammo quantity remaining.  -1 if unknown.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_ammo_qty_remaining = 7;</code>
       */
      public Builder setMAmmoQtyRemaining(int value) {
        copyOnWrite();
        instance.setMAmmoQtyRemaining(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Indicates the ammo quantity remaining.  -1 if unknown.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_ammo_qty_remaining = 7;</code>
       */
      public Builder clearMAmmoQtyRemaining() {
        copyOnWrite();
        instance.clearMAmmoQtyRemaining();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Indicates the ammo quantity fired.  -1 if unknown.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_ammo_qty_fired = 8;</code>
       */
      public int getMAmmoQtyFired() {
        return instance.getMAmmoQtyFired();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Indicates the ammo quantity fired.  -1 if unknown.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_ammo_qty_fired = 8;</code>
       */
      public Builder setMAmmoQtyFired(int value) {
        copyOnWrite();
        instance.setMAmmoQtyFired(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Indicates the ammo quantity fired.  -1 if unknown.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_ammo_qty_fired = 8;</code>
       */
      public Builder clearMAmmoQtyFired() {
        copyOnWrite();
        instance.clearMAmmoQtyFired();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.PayloadWeaponStatus_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.PayloadWeaponStatus_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.PayloadWeaponStatus_Struct other = (mcs.ExternalInterface.PayloadWeaponStatus_Struct) arg1;
          mPayloadId_ = visitor.visitInt(mPayloadId_ != 0, mPayloadId_,
              other.mPayloadId_ != 0, other.mPayloadId_);
          mPayloadType_ = visitor.visitInt(mPayloadType_ != 0, mPayloadType_,
              other.mPayloadType_ != 0, other.mPayloadType_);
          mIsActive_ = visitor.visitInt(mIsActive_ != 0, mIsActive_,    other.mIsActive_ != 0, other.mIsActive_);
          mPayloadHealth_ = visitor.visitInt(mPayloadHealth_ != 0, mPayloadHealth_,    other.mPayloadHealth_ != 0, other.mPayloadHealth_);
          mOrientation_ = visitor.visitMessage(mOrientation_, other.mOrientation_);
          mWeaponFireStatus_ = visitor.visitInt(mWeaponFireStatus_ != 0, mWeaponFireStatus_,    other.mWeaponFireStatus_ != 0, other.mWeaponFireStatus_);
          mAmmoQtyRemaining_ = visitor.visitInt(mAmmoQtyRemaining_ != 0, mAmmoQtyRemaining_,
              other.mAmmoQtyRemaining_ != 0, other.mAmmoQtyRemaining_);
          mAmmoQtyFired_ = visitor.visitInt(mAmmoQtyFired_ != 0, mAmmoQtyFired_,
              other.mAmmoQtyFired_ != 0, other.mAmmoQtyFired_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mPayloadId_ = input.readInt32();
                  break;
                }
                case 16: {

                  mPayloadType_ = input.readInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  mIsActive_ = rawValue;
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  mPayloadHealth_ = rawValue;
                  break;
                }
                case 42: {
                  mcs.ExternalInterface.Orientation_Struct.Builder subBuilder = null;
                  if (mOrientation_ != null) {
                    subBuilder = mOrientation_.toBuilder();
                  }
                  mOrientation_ = input.readMessage(mcs.ExternalInterface.Orientation_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mOrientation_);
                    mOrientation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();

                  mWeaponFireStatus_ = rawValue;
                  break;
                }
                case 56: {

                  mAmmoQtyRemaining_ = input.readInt32();
                  break;
                }
                case 64: {

                  mAmmoQtyFired_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.PayloadWeaponStatus_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.PayloadWeaponStatus_Struct)
    private static final mcs.ExternalInterface.PayloadWeaponStatus_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PayloadWeaponStatus_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.PayloadWeaponStatus_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PayloadWeaponStatus_Struct> PARSER;

    public static com.google.protobuf.Parser<PayloadWeaponStatus_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ProhibitedZone_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.ProhibitedZone_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Zone ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_zone_id = 1;</code>
     */
    int getMZoneId();

    /**
     * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
     */
    int getMZoneTypeValue();
    /**
     * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
     */
    mcs.ExternalInterface.ZoneType_Enum getMZoneType();

    /**
     * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
     */
    int getMZoneShapeValue();
    /**
     * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
     */
    mcs.ExternalInterface.ZoneShape_Enum getMZoneShape();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    java.util.List<mcs.ExternalInterface.Vertex2D_Struct> 
        getMVerticesList();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    mcs.ExternalInterface.Vertex2D_Struct getMVertices(int index);
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    int getMVerticesCount();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
     */
    boolean hasMCircleCentre();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
     */
    mcs.ExternalInterface.Vertex2D_Struct getMCircleCentre();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Applicable only for mZoneShape=Circle.  Radius from mCircleCentre.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_circle_radius = 6;</code>
     */
    int getMCircleRadius();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of lower altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_min_z = 7;</code>
     */
    double getMMinZ();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of upper altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_max_z = 8;</code>
     */
    double getMMaxZ();
  }
  /**
   * Protobuf type {@code mcs.ProhibitedZone_Struct}
   */
  public  static final class ProhibitedZone_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          ProhibitedZone_Struct, ProhibitedZone_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.ProhibitedZone_Struct)
      ProhibitedZone_StructOrBuilder {
    private ProhibitedZone_Struct() {
      mVertices_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int M_ZONE_ID_FIELD_NUMBER = 1;
    private int mZoneId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Zone ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_zone_id = 1;</code>
     */
    public int getMZoneId() {
      return mZoneId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Zone ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_zone_id = 1;</code>
     */
    private void setMZoneId(int value) {
      
      mZoneId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Zone ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_zone_id = 1;</code>
     */
    private void clearMZoneId() {
      
      mZoneId_ = 0;
    }

    public static final int M_ZONE_TYPE_FIELD_NUMBER = 2;
    private int mZoneType_;
    /**
     * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
     */
    public int getMZoneTypeValue() {
      return mZoneType_;
    }
    /**
     * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
     */
    public mcs.ExternalInterface.ZoneType_Enum getMZoneType() {
      mcs.ExternalInterface.ZoneType_Enum result = mcs.ExternalInterface.ZoneType_Enum.forNumber(mZoneType_);
      return result == null ? mcs.ExternalInterface.ZoneType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
     */
    private void setMZoneTypeValue(int value) {
        mZoneType_ = value;
    }
    /**
     * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
     */
    private void setMZoneType(mcs.ExternalInterface.ZoneType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mZoneType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
     */
    private void clearMZoneType() {
      
      mZoneType_ = 0;
    }

    public static final int M_ZONE_SHAPE_FIELD_NUMBER = 3;
    private int mZoneShape_;
    /**
     * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
     */
    public int getMZoneShapeValue() {
      return mZoneShape_;
    }
    /**
     * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
     */
    public mcs.ExternalInterface.ZoneShape_Enum getMZoneShape() {
      mcs.ExternalInterface.ZoneShape_Enum result = mcs.ExternalInterface.ZoneShape_Enum.forNumber(mZoneShape_);
      return result == null ? mcs.ExternalInterface.ZoneShape_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
     */
    private void setMZoneShapeValue(int value) {
        mZoneShape_ = value;
    }
    /**
     * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
     */
    private void setMZoneShape(mcs.ExternalInterface.ZoneShape_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mZoneShape_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
     */
    private void clearMZoneShape() {
      
      mZoneShape_ = 0;
    }

    public static final int M_VERTICES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.Vertex2D_Struct> mVertices_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    public java.util.List<mcs.ExternalInterface.Vertex2D_Struct> getMVerticesList() {
      return mVertices_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.Vertex2D_StructOrBuilder> 
        getMVerticesOrBuilderList() {
      return mVertices_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    public int getMVerticesCount() {
      return mVertices_.size();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    public mcs.ExternalInterface.Vertex2D_Struct getMVertices(int index) {
      return mVertices_.get(index);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    public mcs.ExternalInterface.Vertex2D_StructOrBuilder getMVerticesOrBuilder(
        int index) {
      return mVertices_.get(index);
    }
    private void ensureMVerticesIsMutable() {
      if (!mVertices_.isModifiable()) {
        mVertices_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mVertices_);
       }
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void setMVertices(
        int index, mcs.ExternalInterface.Vertex2D_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMVerticesIsMutable();
      mVertices_.set(index, value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void setMVertices(
        int index, mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
      ensureMVerticesIsMutable();
      mVertices_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void addMVertices(mcs.ExternalInterface.Vertex2D_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMVerticesIsMutable();
      mVertices_.add(value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void addMVertices(
        int index, mcs.ExternalInterface.Vertex2D_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMVerticesIsMutable();
      mVertices_.add(index, value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void addMVertices(
        mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
      ensureMVerticesIsMutable();
      mVertices_.add(builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void addMVertices(
        int index, mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
      ensureMVerticesIsMutable();
      mVertices_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void addAllMVertices(
        java.lang.Iterable<? extends mcs.ExternalInterface.Vertex2D_Struct> values) {
      ensureMVerticesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mVertices_);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void clearMVertices() {
      mVertices_ = emptyProtobufList();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Polygon.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
     */
    private void removeMVertices(int index) {
      ensureMVerticesIsMutable();
      mVertices_.remove(index);
    }

    public static final int M_CIRCLE_CENTRE_FIELD_NUMBER = 5;
    private mcs.ExternalInterface.Vertex2D_Struct mCircleCentre_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
     */
    public boolean hasMCircleCentre() {
      return mCircleCentre_ != null;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
     */
    public mcs.ExternalInterface.Vertex2D_Struct getMCircleCentre() {
      return mCircleCentre_ == null ? mcs.ExternalInterface.Vertex2D_Struct.getDefaultInstance() : mCircleCentre_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
     */
    private void setMCircleCentre(mcs.ExternalInterface.Vertex2D_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mCircleCentre_ = value;
      
      }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
     */
    private void setMCircleCentre(
        mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
      mCircleCentre_ = builderForValue.build();
      
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
     */
    private void mergeMCircleCentre(mcs.ExternalInterface.Vertex2D_Struct value) {
      if (mCircleCentre_ != null &&
          mCircleCentre_ != mcs.ExternalInterface.Vertex2D_Struct.getDefaultInstance()) {
        mCircleCentre_ =
          mcs.ExternalInterface.Vertex2D_Struct.newBuilder(mCircleCentre_).mergeFrom(value).buildPartial();
      } else {
        mCircleCentre_ = value;
      }
      
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
     */
    private void clearMCircleCentre() {  mCircleCentre_ = null;
      
    }

    public static final int M_CIRCLE_RADIUS_FIELD_NUMBER = 6;
    private int mCircleRadius_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Applicable only for mZoneShape=Circle.  Radius from mCircleCentre.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_circle_radius = 6;</code>
     */
    public int getMCircleRadius() {
      return mCircleRadius_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Applicable only for mZoneShape=Circle.  Radius from mCircleCentre.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_circle_radius = 6;</code>
     */
    private void setMCircleRadius(int value) {
      
      mCircleRadius_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Applicable only for mZoneShape=Circle.  Radius from mCircleCentre.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_circle_radius = 6;</code>
     */
    private void clearMCircleRadius() {
      
      mCircleRadius_ = 0;
    }

    public static final int M_MIN_Z_FIELD_NUMBER = 7;
    private double mMinZ_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of lower altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_min_z = 7;</code>
     */
    public double getMMinZ() {
      return mMinZ_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of lower altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_min_z = 7;</code>
     */
    private void setMMinZ(double value) {
      
      mMinZ_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of lower altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_min_z = 7;</code>
     */
    private void clearMMinZ() {
      
      mMinZ_ = 0D;
    }

    public static final int M_MAX_Z_FIELD_NUMBER = 8;
    private double mMaxZ_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of upper altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_max_z = 8;</code>
     */
    public double getMMaxZ() {
      return mMaxZ_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of upper altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_max_z = 8;</code>
     */
    private void setMMaxZ(double value) {
      
      mMaxZ_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre
     * Min val:         -10,000
     * Max val:         10,000
     * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of upper altitude bound.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_max_z = 8;</code>
     */
    private void clearMMaxZ() {
      
      mMaxZ_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mZoneId_ != 0) {
        output.writeInt32(1, mZoneId_);
      }
      if (mZoneType_ != mcs.ExternalInterface.ZoneType_Enum.ZONE_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(2, mZoneType_);
      }
      if (mZoneShape_ != mcs.ExternalInterface.ZoneShape_Enum.ZONE_SHAPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(3, mZoneShape_);
      }
      for (int i = 0; i < mVertices_.size(); i++) {
        output.writeMessage(4, mVertices_.get(i));
      }
      if (mCircleCentre_ != null) {
        output.writeMessage(5, getMCircleCentre());
      }
      if (mCircleRadius_ != 0) {
        output.writeInt32(6, mCircleRadius_);
      }
      if (mMinZ_ != 0D) {
        output.writeDouble(7, mMinZ_);
      }
      if (mMaxZ_ != 0D) {
        output.writeDouble(8, mMaxZ_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mZoneId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mZoneId_);
      }
      if (mZoneType_ != mcs.ExternalInterface.ZoneType_Enum.ZONE_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mZoneType_);
      }
      if (mZoneShape_ != mcs.ExternalInterface.ZoneShape_Enum.ZONE_SHAPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mZoneShape_);
      }
      for (int i = 0; i < mVertices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, mVertices_.get(i));
      }
      if (mCircleCentre_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMCircleCentre());
      }
      if (mCircleRadius_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, mCircleRadius_);
      }
      if (mMinZ_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, mMinZ_);
      }
      if (mMaxZ_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, mMaxZ_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.ProhibitedZone_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.ProhibitedZone_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.ProhibitedZone_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.ProhibitedZone_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.ProhibitedZone_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.ProhibitedZone_Struct)
        mcs.ExternalInterface.ProhibitedZone_StructOrBuilder {
      // Construct using mcs.ExternalInterface.ProhibitedZone_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Zone ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_zone_id = 1;</code>
       */
      public int getMZoneId() {
        return instance.getMZoneId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Zone ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_zone_id = 1;</code>
       */
      public Builder setMZoneId(int value) {
        copyOnWrite();
        instance.setMZoneId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Zone ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_zone_id = 1;</code>
       */
      public Builder clearMZoneId() {
        copyOnWrite();
        instance.clearMZoneId();
        return this;
      }

      /**
       * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
       */
      public int getMZoneTypeValue() {
        return instance.getMZoneTypeValue();
      }
      /**
       * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
       */
      public Builder setMZoneTypeValue(int value) {
        copyOnWrite();
        instance.setMZoneTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
       */
      public mcs.ExternalInterface.ZoneType_Enum getMZoneType() {
        return instance.getMZoneType();
      }
      /**
       * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
       */
      public Builder setMZoneType(mcs.ExternalInterface.ZoneType_Enum value) {
        copyOnWrite();
        instance.setMZoneType(value);
        return this;
      }
      /**
       * <code>optional .mcs.ZoneType_Enum m_zone_type = 2;</code>
       */
      public Builder clearMZoneType() {
        copyOnWrite();
        instance.clearMZoneType();
        return this;
      }

      /**
       * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
       */
      public int getMZoneShapeValue() {
        return instance.getMZoneShapeValue();
      }
      /**
       * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
       */
      public Builder setMZoneShapeValue(int value) {
        copyOnWrite();
        instance.setMZoneShapeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
       */
      public mcs.ExternalInterface.ZoneShape_Enum getMZoneShape() {
        return instance.getMZoneShape();
      }
      /**
       * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
       */
      public Builder setMZoneShape(mcs.ExternalInterface.ZoneShape_Enum value) {
        copyOnWrite();
        instance.setMZoneShape(value);
        return this;
      }
      /**
       * <code>optional .mcs.ZoneShape_Enum m_zone_shape = 3;</code>
       */
      public Builder clearMZoneShape() {
        copyOnWrite();
        instance.clearMZoneShape();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public java.util.List<mcs.ExternalInterface.Vertex2D_Struct> getMVerticesList() {
        return java.util.Collections.unmodifiableList(
            instance.getMVerticesList());
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public int getMVerticesCount() {
        return instance.getMVerticesCount();
      }/**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public mcs.ExternalInterface.Vertex2D_Struct getMVertices(int index) {
        return instance.getMVertices(index);
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder setMVertices(
          int index, mcs.ExternalInterface.Vertex2D_Struct value) {
        copyOnWrite();
        instance.setMVertices(index, value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder setMVertices(
          int index, mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMVertices(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder addMVertices(mcs.ExternalInterface.Vertex2D_Struct value) {
        copyOnWrite();
        instance.addMVertices(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder addMVertices(
          int index, mcs.ExternalInterface.Vertex2D_Struct value) {
        copyOnWrite();
        instance.addMVertices(index, value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder addMVertices(
          mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMVertices(builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder addMVertices(
          int index, mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMVertices(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder addAllMVertices(
          java.lang.Iterable<? extends mcs.ExternalInterface.Vertex2D_Struct> values) {
        copyOnWrite();
        instance.addAllMVertices(values);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder clearMVertices() {
        copyOnWrite();
        instance.clearMVertices();
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Polygon.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Vertex2D_Struct m_vertices = 4;</code>
       */
      public Builder removeMVertices(int index) {
        copyOnWrite();
        instance.removeMVertices(index);
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
       */
      public boolean hasMCircleCentre() {
        return instance.hasMCircleCentre();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
       */
      public mcs.ExternalInterface.Vertex2D_Struct getMCircleCentre() {
        return instance.getMCircleCentre();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
       */
      public Builder setMCircleCentre(mcs.ExternalInterface.Vertex2D_Struct value) {
        copyOnWrite();
        instance.setMCircleCentre(value);
        return this;
        }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
       */
      public Builder setMCircleCentre(
          mcs.ExternalInterface.Vertex2D_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMCircleCentre(builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
       */
      public Builder mergeMCircleCentre(mcs.ExternalInterface.Vertex2D_Struct value) {
        copyOnWrite();
        instance.mergeMCircleCentre(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Applicable only for mZoneShape=Circle.  Centre of circle.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Vertex2D_Struct m_circle_centre = 5;</code>
       */
      public Builder clearMCircleCentre() {  copyOnWrite();
        instance.clearMCircleCentre();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Applicable only for mZoneShape=Circle.  Radius from mCircleCentre.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_circle_radius = 6;</code>
       */
      public int getMCircleRadius() {
        return instance.getMCircleRadius();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Applicable only for mZoneShape=Circle.  Radius from mCircleCentre.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_circle_radius = 6;</code>
       */
      public Builder setMCircleRadius(int value) {
        copyOnWrite();
        instance.setMCircleRadius(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Applicable only for mZoneShape=Circle.  Radius from mCircleCentre.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_circle_radius = 6;</code>
       */
      public Builder clearMCircleRadius() {
        copyOnWrite();
        instance.clearMCircleRadius();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of lower altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_min_z = 7;</code>
       */
      public double getMMinZ() {
        return instance.getMMinZ();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of lower altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_min_z = 7;</code>
       */
      public Builder setMMinZ(double value) {
        copyOnWrite();
        instance.setMMinZ(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of lower altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_min_z = 7;</code>
       */
      public Builder clearMMinZ() {
        copyOnWrite();
        instance.clearMMinZ();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of upper altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_max_z = 8;</code>
       */
      public double getMMaxZ() {
        return instance.getMMaxZ();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of upper altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_max_z = 8;</code>
       */
      public Builder setMMaxZ(double value) {
        copyOnWrite();
        instance.setMMaxZ(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre
       * Min val:         -10,000
       * Max val:         10,000
       * Remarks:         Not applicable for mZoneType=ZONE_GROUND, ZONE_SEA_SURFACE, ZONE_FIRE.  Height above Mean Sea Level of upper altitude bound.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_max_z = 8;</code>
       */
      public Builder clearMMaxZ() {
        copyOnWrite();
        instance.clearMMaxZ();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.ProhibitedZone_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.ProhibitedZone_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          mVertices_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.ProhibitedZone_Struct other = (mcs.ExternalInterface.ProhibitedZone_Struct) arg1;
          mZoneId_ = visitor.visitInt(mZoneId_ != 0, mZoneId_,
              other.mZoneId_ != 0, other.mZoneId_);
          mZoneType_ = visitor.visitInt(mZoneType_ != 0, mZoneType_,    other.mZoneType_ != 0, other.mZoneType_);
          mZoneShape_ = visitor.visitInt(mZoneShape_ != 0, mZoneShape_,    other.mZoneShape_ != 0, other.mZoneShape_);
          mVertices_= visitor.visitList(mVertices_, other.mVertices_);
          mCircleCentre_ = visitor.visitMessage(mCircleCentre_, other.mCircleCentre_);
          mCircleRadius_ = visitor.visitInt(mCircleRadius_ != 0, mCircleRadius_,
              other.mCircleRadius_ != 0, other.mCircleRadius_);
          mMinZ_ = visitor.visitDouble(mMinZ_ != 0D, mMinZ_,
              other.mMinZ_ != 0D, other.mMinZ_);
          mMaxZ_ = visitor.visitDouble(mMaxZ_ != 0D, mMaxZ_,
              other.mMaxZ_ != 0D, other.mMaxZ_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mZoneId_ = input.readInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  mZoneType_ = rawValue;
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  mZoneShape_ = rawValue;
                  break;
                }
                case 34: {
                  if (!mVertices_.isModifiable()) {
                    mVertices_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mVertices_);
                  }
                  mVertices_.add(
                      input.readMessage(mcs.ExternalInterface.Vertex2D_Struct.parser(), extensionRegistry));
                  break;
                }
                case 42: {
                  mcs.ExternalInterface.Vertex2D_Struct.Builder subBuilder = null;
                  if (mCircleCentre_ != null) {
                    subBuilder = mCircleCentre_.toBuilder();
                  }
                  mCircleCentre_ = input.readMessage(mcs.ExternalInterface.Vertex2D_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mCircleCentre_);
                    mCircleCentre_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 48: {

                  mCircleRadius_ = input.readInt32();
                  break;
                }
                case 57: {

                  mMinZ_ = input.readDouble();
                  break;
                }
                case 65: {

                  mMaxZ_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.ProhibitedZone_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.ProhibitedZone_Struct)
    private static final mcs.ExternalInterface.ProhibitedZone_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ProhibitedZone_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.ProhibitedZone_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ProhibitedZone_Struct> PARSER;

    public static com.google.protobuf.Parser<ProhibitedZone_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RedForce_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.RedForce_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 1;</code>
     */
    int getMRedForceId();

    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
     */
    int getMTargetAffiliationValue();
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
     */
    mcs.ExternalInterface.Affiliation_Enum getMTargetAffiliation();

    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
     */
    int getMTargetBattleDimensionValue();
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
     */
    mcs.ExternalInterface.BattleDimension_Enum getMTargetBattleDimension();

    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
     */
    int getMTargetTypeValue();
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
     */
    mcs.ExternalInterface.TrackClassification_Enum getMTargetType();

    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
     */
    int getMUnitOfMeasureValue();
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
     */
    mcs.ExternalInterface.UnitOfMeasure_Enum getMUnitOfMeasure();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Quantity of target.  -1 if quantity is not known.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_quantity = 6;</code>
     */
    int getMQuantity();

    /**
     * <code>optional .mcs.Location_Struct m_location = 7;</code>
     */
    boolean hasMLocation();
    /**
     * <code>optional .mcs.Location_Struct m_location = 7;</code>
     */
    mcs.ExternalInterface.Location_Struct getMLocation();

    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    java.util.List<mcs.ExternalInterface.ImageMetadata_Struct> 
        getMImageMetadataList();
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    mcs.ExternalInterface.ImageMetadata_Struct getMImageMetadata(int index);
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    int getMImageMetadataCount();
  }
  /**
   * Protobuf type {@code mcs.RedForce_Struct}
   */
  public  static final class RedForce_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          RedForce_Struct, RedForce_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.RedForce_Struct)
      RedForce_StructOrBuilder {
    private RedForce_Struct() {
      mImageMetadata_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int M_RED_FORCE_ID_FIELD_NUMBER = 1;
    private int mRedForceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 1;</code>
     */
    public int getMRedForceId() {
      return mRedForceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 1;</code>
     */
    private void setMRedForceId(int value) {
      
      mRedForceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 1;</code>
     */
    private void clearMRedForceId() {
      
      mRedForceId_ = 0;
    }

    public static final int M_TARGET_AFFILIATION_FIELD_NUMBER = 2;
    private int mTargetAffiliation_;
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
     */
    public int getMTargetAffiliationValue() {
      return mTargetAffiliation_;
    }
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
     */
    public mcs.ExternalInterface.Affiliation_Enum getMTargetAffiliation() {
      mcs.ExternalInterface.Affiliation_Enum result = mcs.ExternalInterface.Affiliation_Enum.forNumber(mTargetAffiliation_);
      return result == null ? mcs.ExternalInterface.Affiliation_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
     */
    private void setMTargetAffiliationValue(int value) {
        mTargetAffiliation_ = value;
    }
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
     */
    private void setMTargetAffiliation(mcs.ExternalInterface.Affiliation_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTargetAffiliation_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
     */
    private void clearMTargetAffiliation() {
      
      mTargetAffiliation_ = 0;
    }

    public static final int M_TARGET_BATTLE_DIMENSION_FIELD_NUMBER = 3;
    private int mTargetBattleDimension_;
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
     */
    public int getMTargetBattleDimensionValue() {
      return mTargetBattleDimension_;
    }
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
     */
    public mcs.ExternalInterface.BattleDimension_Enum getMTargetBattleDimension() {
      mcs.ExternalInterface.BattleDimension_Enum result = mcs.ExternalInterface.BattleDimension_Enum.forNumber(mTargetBattleDimension_);
      return result == null ? mcs.ExternalInterface.BattleDimension_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
     */
    private void setMTargetBattleDimensionValue(int value) {
        mTargetBattleDimension_ = value;
    }
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
     */
    private void setMTargetBattleDimension(mcs.ExternalInterface.BattleDimension_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTargetBattleDimension_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
     */
    private void clearMTargetBattleDimension() {
      
      mTargetBattleDimension_ = 0;
    }

    public static final int M_TARGET_TYPE_FIELD_NUMBER = 4;
    private int mTargetType_;
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
     */
    public int getMTargetTypeValue() {
      return mTargetType_;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
     */
    public mcs.ExternalInterface.TrackClassification_Enum getMTargetType() {
      mcs.ExternalInterface.TrackClassification_Enum result = mcs.ExternalInterface.TrackClassification_Enum.forNumber(mTargetType_);
      return result == null ? mcs.ExternalInterface.TrackClassification_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
     */
    private void setMTargetTypeValue(int value) {
        mTargetType_ = value;
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
     */
    private void setMTargetType(mcs.ExternalInterface.TrackClassification_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTargetType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
     */
    private void clearMTargetType() {
      
      mTargetType_ = 0;
    }

    public static final int M_UNIT_OF_MEASURE_FIELD_NUMBER = 5;
    private int mUnitOfMeasure_;
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
     */
    public int getMUnitOfMeasureValue() {
      return mUnitOfMeasure_;
    }
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
     */
    public mcs.ExternalInterface.UnitOfMeasure_Enum getMUnitOfMeasure() {
      mcs.ExternalInterface.UnitOfMeasure_Enum result = mcs.ExternalInterface.UnitOfMeasure_Enum.forNumber(mUnitOfMeasure_);
      return result == null ? mcs.ExternalInterface.UnitOfMeasure_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
     */
    private void setMUnitOfMeasureValue(int value) {
        mUnitOfMeasure_ = value;
    }
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
     */
    private void setMUnitOfMeasure(mcs.ExternalInterface.UnitOfMeasure_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mUnitOfMeasure_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
     */
    private void clearMUnitOfMeasure() {
      
      mUnitOfMeasure_ = 0;
    }

    public static final int M_QUANTITY_FIELD_NUMBER = 6;
    private int mQuantity_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Quantity of target.  -1 if quantity is not known.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_quantity = 6;</code>
     */
    public int getMQuantity() {
      return mQuantity_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Quantity of target.  -1 if quantity is not known.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_quantity = 6;</code>
     */
    private void setMQuantity(int value) {
      
      mQuantity_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Quantity of target.  -1 if quantity is not known.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_quantity = 6;</code>
     */
    private void clearMQuantity() {
      
      mQuantity_ = 0;
    }

    public static final int M_LOCATION_FIELD_NUMBER = 7;
    private mcs.ExternalInterface.Location_Struct mLocation_;
    /**
     * <code>optional .mcs.Location_Struct m_location = 7;</code>
     */
    public boolean hasMLocation() {
      return mLocation_ != null;
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 7;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMLocation() {
      return mLocation_ == null ? mcs.ExternalInterface.Location_Struct.getDefaultInstance() : mLocation_;
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 7;</code>
     */
    private void setMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mLocation_ = value;
      
      }
    /**
     * <code>optional .mcs.Location_Struct m_location = 7;</code>
     */
    private void setMLocation(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      mLocation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 7;</code>
     */
    private void mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (mLocation_ != null &&
          mLocation_ != mcs.ExternalInterface.Location_Struct.getDefaultInstance()) {
        mLocation_ =
          mcs.ExternalInterface.Location_Struct.newBuilder(mLocation_).mergeFrom(value).buildPartial();
      } else {
        mLocation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 7;</code>
     */
    private void clearMLocation() {  mLocation_ = null;
      
    }

    public static final int M_IMAGE_METADATA_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.ImageMetadata_Struct> mImageMetadata_;
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    public java.util.List<mcs.ExternalInterface.ImageMetadata_Struct> getMImageMetadataList() {
      return mImageMetadata_;
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.ImageMetadata_StructOrBuilder> 
        getMImageMetadataOrBuilderList() {
      return mImageMetadata_;
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    public int getMImageMetadataCount() {
      return mImageMetadata_.size();
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    public mcs.ExternalInterface.ImageMetadata_Struct getMImageMetadata(int index) {
      return mImageMetadata_.get(index);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    public mcs.ExternalInterface.ImageMetadata_StructOrBuilder getMImageMetadataOrBuilder(
        int index) {
      return mImageMetadata_.get(index);
    }
    private void ensureMImageMetadataIsMutable() {
      if (!mImageMetadata_.isModifiable()) {
        mImageMetadata_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mImageMetadata_);
       }
    }

    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void setMImageMetadata(
        int index, mcs.ExternalInterface.ImageMetadata_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMImageMetadataIsMutable();
      mImageMetadata_.set(index, value);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void setMImageMetadata(
        int index, mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
      ensureMImageMetadataIsMutable();
      mImageMetadata_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void addMImageMetadata(mcs.ExternalInterface.ImageMetadata_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMImageMetadataIsMutable();
      mImageMetadata_.add(value);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void addMImageMetadata(
        int index, mcs.ExternalInterface.ImageMetadata_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMImageMetadataIsMutable();
      mImageMetadata_.add(index, value);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void addMImageMetadata(
        mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
      ensureMImageMetadataIsMutable();
      mImageMetadata_.add(builderForValue.build());
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void addMImageMetadata(
        int index, mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
      ensureMImageMetadataIsMutable();
      mImageMetadata_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void addAllMImageMetadata(
        java.lang.Iterable<? extends mcs.ExternalInterface.ImageMetadata_Struct> values) {
      ensureMImageMetadataIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mImageMetadata_);
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void clearMImageMetadata() {
      mImageMetadata_ = emptyProtobufList();
    }
    /**
     * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
     */
    private void removeMImageMetadata(int index) {
      ensureMImageMetadataIsMutable();
      mImageMetadata_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mRedForceId_ != 0) {
        output.writeInt32(1, mRedForceId_);
      }
      if (mTargetAffiliation_ != mcs.ExternalInterface.Affiliation_Enum.AFFILIATION_NOT_IN_USE.getNumber()) {
        output.writeEnum(2, mTargetAffiliation_);
      }
      if (mTargetBattleDimension_ != mcs.ExternalInterface.BattleDimension_Enum.BATTLE_DIMENSION_NOT_IN_USE.getNumber()) {
        output.writeEnum(3, mTargetBattleDimension_);
      }
      if (mTargetType_ != mcs.ExternalInterface.TrackClassification_Enum.UNKNOWN.getNumber()) {
        output.writeEnum(4, mTargetType_);
      }
      if (mUnitOfMeasure_ != mcs.ExternalInterface.UnitOfMeasure_Enum.UNIT_OF_MEASURE_NOT_IN_USE.getNumber()) {
        output.writeEnum(5, mUnitOfMeasure_);
      }
      if (mQuantity_ != 0) {
        output.writeInt32(6, mQuantity_);
      }
      if (mLocation_ != null) {
        output.writeMessage(7, getMLocation());
      }
      for (int i = 0; i < mImageMetadata_.size(); i++) {
        output.writeMessage(8, mImageMetadata_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mRedForceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mRedForceId_);
      }
      if (mTargetAffiliation_ != mcs.ExternalInterface.Affiliation_Enum.AFFILIATION_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mTargetAffiliation_);
      }
      if (mTargetBattleDimension_ != mcs.ExternalInterface.BattleDimension_Enum.BATTLE_DIMENSION_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mTargetBattleDimension_);
      }
      if (mTargetType_ != mcs.ExternalInterface.TrackClassification_Enum.UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mTargetType_);
      }
      if (mUnitOfMeasure_ != mcs.ExternalInterface.UnitOfMeasure_Enum.UNIT_OF_MEASURE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, mUnitOfMeasure_);
      }
      if (mQuantity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, mQuantity_);
      }
      if (mLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMLocation());
      }
      for (int i = 0; i < mImageMetadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, mImageMetadata_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.RedForce_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.RedForce_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.RedForce_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.RedForce_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.RedForce_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.RedForce_Struct)
        mcs.ExternalInterface.RedForce_StructOrBuilder {
      // Construct using mcs.ExternalInterface.RedForce_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 1;</code>
       */
      public int getMRedForceId() {
        return instance.getMRedForceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 1;</code>
       */
      public Builder setMRedForceId(int value) {
        copyOnWrite();
        instance.setMRedForceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 1;</code>
       */
      public Builder clearMRedForceId() {
        copyOnWrite();
        instance.clearMRedForceId();
        return this;
      }

      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
       */
      public int getMTargetAffiliationValue() {
        return instance.getMTargetAffiliationValue();
      }
      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
       */
      public Builder setMTargetAffiliationValue(int value) {
        copyOnWrite();
        instance.setMTargetAffiliationValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
       */
      public mcs.ExternalInterface.Affiliation_Enum getMTargetAffiliation() {
        return instance.getMTargetAffiliation();
      }
      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
       */
      public Builder setMTargetAffiliation(mcs.ExternalInterface.Affiliation_Enum value) {
        copyOnWrite();
        instance.setMTargetAffiliation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Affiliation_Enum m_target_affiliation = 2;</code>
       */
      public Builder clearMTargetAffiliation() {
        copyOnWrite();
        instance.clearMTargetAffiliation();
        return this;
      }

      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
       */
      public int getMTargetBattleDimensionValue() {
        return instance.getMTargetBattleDimensionValue();
      }
      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
       */
      public Builder setMTargetBattleDimensionValue(int value) {
        copyOnWrite();
        instance.setMTargetBattleDimensionValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
       */
      public mcs.ExternalInterface.BattleDimension_Enum getMTargetBattleDimension() {
        return instance.getMTargetBattleDimension();
      }
      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
       */
      public Builder setMTargetBattleDimension(mcs.ExternalInterface.BattleDimension_Enum value) {
        copyOnWrite();
        instance.setMTargetBattleDimension(value);
        return this;
      }
      /**
       * <code>optional .mcs.BattleDimension_Enum m_target_battle_dimension = 3;</code>
       */
      public Builder clearMTargetBattleDimension() {
        copyOnWrite();
        instance.clearMTargetBattleDimension();
        return this;
      }

      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
       */
      public int getMTargetTypeValue() {
        return instance.getMTargetTypeValue();
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
       */
      public Builder setMTargetTypeValue(int value) {
        copyOnWrite();
        instance.setMTargetTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
       */
      public mcs.ExternalInterface.TrackClassification_Enum getMTargetType() {
        return instance.getMTargetType();
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
       */
      public Builder setMTargetType(mcs.ExternalInterface.TrackClassification_Enum value) {
        copyOnWrite();
        instance.setMTargetType(value);
        return this;
      }
      /**
       * <code>optional .mcs.TrackClassification_Enum m_target_type = 4;</code>
       */
      public Builder clearMTargetType() {
        copyOnWrite();
        instance.clearMTargetType();
        return this;
      }

      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
       */
      public int getMUnitOfMeasureValue() {
        return instance.getMUnitOfMeasureValue();
      }
      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
       */
      public Builder setMUnitOfMeasureValue(int value) {
        copyOnWrite();
        instance.setMUnitOfMeasureValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
       */
      public mcs.ExternalInterface.UnitOfMeasure_Enum getMUnitOfMeasure() {
        return instance.getMUnitOfMeasure();
      }
      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
       */
      public Builder setMUnitOfMeasure(mcs.ExternalInterface.UnitOfMeasure_Enum value) {
        copyOnWrite();
        instance.setMUnitOfMeasure(value);
        return this;
      }
      /**
       * <code>optional .mcs.UnitOfMeasure_Enum m_unit_of_measure = 5;</code>
       */
      public Builder clearMUnitOfMeasure() {
        copyOnWrite();
        instance.clearMUnitOfMeasure();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Quantity of target.  -1 if quantity is not known.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_quantity = 6;</code>
       */
      public int getMQuantity() {
        return instance.getMQuantity();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Quantity of target.  -1 if quantity is not known.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_quantity = 6;</code>
       */
      public Builder setMQuantity(int value) {
        copyOnWrite();
        instance.setMQuantity(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Quantity of target.  -1 if quantity is not known.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_quantity = 6;</code>
       */
      public Builder clearMQuantity() {
        copyOnWrite();
        instance.clearMQuantity();
        return this;
      }

      /**
       * <code>optional .mcs.Location_Struct m_location = 7;</code>
       */
      public boolean hasMLocation() {
        return instance.hasMLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 7;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMLocation() {
        return instance.getMLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 7;</code>
       */
      public Builder setMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMLocation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Location_Struct m_location = 7;</code>
       */
      public Builder setMLocation(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLocation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 7;</code>
       */
      public Builder mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.mergeMLocation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 7;</code>
       */
      public Builder clearMLocation() {  copyOnWrite();
        instance.clearMLocation();
        return this;
      }

      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public java.util.List<mcs.ExternalInterface.ImageMetadata_Struct> getMImageMetadataList() {
        return java.util.Collections.unmodifiableList(
            instance.getMImageMetadataList());
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public int getMImageMetadataCount() {
        return instance.getMImageMetadataCount();
      }/**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public mcs.ExternalInterface.ImageMetadata_Struct getMImageMetadata(int index) {
        return instance.getMImageMetadata(index);
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder setMImageMetadata(
          int index, mcs.ExternalInterface.ImageMetadata_Struct value) {
        copyOnWrite();
        instance.setMImageMetadata(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder setMImageMetadata(
          int index, mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMImageMetadata(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder addMImageMetadata(mcs.ExternalInterface.ImageMetadata_Struct value) {
        copyOnWrite();
        instance.addMImageMetadata(value);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder addMImageMetadata(
          int index, mcs.ExternalInterface.ImageMetadata_Struct value) {
        copyOnWrite();
        instance.addMImageMetadata(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder addMImageMetadata(
          mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMImageMetadata(builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder addMImageMetadata(
          int index, mcs.ExternalInterface.ImageMetadata_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMImageMetadata(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder addAllMImageMetadata(
          java.lang.Iterable<? extends mcs.ExternalInterface.ImageMetadata_Struct> values) {
        copyOnWrite();
        instance.addAllMImageMetadata(values);
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder clearMImageMetadata() {
        copyOnWrite();
        instance.clearMImageMetadata();
        return this;
      }
      /**
       * <code>repeated .mcs.ImageMetadata_Struct m_image_metadata = 8;</code>
       */
      public Builder removeMImageMetadata(int index) {
        copyOnWrite();
        instance.removeMImageMetadata(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.RedForce_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.RedForce_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          mImageMetadata_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.RedForce_Struct other = (mcs.ExternalInterface.RedForce_Struct) arg1;
          mRedForceId_ = visitor.visitInt(mRedForceId_ != 0, mRedForceId_,
              other.mRedForceId_ != 0, other.mRedForceId_);
          mTargetAffiliation_ = visitor.visitInt(mTargetAffiliation_ != 0, mTargetAffiliation_,    other.mTargetAffiliation_ != 0, other.mTargetAffiliation_);
          mTargetBattleDimension_ = visitor.visitInt(mTargetBattleDimension_ != 0, mTargetBattleDimension_,    other.mTargetBattleDimension_ != 0, other.mTargetBattleDimension_);
          mTargetType_ = visitor.visitInt(mTargetType_ != 0, mTargetType_,    other.mTargetType_ != 0, other.mTargetType_);
          mUnitOfMeasure_ = visitor.visitInt(mUnitOfMeasure_ != 0, mUnitOfMeasure_,    other.mUnitOfMeasure_ != 0, other.mUnitOfMeasure_);
          mQuantity_ = visitor.visitInt(mQuantity_ != 0, mQuantity_,
              other.mQuantity_ != 0, other.mQuantity_);
          mLocation_ = visitor.visitMessage(mLocation_, other.mLocation_);
          mImageMetadata_= visitor.visitList(mImageMetadata_, other.mImageMetadata_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mRedForceId_ = input.readInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  mTargetAffiliation_ = rawValue;
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  mTargetBattleDimension_ = rawValue;
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  mTargetType_ = rawValue;
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();

                  mUnitOfMeasure_ = rawValue;
                  break;
                }
                case 48: {

                  mQuantity_ = input.readInt32();
                  break;
                }
                case 58: {
                  mcs.ExternalInterface.Location_Struct.Builder subBuilder = null;
                  if (mLocation_ != null) {
                    subBuilder = mLocation_.toBuilder();
                  }
                  mLocation_ = input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mLocation_);
                    mLocation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 66: {
                  if (!mImageMetadata_.isModifiable()) {
                    mImageMetadata_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mImageMetadata_);
                  }
                  mImageMetadata_.add(
                      input.readMessage(mcs.ExternalInterface.ImageMetadata_Struct.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.RedForce_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.RedForce_Struct)
    private static final mcs.ExternalInterface.RedForce_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RedForce_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.RedForce_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RedForce_Struct> PARSER;

    public static com.google.protobuf.Parser<RedForce_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SummarizedTask_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.SummarizedTask_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 1;</code>
     */
    int getMTaskId();

    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    int getMTaskTypeValue();
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    mcs.ExternalInterface.TaskType_Enum getMTaskType();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_start_time = 3;</code>
     */
    long getMStartTime();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_end_time = 4;</code>
     */
    long getMEndTime();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
     */
    boolean hasMWaypoint();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
     */
    mcs.ExternalInterface.Location_Struct getMWaypoint();
  }
  /**
   * Protobuf type {@code mcs.SummarizedTask_Struct}
   */
  public  static final class SummarizedTask_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          SummarizedTask_Struct, SummarizedTask_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.SummarizedTask_Struct)
      SummarizedTask_StructOrBuilder {
    private SummarizedTask_Struct() {
    }
    public static final int M_TASK_ID_FIELD_NUMBER = 1;
    private int mTaskId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 1;</code>
     */
    public int getMTaskId() {
      return mTaskId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 1;</code>
     */
    private void setMTaskId(int value) {
      
      mTaskId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 1;</code>
     */
    private void clearMTaskId() {
      
      mTaskId_ = 0;
    }

    public static final int M_TASK_TYPE_FIELD_NUMBER = 2;
    private int mTaskType_;
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    public int getMTaskTypeValue() {
      return mTaskType_;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    public mcs.ExternalInterface.TaskType_Enum getMTaskType() {
      mcs.ExternalInterface.TaskType_Enum result = mcs.ExternalInterface.TaskType_Enum.forNumber(mTaskType_);
      return result == null ? mcs.ExternalInterface.TaskType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    private void setMTaskTypeValue(int value) {
        mTaskType_ = value;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    private void setMTaskType(mcs.ExternalInterface.TaskType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTaskType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    private void clearMTaskType() {
      
      mTaskType_ = 0;
    }

    public static final int M_START_TIME_FIELD_NUMBER = 3;
    private long mStartTime_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_start_time = 3;</code>
     */
    public long getMStartTime() {
      return mStartTime_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_start_time = 3;</code>
     */
    private void setMStartTime(long value) {
      
      mStartTime_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_start_time = 3;</code>
     */
    private void clearMStartTime() {
      
      mStartTime_ = 0L;
    }

    public static final int M_END_TIME_FIELD_NUMBER = 4;
    private long mEndTime_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_end_time = 4;</code>
     */
    public long getMEndTime() {
      return mEndTime_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_end_time = 4;</code>
     */
    private void setMEndTime(long value) {
      
      mEndTime_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_end_time = 4;</code>
     */
    private void clearMEndTime() {
      
      mEndTime_ = 0L;
    }

    public static final int M_WAYPOINT_FIELD_NUMBER = 5;
    private mcs.ExternalInterface.Location_Struct mWaypoint_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
     */
    public boolean hasMWaypoint() {
      return mWaypoint_ != null;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMWaypoint() {
      return mWaypoint_ == null ? mcs.ExternalInterface.Location_Struct.getDefaultInstance() : mWaypoint_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
     */
    private void setMWaypoint(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mWaypoint_ = value;
      
      }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
     */
    private void setMWaypoint(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      mWaypoint_ = builderForValue.build();
      
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
     */
    private void mergeMWaypoint(mcs.ExternalInterface.Location_Struct value) {
      if (mWaypoint_ != null &&
          mWaypoint_ != mcs.ExternalInterface.Location_Struct.getDefaultInstance()) {
        mWaypoint_ =
          mcs.ExternalInterface.Location_Struct.newBuilder(mWaypoint_).mergeFrom(value).buildPartial();
      } else {
        mWaypoint_ = value;
      }
      
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
     */
    private void clearMWaypoint() {  mWaypoint_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mTaskId_ != 0) {
        output.writeInt32(1, mTaskId_);
      }
      if (mTaskType_ != mcs.ExternalInterface.TaskType_Enum.TASK_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(2, mTaskType_);
      }
      if (mStartTime_ != 0L) {
        output.writeInt64(3, mStartTime_);
      }
      if (mEndTime_ != 0L) {
        output.writeInt64(4, mEndTime_);
      }
      if (mWaypoint_ != null) {
        output.writeMessage(5, getMWaypoint());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mTaskId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mTaskId_);
      }
      if (mTaskType_ != mcs.ExternalInterface.TaskType_Enum.TASK_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mTaskType_);
      }
      if (mStartTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, mStartTime_);
      }
      if (mEndTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, mEndTime_);
      }
      if (mWaypoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMWaypoint());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.SummarizedTask_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.SummarizedTask_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.SummarizedTask_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.SummarizedTask_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.SummarizedTask_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.SummarizedTask_Struct)
        mcs.ExternalInterface.SummarizedTask_StructOrBuilder {
      // Construct using mcs.ExternalInterface.SummarizedTask_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 1;</code>
       */
      public int getMTaskId() {
        return instance.getMTaskId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 1;</code>
       */
      public Builder setMTaskId(int value) {
        copyOnWrite();
        instance.setMTaskId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 1;</code>
       */
      public Builder clearMTaskId() {
        copyOnWrite();
        instance.clearMTaskId();
        return this;
      }

      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public int getMTaskTypeValue() {
        return instance.getMTaskTypeValue();
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public Builder setMTaskTypeValue(int value) {
        copyOnWrite();
        instance.setMTaskTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public mcs.ExternalInterface.TaskType_Enum getMTaskType() {
        return instance.getMTaskType();
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public Builder setMTaskType(mcs.ExternalInterface.TaskType_Enum value) {
        copyOnWrite();
        instance.setMTaskType(value);
        return this;
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public Builder clearMTaskType() {
        copyOnWrite();
        instance.clearMTaskType();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_start_time = 3;</code>
       */
      public long getMStartTime() {
        return instance.getMStartTime();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_start_time = 3;</code>
       */
      public Builder setMStartTime(long value) {
        copyOnWrite();
        instance.setMStartTime(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_start_time = 3;</code>
       */
      public Builder clearMStartTime() {
        copyOnWrite();
        instance.clearMStartTime();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_end_time = 4;</code>
       */
      public long getMEndTime() {
        return instance.getMEndTime();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_end_time = 4;</code>
       */
      public Builder setMEndTime(long value) {
        copyOnWrite();
        instance.setMEndTime(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_end_time = 4;</code>
       */
      public Builder clearMEndTime() {
        copyOnWrite();
        instance.clearMEndTime();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
       */
      public boolean hasMWaypoint() {
        return instance.hasMWaypoint();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMWaypoint() {
        return instance.getMWaypoint();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
       */
      public Builder setMWaypoint(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMWaypoint(value);
        return this;
        }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
       */
      public Builder setMWaypoint(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMWaypoint(builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
       */
      public Builder mergeMWaypoint(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.mergeMWaypoint(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Location of task.  If mTaskType=PATROL, this is the first waypoint.  If mTaskType=MOVEMENT, this is the last waypoint.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_waypoint = 5;</code>
       */
      public Builder clearMWaypoint() {  copyOnWrite();
        instance.clearMWaypoint();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.SummarizedTask_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.SummarizedTask_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.SummarizedTask_Struct other = (mcs.ExternalInterface.SummarizedTask_Struct) arg1;
          mTaskId_ = visitor.visitInt(mTaskId_ != 0, mTaskId_,
              other.mTaskId_ != 0, other.mTaskId_);
          mTaskType_ = visitor.visitInt(mTaskType_ != 0, mTaskType_,    other.mTaskType_ != 0, other.mTaskType_);
          mStartTime_ = visitor.visitLong(mStartTime_ != 0L, mStartTime_,
              other.mStartTime_ != 0L, other.mStartTime_);
          mEndTime_ = visitor.visitLong(mEndTime_ != 0L, mEndTime_,
              other.mEndTime_ != 0L, other.mEndTime_);
          mWaypoint_ = visitor.visitMessage(mWaypoint_, other.mWaypoint_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mTaskId_ = input.readInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  mTaskType_ = rawValue;
                  break;
                }
                case 24: {

                  mStartTime_ = input.readInt64();
                  break;
                }
                case 32: {

                  mEndTime_ = input.readInt64();
                  break;
                }
                case 42: {
                  mcs.ExternalInterface.Location_Struct.Builder subBuilder = null;
                  if (mWaypoint_ != null) {
                    subBuilder = mWaypoint_.toBuilder();
                  }
                  mWaypoint_ = input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mWaypoint_);
                    mWaypoint_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.SummarizedTask_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.SummarizedTask_Struct)
    private static final mcs.ExternalInterface.SummarizedTask_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SummarizedTask_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.SummarizedTask_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SummarizedTask_Struct> PARSER;

    public static com.google.protobuf.Parser<SummarizedTask_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Task_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Task_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 1;</code>
     */
    int getMTaskId();

    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    int getMTaskTypeValue();
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    mcs.ExternalInterface.TaskType_Enum getMTaskType();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_start_time = 3;</code>
     */
    long getMStartTime();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_end_time = 4;</code>
     */
    long getMEndTime();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Target ID.  Mandatory for mTaskType=Engagement.  Optional for other task time.  -1 = N.A.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 5;</code>
     */
    int getMRedForceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         -(2^31)
     * Max val:         (2^31) - 1
     * Remarks:         Recommended asset groundspeed. -ve = N.A.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_recommended_speed = 6;</code>
     */
    double getMRecommendedSpeed();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 7;</code>
     */
    int getMPayloadId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    java.util.List<mcs.ExternalInterface.Location_Struct> 
        getMLookAtPointsList();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    mcs.ExternalInterface.Location_Struct getMLookAtPoints(int index);
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    int getMLookAtPointsCount();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    java.util.List<mcs.ExternalInterface.ExtrudedPolyline_Struct> 
        getMLookAtPolylinesList();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    mcs.ExternalInterface.ExtrudedPolyline_Struct getMLookAtPolylines(int index);
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    int getMLookAtPolylinesCount();

    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
     */
    int getMRouteLoopTypeValue();
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
     */
    mcs.ExternalInterface.RouteLoopType_Enum getMRouteLoopType();

    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    java.util.List<mcs.ExternalInterface.Waypoint_Struct> 
        getMWaypointsList();
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    mcs.ExternalInterface.Waypoint_Struct getMWaypoints(int index);
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    int getMWaypointsCount();

    /**
     * <code>optional string m_description = 12;</code>
     */
    java.lang.String getMDescription();
    /**
     * <code>optional string m_description = 12;</code>
     */
    com.google.protobuf.ByteString
        getMDescriptionBytes();
  }
  /**
   * Protobuf type {@code mcs.Task_Struct}
   */
  public  static final class Task_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Task_Struct, Task_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Task_Struct)
      Task_StructOrBuilder {
    private Task_Struct() {
      mLookAtPoints_ = emptyProtobufList();
      mLookAtPolylines_ = emptyProtobufList();
      mWaypoints_ = emptyProtobufList();
      mDescription_ = "";
    }
    private int bitField0_;
    public static final int M_TASK_ID_FIELD_NUMBER = 1;
    private int mTaskId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 1;</code>
     */
    public int getMTaskId() {
      return mTaskId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 1;</code>
     */
    private void setMTaskId(int value) {
      
      mTaskId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 1;</code>
     */
    private void clearMTaskId() {
      
      mTaskId_ = 0;
    }

    public static final int M_TASK_TYPE_FIELD_NUMBER = 2;
    private int mTaskType_;
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    public int getMTaskTypeValue() {
      return mTaskType_;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    public mcs.ExternalInterface.TaskType_Enum getMTaskType() {
      mcs.ExternalInterface.TaskType_Enum result = mcs.ExternalInterface.TaskType_Enum.forNumber(mTaskType_);
      return result == null ? mcs.ExternalInterface.TaskType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    private void setMTaskTypeValue(int value) {
        mTaskType_ = value;
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    private void setMTaskType(mcs.ExternalInterface.TaskType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTaskType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
     */
    private void clearMTaskType() {
      
      mTaskType_ = 0;
    }

    public static final int M_START_TIME_FIELD_NUMBER = 3;
    private long mStartTime_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_start_time = 3;</code>
     */
    public long getMStartTime() {
      return mStartTime_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_start_time = 3;</code>
     */
    private void setMStartTime(long value) {
      
      mStartTime_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_start_time = 3;</code>
     */
    private void clearMStartTime() {
      
      mStartTime_ = 0L;
    }

    public static final int M_END_TIME_FIELD_NUMBER = 4;
    private long mEndTime_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_end_time = 4;</code>
     */
    public long getMEndTime() {
      return mEndTime_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_end_time = 4;</code>
     */
    private void setMEndTime(long value) {
      
      mEndTime_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_end_time = 4;</code>
     */
    private void clearMEndTime() {
      
      mEndTime_ = 0L;
    }

    public static final int M_RED_FORCE_ID_FIELD_NUMBER = 5;
    private int mRedForceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Target ID.  Mandatory for mTaskType=Engagement.  Optional for other task time.  -1 = N.A.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 5;</code>
     */
    public int getMRedForceId() {
      return mRedForceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Target ID.  Mandatory for mTaskType=Engagement.  Optional for other task time.  -1 = N.A.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 5;</code>
     */
    private void setMRedForceId(int value) {
      
      mRedForceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Target ID.  Mandatory for mTaskType=Engagement.  Optional for other task time.  -1 = N.A.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 5;</code>
     */
    private void clearMRedForceId() {
      
      mRedForceId_ = 0;
    }

    public static final int M_RECOMMENDED_SPEED_FIELD_NUMBER = 6;
    private double mRecommendedSpeed_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         -(2^31)
     * Max val:         (2^31) - 1
     * Remarks:         Recommended asset groundspeed. -ve = N.A.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_recommended_speed = 6;</code>
     */
    public double getMRecommendedSpeed() {
      return mRecommendedSpeed_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         -(2^31)
     * Max val:         (2^31) - 1
     * Remarks:         Recommended asset groundspeed. -ve = N.A.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_recommended_speed = 6;</code>
     */
    private void setMRecommendedSpeed(double value) {
      
      mRecommendedSpeed_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         -(2^31)
     * Max val:         (2^31) - 1
     * Remarks:         Recommended asset groundspeed. -ve = N.A.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_recommended_speed = 6;</code>
     */
    private void clearMRecommendedSpeed() {
      
      mRecommendedSpeed_ = 0D;
    }

    public static final int M_PAYLOAD_ID_FIELD_NUMBER = 7;
    private int mPayloadId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 7;</code>
     */
    public int getMPayloadId() {
      return mPayloadId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 7;</code>
     */
    private void setMPayloadId(int value) {
      
      mPayloadId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         Payload ID of asset.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_payload_id = 7;</code>
     */
    private void clearMPayloadId() {
      
      mPayloadId_ = 0;
    }

    public static final int M_LOOK_AT_POINTS_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.Location_Struct> mLookAtPoints_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    public java.util.List<mcs.ExternalInterface.Location_Struct> getMLookAtPointsList() {
      return mLookAtPoints_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.Location_StructOrBuilder> 
        getMLookAtPointsOrBuilderList() {
      return mLookAtPoints_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    public int getMLookAtPointsCount() {
      return mLookAtPoints_.size();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMLookAtPoints(int index) {
      return mLookAtPoints_.get(index);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    public mcs.ExternalInterface.Location_StructOrBuilder getMLookAtPointsOrBuilder(
        int index) {
      return mLookAtPoints_.get(index);
    }
    private void ensureMLookAtPointsIsMutable() {
      if (!mLookAtPoints_.isModifiable()) {
        mLookAtPoints_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mLookAtPoints_);
       }
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void setMLookAtPoints(
        int index, mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMLookAtPointsIsMutable();
      mLookAtPoints_.set(index, value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void setMLookAtPoints(
        int index, mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      ensureMLookAtPointsIsMutable();
      mLookAtPoints_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void addMLookAtPoints(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMLookAtPointsIsMutable();
      mLookAtPoints_.add(value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void addMLookAtPoints(
        int index, mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMLookAtPointsIsMutable();
      mLookAtPoints_.add(index, value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void addMLookAtPoints(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      ensureMLookAtPointsIsMutable();
      mLookAtPoints_.add(builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void addMLookAtPoints(
        int index, mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      ensureMLookAtPointsIsMutable();
      mLookAtPoints_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void addAllMLookAtPoints(
        java.lang.Iterable<? extends mcs.ExternalInterface.Location_Struct> values) {
      ensureMLookAtPointsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mLookAtPoints_);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void clearMLookAtPoints() {
      mLookAtPoints_ = emptyProtobufList();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Points of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
     */
    private void removeMLookAtPoints(int index) {
      ensureMLookAtPointsIsMutable();
      mLookAtPoints_.remove(index);
    }

    public static final int M_LOOK_AT_POLYLINES_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.ExtrudedPolyline_Struct> mLookAtPolylines_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    public java.util.List<mcs.ExternalInterface.ExtrudedPolyline_Struct> getMLookAtPolylinesList() {
      return mLookAtPolylines_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.ExtrudedPolyline_StructOrBuilder> 
        getMLookAtPolylinesOrBuilderList() {
      return mLookAtPolylines_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    public int getMLookAtPolylinesCount() {
      return mLookAtPolylines_.size();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    public mcs.ExternalInterface.ExtrudedPolyline_Struct getMLookAtPolylines(int index) {
      return mLookAtPolylines_.get(index);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    public mcs.ExternalInterface.ExtrudedPolyline_StructOrBuilder getMLookAtPolylinesOrBuilder(
        int index) {
      return mLookAtPolylines_.get(index);
    }
    private void ensureMLookAtPolylinesIsMutable() {
      if (!mLookAtPolylines_.isModifiable()) {
        mLookAtPolylines_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mLookAtPolylines_);
       }
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void setMLookAtPolylines(
        int index, mcs.ExternalInterface.ExtrudedPolyline_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMLookAtPolylinesIsMutable();
      mLookAtPolylines_.set(index, value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void setMLookAtPolylines(
        int index, mcs.ExternalInterface.ExtrudedPolyline_Struct.Builder builderForValue) {
      ensureMLookAtPolylinesIsMutable();
      mLookAtPolylines_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void addMLookAtPolylines(mcs.ExternalInterface.ExtrudedPolyline_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMLookAtPolylinesIsMutable();
      mLookAtPolylines_.add(value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void addMLookAtPolylines(
        int index, mcs.ExternalInterface.ExtrudedPolyline_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMLookAtPolylinesIsMutable();
      mLookAtPolylines_.add(index, value);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void addMLookAtPolylines(
        mcs.ExternalInterface.ExtrudedPolyline_Struct.Builder builderForValue) {
      ensureMLookAtPolylinesIsMutable();
      mLookAtPolylines_.add(builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void addMLookAtPolylines(
        int index, mcs.ExternalInterface.ExtrudedPolyline_Struct.Builder builderForValue) {
      ensureMLookAtPolylinesIsMutable();
      mLookAtPolylines_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void addAllMLookAtPolylines(
        java.lang.Iterable<? extends mcs.ExternalInterface.ExtrudedPolyline_Struct> values) {
      ensureMLookAtPolylinesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mLookAtPolylines_);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void clearMLookAtPolylines() {
      mLookAtPolylines_ = emptyProtobufList();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Extruded polylines of interest.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
     */
    private void removeMLookAtPolylines(int index) {
      ensureMLookAtPolylinesIsMutable();
      mLookAtPolylines_.remove(index);
    }

    public static final int M_ROUTE_LOOP_TYPE_FIELD_NUMBER = 10;
    private int mRouteLoopType_;
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
     */
    public int getMRouteLoopTypeValue() {
      return mRouteLoopType_;
    }
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
     */
    public mcs.ExternalInterface.RouteLoopType_Enum getMRouteLoopType() {
      mcs.ExternalInterface.RouteLoopType_Enum result = mcs.ExternalInterface.RouteLoopType_Enum.forNumber(mRouteLoopType_);
      return result == null ? mcs.ExternalInterface.RouteLoopType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
     */
    private void setMRouteLoopTypeValue(int value) {
        mRouteLoopType_ = value;
    }
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
     */
    private void setMRouteLoopType(mcs.ExternalInterface.RouteLoopType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mRouteLoopType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
     */
    private void clearMRouteLoopType() {
      
      mRouteLoopType_ = 0;
    }

    public static final int M_WAYPOINTS_FIELD_NUMBER = 11;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.Waypoint_Struct> mWaypoints_;
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    public java.util.List<mcs.ExternalInterface.Waypoint_Struct> getMWaypointsList() {
      return mWaypoints_;
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.Waypoint_StructOrBuilder> 
        getMWaypointsOrBuilderList() {
      return mWaypoints_;
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    public int getMWaypointsCount() {
      return mWaypoints_.size();
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    public mcs.ExternalInterface.Waypoint_Struct getMWaypoints(int index) {
      return mWaypoints_.get(index);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    public mcs.ExternalInterface.Waypoint_StructOrBuilder getMWaypointsOrBuilder(
        int index) {
      return mWaypoints_.get(index);
    }
    private void ensureMWaypointsIsMutable() {
      if (!mWaypoints_.isModifiable()) {
        mWaypoints_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mWaypoints_);
       }
    }

    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void setMWaypoints(
        int index, mcs.ExternalInterface.Waypoint_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMWaypointsIsMutable();
      mWaypoints_.set(index, value);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void setMWaypoints(
        int index, mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
      ensureMWaypointsIsMutable();
      mWaypoints_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void addMWaypoints(mcs.ExternalInterface.Waypoint_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMWaypointsIsMutable();
      mWaypoints_.add(value);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void addMWaypoints(
        int index, mcs.ExternalInterface.Waypoint_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMWaypointsIsMutable();
      mWaypoints_.add(index, value);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void addMWaypoints(
        mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
      ensureMWaypointsIsMutable();
      mWaypoints_.add(builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void addMWaypoints(
        int index, mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
      ensureMWaypointsIsMutable();
      mWaypoints_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void addAllMWaypoints(
        java.lang.Iterable<? extends mcs.ExternalInterface.Waypoint_Struct> values) {
      ensureMWaypointsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mWaypoints_);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void clearMWaypoints() {
      mWaypoints_ = emptyProtobufList();
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
     */
    private void removeMWaypoints(int index) {
      ensureMWaypointsIsMutable();
      mWaypoints_.remove(index);
    }

    public static final int M_DESCRIPTION_FIELD_NUMBER = 12;
    private java.lang.String mDescription_;
    /**
     * <code>optional string m_description = 12;</code>
     */
    public java.lang.String getMDescription() {
      return mDescription_;
    }
    /**
     * <code>optional string m_description = 12;</code>
     */
    public com.google.protobuf.ByteString
        getMDescriptionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(mDescription_);
    }
    /**
     * <code>optional string m_description = 12;</code>
     */
    private void setMDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      mDescription_ = value;
    }
    /**
     * <code>optional string m_description = 12;</code>
     */
    private void clearMDescription() {
      
      mDescription_ = getDefaultInstance().getMDescription();
    }
    /**
     * <code>optional string m_description = 12;</code>
     */
    private void setMDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      mDescription_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mTaskId_ != 0) {
        output.writeInt32(1, mTaskId_);
      }
      if (mTaskType_ != mcs.ExternalInterface.TaskType_Enum.TASK_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(2, mTaskType_);
      }
      if (mStartTime_ != 0L) {
        output.writeInt64(3, mStartTime_);
      }
      if (mEndTime_ != 0L) {
        output.writeInt64(4, mEndTime_);
      }
      if (mRedForceId_ != 0) {
        output.writeInt32(5, mRedForceId_);
      }
      if (mRecommendedSpeed_ != 0D) {
        output.writeDouble(6, mRecommendedSpeed_);
      }
      if (mPayloadId_ != 0) {
        output.writeInt32(7, mPayloadId_);
      }
      for (int i = 0; i < mLookAtPoints_.size(); i++) {
        output.writeMessage(8, mLookAtPoints_.get(i));
      }
      for (int i = 0; i < mLookAtPolylines_.size(); i++) {
        output.writeMessage(9, mLookAtPolylines_.get(i));
      }
      if (mRouteLoopType_ != mcs.ExternalInterface.RouteLoopType_Enum.ROUTE_LOOP_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(10, mRouteLoopType_);
      }
      for (int i = 0; i < mWaypoints_.size(); i++) {
        output.writeMessage(11, mWaypoints_.get(i));
      }
      if (!mDescription_.isEmpty()) {
        output.writeString(12, getMDescription());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mTaskId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mTaskId_);
      }
      if (mTaskType_ != mcs.ExternalInterface.TaskType_Enum.TASK_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mTaskType_);
      }
      if (mStartTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, mStartTime_);
      }
      if (mEndTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, mEndTime_);
      }
      if (mRedForceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mRedForceId_);
      }
      if (mRecommendedSpeed_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, mRecommendedSpeed_);
      }
      if (mPayloadId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, mPayloadId_);
      }
      for (int i = 0; i < mLookAtPoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, mLookAtPoints_.get(i));
      }
      for (int i = 0; i < mLookAtPolylines_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, mLookAtPolylines_.get(i));
      }
      if (mRouteLoopType_ != mcs.ExternalInterface.RouteLoopType_Enum.ROUTE_LOOP_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, mRouteLoopType_);
      }
      for (int i = 0; i < mWaypoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, mWaypoints_.get(i));
      }
      if (!mDescription_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(12, getMDescription());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Task_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Task_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Task_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Task_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Task_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Task_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Task_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Task_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Task_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Task_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Task_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.Task_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Task_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Task_Struct)
        mcs.ExternalInterface.Task_StructOrBuilder {
      // Construct using mcs.ExternalInterface.Task_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 1;</code>
       */
      public int getMTaskId() {
        return instance.getMTaskId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 1;</code>
       */
      public Builder setMTaskId(int value) {
        copyOnWrite();
        instance.setMTaskId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 1;</code>
       */
      public Builder clearMTaskId() {
        copyOnWrite();
        instance.clearMTaskId();
        return this;
      }

      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public int getMTaskTypeValue() {
        return instance.getMTaskTypeValue();
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public Builder setMTaskTypeValue(int value) {
        copyOnWrite();
        instance.setMTaskTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public mcs.ExternalInterface.TaskType_Enum getMTaskType() {
        return instance.getMTaskType();
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public Builder setMTaskType(mcs.ExternalInterface.TaskType_Enum value) {
        copyOnWrite();
        instance.setMTaskType(value);
        return this;
      }
      /**
       * <code>optional .mcs.TaskType_Enum m_task_type = 2;</code>
       */
      public Builder clearMTaskType() {
        copyOnWrite();
        instance.clearMTaskType();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_start_time = 3;</code>
       */
      public long getMStartTime() {
        return instance.getMStartTime();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_start_time = 3;</code>
       */
      public Builder setMStartTime(long value) {
        copyOnWrite();
        instance.setMStartTime(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  Start time of task.  -1 if not.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_start_time = 3;</code>
       */
      public Builder clearMStartTime() {
        copyOnWrite();
        instance.clearMStartTime();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_end_time = 4;</code>
       */
      public long getMEndTime() {
        return instance.getMEndTime();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_end_time = 4;</code>
       */
      public Builder setMEndTime(long value) {
        copyOnWrite();
        instance.setMEndTime(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970.  End time of task.  -1 if not specified.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_end_time = 4;</code>
       */
      public Builder clearMEndTime() {
        copyOnWrite();
        instance.clearMEndTime();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Target ID.  Mandatory for mTaskType=Engagement.  Optional for other task time.  -1 = N.A.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 5;</code>
       */
      public int getMRedForceId() {
        return instance.getMRedForceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Target ID.  Mandatory for mTaskType=Engagement.  Optional for other task time.  -1 = N.A.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 5;</code>
       */
      public Builder setMRedForceId(int value) {
        copyOnWrite();
        instance.setMRedForceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Target ID.  Mandatory for mTaskType=Engagement.  Optional for other task time.  -1 = N.A.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 5;</code>
       */
      public Builder clearMRedForceId() {
        copyOnWrite();
        instance.clearMRedForceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         -(2^31)
       * Max val:         (2^31) - 1
       * Remarks:         Recommended asset groundspeed. -ve = N.A.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_recommended_speed = 6;</code>
       */
      public double getMRecommendedSpeed() {
        return instance.getMRecommendedSpeed();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         -(2^31)
       * Max val:         (2^31) - 1
       * Remarks:         Recommended asset groundspeed. -ve = N.A.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_recommended_speed = 6;</code>
       */
      public Builder setMRecommendedSpeed(double value) {
        copyOnWrite();
        instance.setMRecommendedSpeed(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         -(2^31)
       * Max val:         (2^31) - 1
       * Remarks:         Recommended asset groundspeed. -ve = N.A.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_recommended_speed = 6;</code>
       */
      public Builder clearMRecommendedSpeed() {
        copyOnWrite();
        instance.clearMRecommendedSpeed();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 7;</code>
       */
      public int getMPayloadId() {
        return instance.getMPayloadId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 7;</code>
       */
      public Builder setMPayloadId(int value) {
        copyOnWrite();
        instance.setMPayloadId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         Payload ID of asset.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_payload_id = 7;</code>
       */
      public Builder clearMPayloadId() {
        copyOnWrite();
        instance.clearMPayloadId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public java.util.List<mcs.ExternalInterface.Location_Struct> getMLookAtPointsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMLookAtPointsList());
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public int getMLookAtPointsCount() {
        return instance.getMLookAtPointsCount();
      }/**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMLookAtPoints(int index) {
        return instance.getMLookAtPoints(index);
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder setMLookAtPoints(
          int index, mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMLookAtPoints(index, value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder setMLookAtPoints(
          int index, mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLookAtPoints(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder addMLookAtPoints(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.addMLookAtPoints(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder addMLookAtPoints(
          int index, mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.addMLookAtPoints(index, value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder addMLookAtPoints(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMLookAtPoints(builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder addMLookAtPoints(
          int index, mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMLookAtPoints(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder addAllMLookAtPoints(
          java.lang.Iterable<? extends mcs.ExternalInterface.Location_Struct> values) {
        copyOnWrite();
        instance.addAllMLookAtPoints(values);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder clearMLookAtPoints() {
        copyOnWrite();
        instance.clearMLookAtPoints();
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Points of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.Location_Struct m_look_at_points = 8;</code>
       */
      public Builder removeMLookAtPoints(int index) {
        copyOnWrite();
        instance.removeMLookAtPoints(index);
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public java.util.List<mcs.ExternalInterface.ExtrudedPolyline_Struct> getMLookAtPolylinesList() {
        return java.util.Collections.unmodifiableList(
            instance.getMLookAtPolylinesList());
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public int getMLookAtPolylinesCount() {
        return instance.getMLookAtPolylinesCount();
      }/**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public mcs.ExternalInterface.ExtrudedPolyline_Struct getMLookAtPolylines(int index) {
        return instance.getMLookAtPolylines(index);
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder setMLookAtPolylines(
          int index, mcs.ExternalInterface.ExtrudedPolyline_Struct value) {
        copyOnWrite();
        instance.setMLookAtPolylines(index, value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder setMLookAtPolylines(
          int index, mcs.ExternalInterface.ExtrudedPolyline_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLookAtPolylines(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder addMLookAtPolylines(mcs.ExternalInterface.ExtrudedPolyline_Struct value) {
        copyOnWrite();
        instance.addMLookAtPolylines(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder addMLookAtPolylines(
          int index, mcs.ExternalInterface.ExtrudedPolyline_Struct value) {
        copyOnWrite();
        instance.addMLookAtPolylines(index, value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder addMLookAtPolylines(
          mcs.ExternalInterface.ExtrudedPolyline_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMLookAtPolylines(builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder addMLookAtPolylines(
          int index, mcs.ExternalInterface.ExtrudedPolyline_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMLookAtPolylines(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder addAllMLookAtPolylines(
          java.lang.Iterable<? extends mcs.ExternalInterface.ExtrudedPolyline_Struct> values) {
        copyOnWrite();
        instance.addAllMLookAtPolylines(values);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder clearMLookAtPolylines() {
        copyOnWrite();
        instance.clearMLookAtPolylines();
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Extruded polylines of interest.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>repeated .mcs.ExtrudedPolyline_Struct m_look_at_polylines = 9;</code>
       */
      public Builder removeMLookAtPolylines(int index) {
        copyOnWrite();
        instance.removeMLookAtPolylines(index);
        return this;
      }

      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
       */
      public int getMRouteLoopTypeValue() {
        return instance.getMRouteLoopTypeValue();
      }
      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
       */
      public Builder setMRouteLoopTypeValue(int value) {
        copyOnWrite();
        instance.setMRouteLoopTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
       */
      public mcs.ExternalInterface.RouteLoopType_Enum getMRouteLoopType() {
        return instance.getMRouteLoopType();
      }
      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
       */
      public Builder setMRouteLoopType(mcs.ExternalInterface.RouteLoopType_Enum value) {
        copyOnWrite();
        instance.setMRouteLoopType(value);
        return this;
      }
      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 10;</code>
       */
      public Builder clearMRouteLoopType() {
        copyOnWrite();
        instance.clearMRouteLoopType();
        return this;
      }

      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public java.util.List<mcs.ExternalInterface.Waypoint_Struct> getMWaypointsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMWaypointsList());
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public int getMWaypointsCount() {
        return instance.getMWaypointsCount();
      }/**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public mcs.ExternalInterface.Waypoint_Struct getMWaypoints(int index) {
        return instance.getMWaypoints(index);
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder setMWaypoints(
          int index, mcs.ExternalInterface.Waypoint_Struct value) {
        copyOnWrite();
        instance.setMWaypoints(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder setMWaypoints(
          int index, mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMWaypoints(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder addMWaypoints(mcs.ExternalInterface.Waypoint_Struct value) {
        copyOnWrite();
        instance.addMWaypoints(value);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder addMWaypoints(
          int index, mcs.ExternalInterface.Waypoint_Struct value) {
        copyOnWrite();
        instance.addMWaypoints(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder addMWaypoints(
          mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMWaypoints(builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder addMWaypoints(
          int index, mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMWaypoints(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder addAllMWaypoints(
          java.lang.Iterable<? extends mcs.ExternalInterface.Waypoint_Struct> values) {
        copyOnWrite();
        instance.addAllMWaypoints(values);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder clearMWaypoints() {
        copyOnWrite();
        instance.clearMWaypoints();
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 11;</code>
       */
      public Builder removeMWaypoints(int index) {
        copyOnWrite();
        instance.removeMWaypoints(index);
        return this;
      }

      /**
       * <code>optional string m_description = 12;</code>
       */
      public java.lang.String getMDescription() {
        return instance.getMDescription();
      }
      /**
       * <code>optional string m_description = 12;</code>
       */
      public com.google.protobuf.ByteString
          getMDescriptionBytes() {
        return instance.getMDescriptionBytes();
      }
      /**
       * <code>optional string m_description = 12;</code>
       */
      public Builder setMDescription(
          java.lang.String value) {
        copyOnWrite();
        instance.setMDescription(value);
        return this;
      }
      /**
       * <code>optional string m_description = 12;</code>
       */
      public Builder clearMDescription() {
        copyOnWrite();
        instance.clearMDescription();
        return this;
      }
      /**
       * <code>optional string m_description = 12;</code>
       */
      public Builder setMDescriptionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMDescriptionBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Task_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Task_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          mLookAtPoints_.makeImmutable();
          mLookAtPolylines_.makeImmutable();
          mWaypoints_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Task_Struct other = (mcs.ExternalInterface.Task_Struct) arg1;
          mTaskId_ = visitor.visitInt(mTaskId_ != 0, mTaskId_,
              other.mTaskId_ != 0, other.mTaskId_);
          mTaskType_ = visitor.visitInt(mTaskType_ != 0, mTaskType_,    other.mTaskType_ != 0, other.mTaskType_);
          mStartTime_ = visitor.visitLong(mStartTime_ != 0L, mStartTime_,
              other.mStartTime_ != 0L, other.mStartTime_);
          mEndTime_ = visitor.visitLong(mEndTime_ != 0L, mEndTime_,
              other.mEndTime_ != 0L, other.mEndTime_);
          mRedForceId_ = visitor.visitInt(mRedForceId_ != 0, mRedForceId_,
              other.mRedForceId_ != 0, other.mRedForceId_);
          mRecommendedSpeed_ = visitor.visitDouble(mRecommendedSpeed_ != 0D, mRecommendedSpeed_,
              other.mRecommendedSpeed_ != 0D, other.mRecommendedSpeed_);
          mPayloadId_ = visitor.visitInt(mPayloadId_ != 0, mPayloadId_,
              other.mPayloadId_ != 0, other.mPayloadId_);
          mLookAtPoints_= visitor.visitList(mLookAtPoints_, other.mLookAtPoints_);
          mLookAtPolylines_= visitor.visitList(mLookAtPolylines_, other.mLookAtPolylines_);
          mRouteLoopType_ = visitor.visitInt(mRouteLoopType_ != 0, mRouteLoopType_,    other.mRouteLoopType_ != 0, other.mRouteLoopType_);
          mWaypoints_= visitor.visitList(mWaypoints_, other.mWaypoints_);
          mDescription_ = visitor.visitString(!mDescription_.isEmpty(), mDescription_,
              !other.mDescription_.isEmpty(), other.mDescription_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {

                  mTaskId_ = input.readInt32();
                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  mTaskType_ = rawValue;
                  break;
                }
                case 24: {

                  mStartTime_ = input.readInt64();
                  break;
                }
                case 32: {

                  mEndTime_ = input.readInt64();
                  break;
                }
                case 40: {

                  mRedForceId_ = input.readInt32();
                  break;
                }
                case 49: {

                  mRecommendedSpeed_ = input.readDouble();
                  break;
                }
                case 56: {

                  mPayloadId_ = input.readInt32();
                  break;
                }
                case 66: {
                  if (!mLookAtPoints_.isModifiable()) {
                    mLookAtPoints_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mLookAtPoints_);
                  }
                  mLookAtPoints_.add(
                      input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry));
                  break;
                }
                case 74: {
                  if (!mLookAtPolylines_.isModifiable()) {
                    mLookAtPolylines_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mLookAtPolylines_);
                  }
                  mLookAtPolylines_.add(
                      input.readMessage(mcs.ExternalInterface.ExtrudedPolyline_Struct.parser(), extensionRegistry));
                  break;
                }
                case 80: {
                  int rawValue = input.readEnum();

                  mRouteLoopType_ = rawValue;
                  break;
                }
                case 90: {
                  if (!mWaypoints_.isModifiable()) {
                    mWaypoints_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mWaypoints_);
                  }
                  mWaypoints_.add(
                      input.readMessage(mcs.ExternalInterface.Waypoint_Struct.parser(), extensionRegistry));
                  break;
                }
                case 98: {
                  String s = input.readStringRequireUtf8();

                  mDescription_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Task_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Task_Struct)
    private static final mcs.ExternalInterface.Task_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Task_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Task_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Task_Struct> PARSER;

    public static com.google.protobuf.Parser<Task_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Vertex2D_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Vertex2D_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_longitude = 1;</code>
     */
    double getMLongitude();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi/2
     * Max val:         pi/2
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_latitude = 2;</code>
     */
    double getMLatitude();
  }
  /**
   * Protobuf type {@code mcs.Vertex2D_Struct}
   */
  public  static final class Vertex2D_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Vertex2D_Struct, Vertex2D_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Vertex2D_Struct)
      Vertex2D_StructOrBuilder {
    private Vertex2D_Struct() {
    }
    public static final int M_LONGITUDE_FIELD_NUMBER = 1;
    private double mLongitude_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_longitude = 1;</code>
     */
    public double getMLongitude() {
      return mLongitude_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_longitude = 1;</code>
     */
    private void setMLongitude(double value) {
      
      mLongitude_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi
     * Max val:         pi
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_longitude = 1;</code>
     */
    private void clearMLongitude() {
      
      mLongitude_ = 0D;
    }

    public static final int M_LATITUDE_FIELD_NUMBER = 2;
    private double mLatitude_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi/2
     * Max val:         pi/2
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_latitude = 2;</code>
     */
    public double getMLatitude() {
      return mLatitude_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi/2
     * Max val:         pi/2
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_latitude = 2;</code>
     */
    private void setMLatitude(double value) {
      
      mLatitude_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: radian
     * Min val:         -pi/2
     * Max val:         pi/2
     * Remarks:         WGS84
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_latitude = 2;</code>
     */
    private void clearMLatitude() {
      
      mLatitude_ = 0D;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mLongitude_ != 0D) {
        output.writeDouble(1, mLongitude_);
      }
      if (mLatitude_ != 0D) {
        output.writeDouble(2, mLatitude_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mLongitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, mLongitude_);
      }
      if (mLatitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, mLatitude_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Vertex2D_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Vertex2D_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Vertex2D_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.Vertex2D_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Vertex2D_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Vertex2D_Struct)
        mcs.ExternalInterface.Vertex2D_StructOrBuilder {
      // Construct using mcs.ExternalInterface.Vertex2D_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_longitude = 1;</code>
       */
      public double getMLongitude() {
        return instance.getMLongitude();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_longitude = 1;</code>
       */
      public Builder setMLongitude(double value) {
        copyOnWrite();
        instance.setMLongitude(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi
       * Max val:         pi
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_longitude = 1;</code>
       */
      public Builder clearMLongitude() {
        copyOnWrite();
        instance.clearMLongitude();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi/2
       * Max val:         pi/2
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_latitude = 2;</code>
       */
      public double getMLatitude() {
        return instance.getMLatitude();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi/2
       * Max val:         pi/2
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_latitude = 2;</code>
       */
      public Builder setMLatitude(double value) {
        copyOnWrite();
        instance.setMLatitude(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: radian
       * Min val:         -pi/2
       * Max val:         pi/2
       * Remarks:         WGS84
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_latitude = 2;</code>
       */
      public Builder clearMLatitude() {
        copyOnWrite();
        instance.clearMLatitude();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Vertex2D_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Vertex2D_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Vertex2D_Struct other = (mcs.ExternalInterface.Vertex2D_Struct) arg1;
          mLongitude_ = visitor.visitDouble(mLongitude_ != 0D, mLongitude_,
              other.mLongitude_ != 0D, other.mLongitude_);
          mLatitude_ = visitor.visitDouble(mLatitude_ != 0D, mLatitude_,
              other.mLatitude_ != 0D, other.mLatitude_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 9: {

                  mLongitude_ = input.readDouble();
                  break;
                }
                case 17: {

                  mLatitude_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Vertex2D_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Vertex2D_Struct)
    private static final mcs.ExternalInterface.Vertex2D_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Vertex2D_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Vertex2D_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Vertex2D_Struct> PARSER;

    public static com.google.protobuf.Parser<Vertex2D_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Waypoint_StructOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Waypoint_Struct)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.Location_Struct m_location = 1;</code>
     */
    boolean hasMLocation();
    /**
     * <code>optional .mcs.Location_Struct m_location = 1;</code>
     */
    mcs.ExternalInterface.Location_Struct getMLocation();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_speed = 2;</code>
     */
    double getMSpeed();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Estimated time of arrival to this waypoint.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_eta = 3;</code>
     */
    long getMEta();

    /**
     * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
     */
    boolean hasMLoiter();
    /**
     * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
     */
    mcs.ExternalInterface.Loiter_Struct getMLoiter();
  }
  /**
   * Protobuf type {@code mcs.Waypoint_Struct}
   */
  public  static final class Waypoint_Struct extends
      com.google.protobuf.GeneratedMessageLite<
          Waypoint_Struct, Waypoint_Struct.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Waypoint_Struct)
      Waypoint_StructOrBuilder {
    private Waypoint_Struct() {
    }
    public static final int M_LOCATION_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.Location_Struct mLocation_;
    /**
     * <code>optional .mcs.Location_Struct m_location = 1;</code>
     */
    public boolean hasMLocation() {
      return mLocation_ != null;
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 1;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMLocation() {
      return mLocation_ == null ? mcs.ExternalInterface.Location_Struct.getDefaultInstance() : mLocation_;
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 1;</code>
     */
    private void setMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mLocation_ = value;
      
      }
    /**
     * <code>optional .mcs.Location_Struct m_location = 1;</code>
     */
    private void setMLocation(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      mLocation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 1;</code>
     */
    private void mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (mLocation_ != null &&
          mLocation_ != mcs.ExternalInterface.Location_Struct.getDefaultInstance()) {
        mLocation_ =
          mcs.ExternalInterface.Location_Struct.newBuilder(mLocation_).mergeFrom(value).buildPartial();
      } else {
        mLocation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 1;</code>
     */
    private void clearMLocation() {  mLocation_ = null;
      
    }

    public static final int M_SPEED_FIELD_NUMBER = 2;
    private double mSpeed_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_speed = 2;</code>
     */
    public double getMSpeed() {
      return mSpeed_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_speed = 2;</code>
     */
    private void setMSpeed(double value) {
      
      mSpeed_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_speed = 2;</code>
     */
    private void clearMSpeed() {
      
      mSpeed_ = 0D;
    }

    public static final int M_ETA_FIELD_NUMBER = 3;
    private long mEta_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Estimated time of arrival to this waypoint.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_eta = 3;</code>
     */
    public long getMEta() {
      return mEta_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Estimated time of arrival to this waypoint.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_eta = 3;</code>
     */
    private void setMEta(long value) {
      
      mEta_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         -1
     * Max val:         (2^63) - 1
     * Remarks:         UTC in seconds since 1 Jan 1970. Estimated time of arrival to this waypoint.  -1 if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int64 m_eta = 3;</code>
     */
    private void clearMEta() {
      
      mEta_ = 0L;
    }

    public static final int M_LOITER_FIELD_NUMBER = 4;
    private mcs.ExternalInterface.Loiter_Struct mLoiter_;
    /**
     * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
     */
    public boolean hasMLoiter() {
      return mLoiter_ != null;
    }
    /**
     * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
     */
    public mcs.ExternalInterface.Loiter_Struct getMLoiter() {
      return mLoiter_ == null ? mcs.ExternalInterface.Loiter_Struct.getDefaultInstance() : mLoiter_;
    }
    /**
     * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
     */
    private void setMLoiter(mcs.ExternalInterface.Loiter_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mLoiter_ = value;
      
      }
    /**
     * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
     */
    private void setMLoiter(
        mcs.ExternalInterface.Loiter_Struct.Builder builderForValue) {
      mLoiter_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
     */
    private void mergeMLoiter(mcs.ExternalInterface.Loiter_Struct value) {
      if (mLoiter_ != null &&
          mLoiter_ != mcs.ExternalInterface.Loiter_Struct.getDefaultInstance()) {
        mLoiter_ =
          mcs.ExternalInterface.Loiter_Struct.newBuilder(mLoiter_).mergeFrom(value).buildPartial();
      } else {
        mLoiter_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
     */
    private void clearMLoiter() {  mLoiter_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mLocation_ != null) {
        output.writeMessage(1, getMLocation());
      }
      if (mSpeed_ != 0D) {
        output.writeDouble(2, mSpeed_);
      }
      if (mEta_ != 0L) {
        output.writeInt64(3, mEta_);
      }
      if (mLoiter_ != null) {
        output.writeMessage(4, getMLoiter());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMLocation());
      }
      if (mSpeed_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, mSpeed_);
      }
      if (mEta_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, mEta_);
      }
      if (mLoiter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMLoiter());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Waypoint_Struct parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Waypoint_Struct parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Waypoint_Struct prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code mcs.Waypoint_Struct}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Waypoint_Struct, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Waypoint_Struct)
        mcs.ExternalInterface.Waypoint_StructOrBuilder {
      // Construct using mcs.ExternalInterface.Waypoint_Struct.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.Location_Struct m_location = 1;</code>
       */
      public boolean hasMLocation() {
        return instance.hasMLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 1;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMLocation() {
        return instance.getMLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 1;</code>
       */
      public Builder setMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMLocation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Location_Struct m_location = 1;</code>
       */
      public Builder setMLocation(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLocation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 1;</code>
       */
      public Builder mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.mergeMLocation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 1;</code>
       */
      public Builder clearMLocation() {  copyOnWrite();
        instance.clearMLocation();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_speed = 2;</code>
       */
      public double getMSpeed() {
        return instance.getMSpeed();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_speed = 2;</code>
       */
      public Builder setMSpeed(double value) {
        copyOnWrite();
        instance.setMSpeed(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_speed = 2;</code>
       */
      public Builder clearMSpeed() {
        copyOnWrite();
        instance.clearMSpeed();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Estimated time of arrival to this waypoint.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_eta = 3;</code>
       */
      public long getMEta() {
        return instance.getMEta();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Estimated time of arrival to this waypoint.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_eta = 3;</code>
       */
      public Builder setMEta(long value) {
        copyOnWrite();
        instance.setMEta(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         -1
       * Max val:         (2^63) - 1
       * Remarks:         UTC in seconds since 1 Jan 1970. Estimated time of arrival to this waypoint.  -1 if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int64 m_eta = 3;</code>
       */
      public Builder clearMEta() {
        copyOnWrite();
        instance.clearMEta();
        return this;
      }

      /**
       * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
       */
      public boolean hasMLoiter() {
        return instance.hasMLoiter();
      }
      /**
       * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
       */
      public mcs.ExternalInterface.Loiter_Struct getMLoiter() {
        return instance.getMLoiter();
      }
      /**
       * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
       */
      public Builder setMLoiter(mcs.ExternalInterface.Loiter_Struct value) {
        copyOnWrite();
        instance.setMLoiter(value);
        return this;
        }
      /**
       * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
       */
      public Builder setMLoiter(
          mcs.ExternalInterface.Loiter_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLoiter(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
       */
      public Builder mergeMLoiter(mcs.ExternalInterface.Loiter_Struct value) {
        copyOnWrite();
        instance.mergeMLoiter(value);
        return this;
      }
      /**
       * <code>optional .mcs.Loiter_Struct m_loiter = 4;</code>
       */
      public Builder clearMLoiter() {  copyOnWrite();
        instance.clearMLoiter();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Waypoint_Struct)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Waypoint_Struct();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Waypoint_Struct other = (mcs.ExternalInterface.Waypoint_Struct) arg1;
          mLocation_ = visitor.visitMessage(mLocation_, other.mLocation_);
          mSpeed_ = visitor.visitDouble(mSpeed_ != 0D, mSpeed_,
              other.mSpeed_ != 0D, other.mSpeed_);
          mEta_ = visitor.visitLong(mEta_ != 0L, mEta_,
              other.mEta_ != 0L, other.mEta_);
          mLoiter_ = visitor.visitMessage(mLoiter_, other.mLoiter_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.Location_Struct.Builder subBuilder = null;
                  if (mLocation_ != null) {
                    subBuilder = mLocation_.toBuilder();
                  }
                  mLocation_ = input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mLocation_);
                    mLocation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 17: {

                  mSpeed_ = input.readDouble();
                  break;
                }
                case 24: {

                  mEta_ = input.readInt64();
                  break;
                }
                case 34: {
                  mcs.ExternalInterface.Loiter_Struct.Builder subBuilder = null;
                  if (mLoiter_ != null) {
                    subBuilder = mLoiter_.toBuilder();
                  }
                  mLoiter_ = input.readMessage(mcs.ExternalInterface.Loiter_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mLoiter_);
                    mLoiter_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Waypoint_Struct.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Waypoint_Struct)
    private static final mcs.ExternalInterface.Waypoint_Struct DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Waypoint_Struct();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Waypoint_Struct getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Waypoint_Struct> PARSER;

    public static com.google.protobuf.Parser<Waypoint_Struct> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_ConnectAcsCommand_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_ConnectAcsCommand_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
     */
    int getMConnectCmdValue();
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
     */
    mcs.ExternalInterface.ConnectCmd_Enum getMConnectCmd();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Acs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_ConnectAcsCommand_Msg}
   */
  public  static final class Mcs_ConnectAcsCommand_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_ConnectAcsCommand_Msg, Mcs_ConnectAcsCommand_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_ConnectAcsCommand_Msg)
      Mcs_ConnectAcsCommand_MsgOrBuilder {
    private Mcs_ConnectAcsCommand_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_CONNECT_CMD_FIELD_NUMBER = 3;
    private int mConnectCmd_;
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
     */
    public int getMConnectCmdValue() {
      return mConnectCmd_;
    }
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
     */
    public mcs.ExternalInterface.ConnectCmd_Enum getMConnectCmd() {
      mcs.ExternalInterface.ConnectCmd_Enum result = mcs.ExternalInterface.ConnectCmd_Enum.forNumber(mConnectCmd_);
      return result == null ? mcs.ExternalInterface.ConnectCmd_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
     */
    private void setMConnectCmdValue(int value) {
        mConnectCmd_ = value;
    }
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
     */
    private void setMConnectCmd(mcs.ExternalInterface.ConnectCmd_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mConnectCmd_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
     */
    private void clearMConnectCmd() {
      
      mConnectCmd_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mConnectCmd_ != mcs.ExternalInterface.ConnectCmd_Enum.CONNECT_CMD_NOT_IN_USE.getNumber()) {
        output.writeEnum(3, mConnectCmd_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mConnectCmd_ != mcs.ExternalInterface.ConnectCmd_Enum.CONNECT_CMD_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mConnectCmd_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Acs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_ConnectAcsCommand_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_ConnectAcsCommand_Msg)
        mcs.ExternalInterface.Mcs_ConnectAcsCommand_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
       */
      public int getMConnectCmdValue() {
        return instance.getMConnectCmdValue();
      }
      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
       */
      public Builder setMConnectCmdValue(int value) {
        copyOnWrite();
        instance.setMConnectCmdValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
       */
      public mcs.ExternalInterface.ConnectCmd_Enum getMConnectCmd() {
        return instance.getMConnectCmd();
      }
      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
       */
      public Builder setMConnectCmd(mcs.ExternalInterface.ConnectCmd_Enum value) {
        copyOnWrite();
        instance.setMConnectCmd(value);
        return this;
      }
      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 3;</code>
       */
      public Builder clearMConnectCmd() {
        copyOnWrite();
        instance.clearMConnectCmd();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_ConnectAcsCommand_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg other = (mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mConnectCmd_ = visitor.visitInt(mConnectCmd_ != 0, mConnectCmd_,    other.mConnectCmd_ != 0, other.mConnectCmd_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();

                  mConnectCmd_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_ConnectAcsCommand_Msg)
    private static final mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_ConnectAcsCommand_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_ConnectAcsCommand_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_ConnectAcsCommand_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_ConnectAcsCommand_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Acs_ConnectAssetCommand_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Acs_ConnectAssetCommand_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    int getMAssetId();

    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
     */
    int getMConnectCmdValue();
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
     */
    mcs.ExternalInterface.ConnectCmd_Enum getMConnectCmd();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					ACS
   * To: 						MCS
   * Initiating condition:	ACS Operator-initiated
   * Expected response: 		Mcs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Acs_ConnectAssetCommand_Msg}
   */
  public  static final class Acs_ConnectAssetCommand_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Acs_ConnectAssetCommand_Msg, Acs_ConnectAssetCommand_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Acs_ConnectAssetCommand_Msg)
      Acs_ConnectAssetCommand_MsgOrBuilder {
    private Acs_ConnectAssetCommand_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 3;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_CONNECT_CMD_FIELD_NUMBER = 4;
    private int mConnectCmd_;
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
     */
    public int getMConnectCmdValue() {
      return mConnectCmd_;
    }
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
     */
    public mcs.ExternalInterface.ConnectCmd_Enum getMConnectCmd() {
      mcs.ExternalInterface.ConnectCmd_Enum result = mcs.ExternalInterface.ConnectCmd_Enum.forNumber(mConnectCmd_);
      return result == null ? mcs.ExternalInterface.ConnectCmd_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
     */
    private void setMConnectCmdValue(int value) {
        mConnectCmd_ = value;
    }
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
     */
    private void setMConnectCmd(mcs.ExternalInterface.ConnectCmd_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mConnectCmd_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
     */
    private void clearMConnectCmd() {
      
      mConnectCmd_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        output.writeInt32(3, mAssetId_);
      }
      if (mConnectCmd_ != mcs.ExternalInterface.ConnectCmd_Enum.CONNECT_CMD_NOT_IN_USE.getNumber()) {
        output.writeEnum(4, mConnectCmd_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetId_);
      }
      if (mConnectCmd_ != mcs.ExternalInterface.ConnectCmd_Enum.CONNECT_CMD_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mConnectCmd_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					ACS
     * To: 						MCS
     * Initiating condition:	ACS Operator-initiated
     * Expected response: 		Mcs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Acs_ConnectAssetCommand_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Acs_ConnectAssetCommand_Msg)
        mcs.ExternalInterface.Acs_ConnectAssetCommand_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
       */
      public int getMConnectCmdValue() {
        return instance.getMConnectCmdValue();
      }
      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
       */
      public Builder setMConnectCmdValue(int value) {
        copyOnWrite();
        instance.setMConnectCmdValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
       */
      public mcs.ExternalInterface.ConnectCmd_Enum getMConnectCmd() {
        return instance.getMConnectCmd();
      }
      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
       */
      public Builder setMConnectCmd(mcs.ExternalInterface.ConnectCmd_Enum value) {
        copyOnWrite();
        instance.setMConnectCmd(value);
        return this;
      }
      /**
       * <code>optional .mcs.ConnectCmd_Enum m_connect_cmd = 4;</code>
       */
      public Builder clearMConnectCmd() {
        copyOnWrite();
        instance.clearMConnectCmd();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Acs_ConnectAssetCommand_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg other = (mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mConnectCmd_ = visitor.visitInt(mConnectCmd_ != 0, mConnectCmd_,    other.mConnectCmd_ != 0, other.mConnectCmd_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  mConnectCmd_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Acs_ConnectAssetCommand_Msg)
    private static final mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Acs_ConnectAssetCommand_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Acs_ConnectAssetCommand_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Acs_ConnectAssetCommand_Msg> PARSER;

    public static com.google.protobuf.Parser<Acs_ConnectAssetCommand_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_McsStatus_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_McsStatus_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         ACS ID that MCS has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_acs_id = 2;</code>
     */
    int getMAcsId();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	Every 1 second.
   * Expected response: 		N.A.
   * Remarks:					Also functions as MCS heartbeat.
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_McsStatus_Msg}
   */
  public  static final class Mcs_McsStatus_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_McsStatus_Msg, Mcs_McsStatus_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_McsStatus_Msg)
      Mcs_McsStatus_MsgOrBuilder {
    private Mcs_McsStatus_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_ACS_ID_FIELD_NUMBER = 2;
    private int mAcsId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         ACS ID that MCS has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_acs_id = 2;</code>
     */
    public int getMAcsId() {
      return mAcsId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         ACS ID that MCS has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_acs_id = 2;</code>
     */
    private void setMAcsId(int value) {
      
      mAcsId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         ACS ID that MCS has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_acs_id = 2;</code>
     */
    private void clearMAcsId() {
      
      mAcsId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mAcsId_ != 0) {
        output.writeInt32(2, mAcsId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mAcsId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mAcsId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_McsStatus_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_McsStatus_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	Every 1 second.
     * Expected response: 		N.A.
     * Remarks:					Also functions as MCS heartbeat.
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_McsStatus_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_McsStatus_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_McsStatus_Msg)
        mcs.ExternalInterface.Mcs_McsStatus_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_McsStatus_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         ACS ID that MCS has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_acs_id = 2;</code>
       */
      public int getMAcsId() {
        return instance.getMAcsId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         ACS ID that MCS has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_acs_id = 2;</code>
       */
      public Builder setMAcsId(int value) {
        copyOnWrite();
        instance.setMAcsId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         ACS ID that MCS has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_acs_id = 2;</code>
       */
      public Builder clearMAcsId() {
        copyOnWrite();
        instance.clearMAcsId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_McsStatus_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_McsStatus_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_McsStatus_Msg other = (mcs.ExternalInterface.Mcs_McsStatus_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mAcsId_ = visitor.visitInt(mAcsId_ != 0, mAcsId_,
              other.mAcsId_ != 0, other.mAcsId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mAcsId_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_McsStatus_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_McsStatus_Msg)
    private static final mcs.ExternalInterface.Mcs_McsStatus_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_McsStatus_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_McsStatus_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_McsStatus_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_McsStatus_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Acs_AcsStatus_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Acs_AcsStatus_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         ACS location.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 2;</code>
     */
    boolean hasMLocation();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         ACS location.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 2;</code>
     */
    mcs.ExternalInterface.Location_Struct getMLocation();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_mcs_id = 3;</code>
     */
    int getMMcsId();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					ACS
   * To: 						MCS
   * Initiating condition:	Every 1 second.
   * Expected response: 		N.A.
   * Remarks:					Also functions as ACS heartbeat.
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Acs_AcsStatus_Msg}
   */
  public  static final class Acs_AcsStatus_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Acs_AcsStatus_Msg, Acs_AcsStatus_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Acs_AcsStatus_Msg)
      Acs_AcsStatus_MsgOrBuilder {
    private Acs_AcsStatus_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_LOCATION_FIELD_NUMBER = 2;
    private mcs.ExternalInterface.Location_Struct mLocation_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         ACS location.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 2;</code>
     */
    public boolean hasMLocation() {
      return mLocation_ != null;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         ACS location.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 2;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMLocation() {
      return mLocation_ == null ? mcs.ExternalInterface.Location_Struct.getDefaultInstance() : mLocation_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         ACS location.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 2;</code>
     */
    private void setMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mLocation_ = value;
      
      }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         ACS location.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 2;</code>
     */
    private void setMLocation(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      mLocation_ = builderForValue.build();
      
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         ACS location.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 2;</code>
     */
    private void mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (mLocation_ != null &&
          mLocation_ != mcs.ExternalInterface.Location_Struct.getDefaultInstance()) {
        mLocation_ =
          mcs.ExternalInterface.Location_Struct.newBuilder(mLocation_).mergeFrom(value).buildPartial();
      } else {
        mLocation_ = value;
      }
      
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         ACS location.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.Location_Struct m_location = 2;</code>
     */
    private void clearMLocation() {  mLocation_ = null;
      
    }

    public static final int M_MCS_ID_FIELD_NUMBER = 3;
    private int mMcsId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_mcs_id = 3;</code>
     */
    public int getMMcsId() {
      return mMcsId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_mcs_id = 3;</code>
     */
    private void setMMcsId(int value) {
      
      mMcsId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_mcs_id = 3;</code>
     */
    private void clearMMcsId() {
      
      mMcsId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mLocation_ != null) {
        output.writeMessage(2, getMLocation());
      }
      if (mMcsId_ != 0) {
        output.writeInt32(3, mMcsId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMLocation());
      }
      if (mMcsId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mMcsId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AcsStatus_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Acs_AcsStatus_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					ACS
     * To: 						MCS
     * Initiating condition:	Every 1 second.
     * Expected response: 		N.A.
     * Remarks:					Also functions as ACS heartbeat.
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Acs_AcsStatus_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Acs_AcsStatus_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Acs_AcsStatus_Msg)
        mcs.ExternalInterface.Acs_AcsStatus_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Acs_AcsStatus_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         ACS location.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 2;</code>
       */
      public boolean hasMLocation() {
        return instance.hasMLocation();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         ACS location.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 2;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMLocation() {
        return instance.getMLocation();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         ACS location.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 2;</code>
       */
      public Builder setMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMLocation(value);
        return this;
        }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         ACS location.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 2;</code>
       */
      public Builder setMLocation(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLocation(builderForValue);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         ACS location.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 2;</code>
       */
      public Builder mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.mergeMLocation(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         ACS location.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.Location_Struct m_location = 2;</code>
       */
      public Builder clearMLocation() {  copyOnWrite();
        instance.clearMLocation();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_mcs_id = 3;</code>
       */
      public int getMMcsId() {
        return instance.getMMcsId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_mcs_id = 3;</code>
       */
      public Builder setMMcsId(int value) {
        copyOnWrite();
        instance.setMMcsId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_mcs_id = 3;</code>
       */
      public Builder clearMMcsId() {
        copyOnWrite();
        instance.clearMMcsId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Acs_AcsStatus_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Acs_AcsStatus_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Acs_AcsStatus_Msg other = (mcs.ExternalInterface.Acs_AcsStatus_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mLocation_ = visitor.visitMessage(mLocation_, other.mLocation_);
          mMcsId_ = visitor.visitInt(mMcsId_ != 0, mMcsId_,
              other.mMcsId_ != 0, other.mMcsId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  mcs.ExternalInterface.Location_Struct.Builder subBuilder = null;
                  if (mLocation_ != null) {
                    subBuilder = mLocation_.toBuilder();
                  }
                  mLocation_ = input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mLocation_);
                    mLocation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 24: {

                  mMcsId_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Acs_AcsStatus_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Acs_AcsStatus_Msg)
    private static final mcs.ExternalInterface.Acs_AcsStatus_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Acs_AcsStatus_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Acs_AcsStatus_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Acs_AcsStatus_Msg> PARSER;

    public static com.google.protobuf.Parser<Acs_AcsStatus_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Acs_AssetTelemetry_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Acs_AssetTelemetry_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 2;</code>
     */
    int getMAssetId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset type.
     *                  1 = TRP2
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_type = 3;</code>
     */
    int getMAssetType();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_mcs_id = 4;</code>
     */
    int getMMcsId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         The task ID of active task.  -1 if no active task.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 5;</code>
     */
    int getMTaskId();

    /**
     * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
     */
    int getMHealthValue();
    /**
     * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
     */
    mcs.ExternalInterface.AssetHealth_Enum getMHealth();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: percent
     * Min val:         0
     * Max val:         100
     * Remarks:         ACS-Asset datalink status
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_datalink_status = 7;</code>
     */
    int getMDatalinkStatus();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's endurance
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_time_left = 8;</code>
     */
    int getMTimeLeft();

    /**
     * <code>optional .mcs.Location_Struct m_location = 9;</code>
     */
    boolean hasMLocation();
    /**
     * <code>optional .mcs.Location_Struct m_location = 9;</code>
     */
    mcs.ExternalInterface.Location_Struct getMLocation();

    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
     */
    boolean hasMOrientation();
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
     */
    mcs.ExternalInterface.Orientation_Struct getMOrientation();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's ground speed
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_ground_speed = 11;</code>
     */
    double getMGroundSpeed();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's indicated airspeed.  -ve if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_ias = 12;</code>
     */
    double getMIas();

    /**
     * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
     */
    int getMPathControlModeValue();
    /**
     * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
     */
    mcs.ExternalInterface.PathControlMode_Enum getMPathControlMode();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Waypoint index of waypoint that the asset came from.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_from_waypoint = 14;</code>
     */
    int getMFromWaypoint();

    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    java.util.List<mcs.ExternalInterface.PayloadSensorStatus_Struct> 
        getMPayloadSensorStatusesList();
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    mcs.ExternalInterface.PayloadSensorStatus_Struct getMPayloadSensorStatuses(int index);
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    int getMPayloadSensorStatusesCount();

    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    java.util.List<mcs.ExternalInterface.PayloadWeaponStatus_Struct> 
        getMPayloadWeaponStatusesList();
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    mcs.ExternalInterface.PayloadWeaponStatus_Struct getMPayloadWeaponStatuses(int index);
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    int getMPayloadWeaponStatusesCount();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					ACS
   * To: 						MCS
   * Initiating condition:	Every 1 second.
   * Expected response: 		N.A.
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Acs_AssetTelemetry_Msg}
   */
  public  static final class Acs_AssetTelemetry_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Acs_AssetTelemetry_Msg, Acs_AssetTelemetry_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Acs_AssetTelemetry_Msg)
      Acs_AssetTelemetry_MsgOrBuilder {
    private Acs_AssetTelemetry_Msg() {
      mPayloadSensorStatuses_ = emptyProtobufList();
      mPayloadWeaponStatuses_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 2;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 2;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 2;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 2;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_ASSET_TYPE_FIELD_NUMBER = 3;
    private int mAssetType_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset type.
     *                  1 = TRP2
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_type = 3;</code>
     */
    public int getMAssetType() {
      return mAssetType_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset type.
     *                  1 = TRP2
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_type = 3;</code>
     */
    private void setMAssetType(int value) {
      
      mAssetType_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset type.
     *                  1 = TRP2
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_type = 3;</code>
     */
    private void clearMAssetType() {
      
      mAssetType_ = 0;
    }

    public static final int M_MCS_ID_FIELD_NUMBER = 4;
    private int mMcsId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_mcs_id = 4;</code>
     */
    public int getMMcsId() {
      return mMcsId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_mcs_id = 4;</code>
     */
    private void setMMcsId(int value) {
      
      mMcsId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_mcs_id = 4;</code>
     */
    private void clearMMcsId() {
      
      mMcsId_ = 0;
    }

    public static final int M_TASK_ID_FIELD_NUMBER = 5;
    private int mTaskId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         The task ID of active task.  -1 if no active task.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 5;</code>
     */
    public int getMTaskId() {
      return mTaskId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         The task ID of active task.  -1 if no active task.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 5;</code>
     */
    private void setMTaskId(int value) {
      
      mTaskId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         -1
     * Max val:         (2^31) - 1
     * Remarks:         The task ID of active task.  -1 if no active task.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 5;</code>
     */
    private void clearMTaskId() {
      
      mTaskId_ = 0;
    }

    public static final int M_HEALTH_FIELD_NUMBER = 6;
    private int mHealth_;
    /**
     * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
     */
    public int getMHealthValue() {
      return mHealth_;
    }
    /**
     * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
     */
    public mcs.ExternalInterface.AssetHealth_Enum getMHealth() {
      mcs.ExternalInterface.AssetHealth_Enum result = mcs.ExternalInterface.AssetHealth_Enum.forNumber(mHealth_);
      return result == null ? mcs.ExternalInterface.AssetHealth_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
     */
    private void setMHealthValue(int value) {
        mHealth_ = value;
    }
    /**
     * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
     */
    private void setMHealth(mcs.ExternalInterface.AssetHealth_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mHealth_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
     */
    private void clearMHealth() {
      
      mHealth_ = 0;
    }

    public static final int M_DATALINK_STATUS_FIELD_NUMBER = 7;
    private int mDatalinkStatus_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: percent
     * Min val:         0
     * Max val:         100
     * Remarks:         ACS-Asset datalink status
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_datalink_status = 7;</code>
     */
    public int getMDatalinkStatus() {
      return mDatalinkStatus_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: percent
     * Min val:         0
     * Max val:         100
     * Remarks:         ACS-Asset datalink status
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_datalink_status = 7;</code>
     */
    private void setMDatalinkStatus(int value) {
      
      mDatalinkStatus_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: percent
     * Min val:         0
     * Max val:         100
     * Remarks:         ACS-Asset datalink status
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_datalink_status = 7;</code>
     */
    private void clearMDatalinkStatus() {
      
      mDatalinkStatus_ = 0;
    }

    public static final int M_TIME_LEFT_FIELD_NUMBER = 8;
    private int mTimeLeft_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's endurance
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_time_left = 8;</code>
     */
    public int getMTimeLeft() {
      return mTimeLeft_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's endurance
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_time_left = 8;</code>
     */
    private void setMTimeLeft(int value) {
      
      mTimeLeft_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's endurance
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_time_left = 8;</code>
     */
    private void clearMTimeLeft() {
      
      mTimeLeft_ = 0;
    }

    public static final int M_LOCATION_FIELD_NUMBER = 9;
    private mcs.ExternalInterface.Location_Struct mLocation_;
    /**
     * <code>optional .mcs.Location_Struct m_location = 9;</code>
     */
    public boolean hasMLocation() {
      return mLocation_ != null;
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 9;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMLocation() {
      return mLocation_ == null ? mcs.ExternalInterface.Location_Struct.getDefaultInstance() : mLocation_;
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 9;</code>
     */
    private void setMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mLocation_ = value;
      
      }
    /**
     * <code>optional .mcs.Location_Struct m_location = 9;</code>
     */
    private void setMLocation(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      mLocation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 9;</code>
     */
    private void mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (mLocation_ != null &&
          mLocation_ != mcs.ExternalInterface.Location_Struct.getDefaultInstance()) {
        mLocation_ =
          mcs.ExternalInterface.Location_Struct.newBuilder(mLocation_).mergeFrom(value).buildPartial();
      } else {
        mLocation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 9;</code>
     */
    private void clearMLocation() {  mLocation_ = null;
      
    }

    public static final int M_ORIENTATION_FIELD_NUMBER = 10;
    private mcs.ExternalInterface.Orientation_Struct mOrientation_;
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
     */
    public boolean hasMOrientation() {
      return mOrientation_ != null;
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
     */
    public mcs.ExternalInterface.Orientation_Struct getMOrientation() {
      return mOrientation_ == null ? mcs.ExternalInterface.Orientation_Struct.getDefaultInstance() : mOrientation_;
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
     */
    private void setMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mOrientation_ = value;
      
      }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
     */
    private void setMOrientation(
        mcs.ExternalInterface.Orientation_Struct.Builder builderForValue) {
      mOrientation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
     */
    private void mergeMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
      if (mOrientation_ != null &&
          mOrientation_ != mcs.ExternalInterface.Orientation_Struct.getDefaultInstance()) {
        mOrientation_ =
          mcs.ExternalInterface.Orientation_Struct.newBuilder(mOrientation_).mergeFrom(value).buildPartial();
      } else {
        mOrientation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
     */
    private void clearMOrientation() {  mOrientation_ = null;
      
    }

    public static final int M_GROUND_SPEED_FIELD_NUMBER = 11;
    private double mGroundSpeed_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's ground speed
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_ground_speed = 11;</code>
     */
    public double getMGroundSpeed() {
      return mGroundSpeed_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's ground speed
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_ground_speed = 11;</code>
     */
    private void setMGroundSpeed(double value) {
      
      mGroundSpeed_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: metre/second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's ground speed
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_ground_speed = 11;</code>
     */
    private void clearMGroundSpeed() {
      
      mGroundSpeed_ = 0D;
    }

    public static final int M_IAS_FIELD_NUMBER = 12;
    private double mIas_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's indicated airspeed.  -ve if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_ias = 12;</code>
     */
    public double getMIas() {
      return mIas_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's indicated airspeed.  -ve if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_ias = 12;</code>
     */
    private void setMIas(double value) {
      
      mIas_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset's indicated airspeed.  -ve if not applicable.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional double m_ias = 12;</code>
     */
    private void clearMIas() {
      
      mIas_ = 0D;
    }

    public static final int M_PATH_CONTROL_MODE_FIELD_NUMBER = 13;
    private int mPathControlMode_;
    /**
     * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
     */
    public int getMPathControlModeValue() {
      return mPathControlMode_;
    }
    /**
     * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
     */
    public mcs.ExternalInterface.PathControlMode_Enum getMPathControlMode() {
      mcs.ExternalInterface.PathControlMode_Enum result = mcs.ExternalInterface.PathControlMode_Enum.forNumber(mPathControlMode_);
      return result == null ? mcs.ExternalInterface.PathControlMode_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
     */
    private void setMPathControlModeValue(int value) {
        mPathControlMode_ = value;
    }
    /**
     * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
     */
    private void setMPathControlMode(mcs.ExternalInterface.PathControlMode_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mPathControlMode_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
     */
    private void clearMPathControlMode() {
      
      mPathControlMode_ = 0;
    }

    public static final int M_FROM_WAYPOINT_FIELD_NUMBER = 14;
    private int mFromWaypoint_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Waypoint index of waypoint that the asset came from.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_from_waypoint = 14;</code>
     */
    public int getMFromWaypoint() {
      return mFromWaypoint_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Waypoint index of waypoint that the asset came from.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_from_waypoint = 14;</code>
     */
    private void setMFromWaypoint(int value) {
      
      mFromWaypoint_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: second
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Waypoint index of waypoint that the asset came from.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_from_waypoint = 14;</code>
     */
    private void clearMFromWaypoint() {
      
      mFromWaypoint_ = 0;
    }

    public static final int M_PAYLOAD_SENSOR_STATUSES_FIELD_NUMBER = 15;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.PayloadSensorStatus_Struct> mPayloadSensorStatuses_;
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    public java.util.List<mcs.ExternalInterface.PayloadSensorStatus_Struct> getMPayloadSensorStatusesList() {
      return mPayloadSensorStatuses_;
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.PayloadSensorStatus_StructOrBuilder> 
        getMPayloadSensorStatusesOrBuilderList() {
      return mPayloadSensorStatuses_;
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    public int getMPayloadSensorStatusesCount() {
      return mPayloadSensorStatuses_.size();
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    public mcs.ExternalInterface.PayloadSensorStatus_Struct getMPayloadSensorStatuses(int index) {
      return mPayloadSensorStatuses_.get(index);
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    public mcs.ExternalInterface.PayloadSensorStatus_StructOrBuilder getMPayloadSensorStatusesOrBuilder(
        int index) {
      return mPayloadSensorStatuses_.get(index);
    }
    private void ensureMPayloadSensorStatusesIsMutable() {
      if (!mPayloadSensorStatuses_.isModifiable()) {
        mPayloadSensorStatuses_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mPayloadSensorStatuses_);
       }
    }

    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void setMPayloadSensorStatuses(
        int index, mcs.ExternalInterface.PayloadSensorStatus_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMPayloadSensorStatusesIsMutable();
      mPayloadSensorStatuses_.set(index, value);
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void setMPayloadSensorStatuses(
        int index, mcs.ExternalInterface.PayloadSensorStatus_Struct.Builder builderForValue) {
      ensureMPayloadSensorStatusesIsMutable();
      mPayloadSensorStatuses_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void addMPayloadSensorStatuses(mcs.ExternalInterface.PayloadSensorStatus_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMPayloadSensorStatusesIsMutable();
      mPayloadSensorStatuses_.add(value);
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void addMPayloadSensorStatuses(
        int index, mcs.ExternalInterface.PayloadSensorStatus_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMPayloadSensorStatusesIsMutable();
      mPayloadSensorStatuses_.add(index, value);
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void addMPayloadSensorStatuses(
        mcs.ExternalInterface.PayloadSensorStatus_Struct.Builder builderForValue) {
      ensureMPayloadSensorStatusesIsMutable();
      mPayloadSensorStatuses_.add(builderForValue.build());
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void addMPayloadSensorStatuses(
        int index, mcs.ExternalInterface.PayloadSensorStatus_Struct.Builder builderForValue) {
      ensureMPayloadSensorStatusesIsMutable();
      mPayloadSensorStatuses_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void addAllMPayloadSensorStatuses(
        java.lang.Iterable<? extends mcs.ExternalInterface.PayloadSensorStatus_Struct> values) {
      ensureMPayloadSensorStatusesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mPayloadSensorStatuses_);
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void clearMPayloadSensorStatuses() {
      mPayloadSensorStatuses_ = emptyProtobufList();
    }
    /**
     * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
     */
    private void removeMPayloadSensorStatuses(int index) {
      ensureMPayloadSensorStatusesIsMutable();
      mPayloadSensorStatuses_.remove(index);
    }

    public static final int M_PAYLOAD_WEAPON_STATUSES_FIELD_NUMBER = 16;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.PayloadWeaponStatus_Struct> mPayloadWeaponStatuses_;
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    public java.util.List<mcs.ExternalInterface.PayloadWeaponStatus_Struct> getMPayloadWeaponStatusesList() {
      return mPayloadWeaponStatuses_;
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.PayloadWeaponStatus_StructOrBuilder> 
        getMPayloadWeaponStatusesOrBuilderList() {
      return mPayloadWeaponStatuses_;
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    public int getMPayloadWeaponStatusesCount() {
      return mPayloadWeaponStatuses_.size();
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    public mcs.ExternalInterface.PayloadWeaponStatus_Struct getMPayloadWeaponStatuses(int index) {
      return mPayloadWeaponStatuses_.get(index);
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    public mcs.ExternalInterface.PayloadWeaponStatus_StructOrBuilder getMPayloadWeaponStatusesOrBuilder(
        int index) {
      return mPayloadWeaponStatuses_.get(index);
    }
    private void ensureMPayloadWeaponStatusesIsMutable() {
      if (!mPayloadWeaponStatuses_.isModifiable()) {
        mPayloadWeaponStatuses_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mPayloadWeaponStatuses_);
       }
    }

    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void setMPayloadWeaponStatuses(
        int index, mcs.ExternalInterface.PayloadWeaponStatus_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMPayloadWeaponStatusesIsMutable();
      mPayloadWeaponStatuses_.set(index, value);
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void setMPayloadWeaponStatuses(
        int index, mcs.ExternalInterface.PayloadWeaponStatus_Struct.Builder builderForValue) {
      ensureMPayloadWeaponStatusesIsMutable();
      mPayloadWeaponStatuses_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void addMPayloadWeaponStatuses(mcs.ExternalInterface.PayloadWeaponStatus_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMPayloadWeaponStatusesIsMutable();
      mPayloadWeaponStatuses_.add(value);
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void addMPayloadWeaponStatuses(
        int index, mcs.ExternalInterface.PayloadWeaponStatus_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMPayloadWeaponStatusesIsMutable();
      mPayloadWeaponStatuses_.add(index, value);
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void addMPayloadWeaponStatuses(
        mcs.ExternalInterface.PayloadWeaponStatus_Struct.Builder builderForValue) {
      ensureMPayloadWeaponStatusesIsMutable();
      mPayloadWeaponStatuses_.add(builderForValue.build());
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void addMPayloadWeaponStatuses(
        int index, mcs.ExternalInterface.PayloadWeaponStatus_Struct.Builder builderForValue) {
      ensureMPayloadWeaponStatusesIsMutable();
      mPayloadWeaponStatuses_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void addAllMPayloadWeaponStatuses(
        java.lang.Iterable<? extends mcs.ExternalInterface.PayloadWeaponStatus_Struct> values) {
      ensureMPayloadWeaponStatusesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mPayloadWeaponStatuses_);
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void clearMPayloadWeaponStatuses() {
      mPayloadWeaponStatuses_ = emptyProtobufList();
    }
    /**
     * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
     */
    private void removeMPayloadWeaponStatuses(int index) {
      ensureMPayloadWeaponStatusesIsMutable();
      mPayloadWeaponStatuses_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mAssetId_ != 0) {
        output.writeInt32(2, mAssetId_);
      }
      if (mAssetType_ != 0) {
        output.writeInt32(3, mAssetType_);
      }
      if (mMcsId_ != 0) {
        output.writeInt32(4, mMcsId_);
      }
      if (mTaskId_ != 0) {
        output.writeInt32(5, mTaskId_);
      }
      if (mHealth_ != mcs.ExternalInterface.AssetHealth_Enum.ASSET_HEALTH_NOT_IN_USE.getNumber()) {
        output.writeEnum(6, mHealth_);
      }
      if (mDatalinkStatus_ != 0) {
        output.writeInt32(7, mDatalinkStatus_);
      }
      if (mTimeLeft_ != 0) {
        output.writeInt32(8, mTimeLeft_);
      }
      if (mLocation_ != null) {
        output.writeMessage(9, getMLocation());
      }
      if (mOrientation_ != null) {
        output.writeMessage(10, getMOrientation());
      }
      if (mGroundSpeed_ != 0D) {
        output.writeDouble(11, mGroundSpeed_);
      }
      if (mIas_ != 0D) {
        output.writeDouble(12, mIas_);
      }
      if (mPathControlMode_ != mcs.ExternalInterface.PathControlMode_Enum.PATH_CONTROL_MODE_NOT_IN_USE.getNumber()) {
        output.writeEnum(13, mPathControlMode_);
      }
      if (mFromWaypoint_ != 0) {
        output.writeInt32(14, mFromWaypoint_);
      }
      for (int i = 0; i < mPayloadSensorStatuses_.size(); i++) {
        output.writeMessage(15, mPayloadSensorStatuses_.get(i));
      }
      for (int i = 0; i < mPayloadWeaponStatuses_.size(); i++) {
        output.writeMessage(16, mPayloadWeaponStatuses_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mAssetId_);
      }
      if (mAssetType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetType_);
      }
      if (mMcsId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mMcsId_);
      }
      if (mTaskId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mTaskId_);
      }
      if (mHealth_ != mcs.ExternalInterface.AssetHealth_Enum.ASSET_HEALTH_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, mHealth_);
      }
      if (mDatalinkStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, mDatalinkStatus_);
      }
      if (mTimeLeft_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, mTimeLeft_);
      }
      if (mLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getMLocation());
      }
      if (mOrientation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getMOrientation());
      }
      if (mGroundSpeed_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, mGroundSpeed_);
      }
      if (mIas_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, mIas_);
      }
      if (mPathControlMode_ != mcs.ExternalInterface.PathControlMode_Enum.PATH_CONTROL_MODE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, mPathControlMode_);
      }
      if (mFromWaypoint_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, mFromWaypoint_);
      }
      for (int i = 0; i < mPayloadSensorStatuses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, mPayloadSensorStatuses_.get(i));
      }
      for (int i = 0; i < mPayloadWeaponStatuses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, mPayloadWeaponStatuses_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Acs_AssetTelemetry_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					ACS
     * To: 						MCS
     * Initiating condition:	Every 1 second.
     * Expected response: 		N.A.
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Acs_AssetTelemetry_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Acs_AssetTelemetry_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Acs_AssetTelemetry_Msg)
        mcs.ExternalInterface.Acs_AssetTelemetry_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Acs_AssetTelemetry_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 2;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 2;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 2;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset type.
       *                  1 = TRP2
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_type = 3;</code>
       */
      public int getMAssetType() {
        return instance.getMAssetType();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset type.
       *                  1 = TRP2
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_type = 3;</code>
       */
      public Builder setMAssetType(int value) {
        copyOnWrite();
        instance.setMAssetType(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset type.
       *                  1 = TRP2
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_type = 3;</code>
       */
      public Builder clearMAssetType() {
        copyOnWrite();
        instance.clearMAssetType();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_mcs_id = 4;</code>
       */
      public int getMMcsId() {
        return instance.getMMcsId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_mcs_id = 4;</code>
       */
      public Builder setMMcsId(int value) {
        copyOnWrite();
        instance.setMMcsId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         MCS ID that the asset has established command connection with.  -1 if none.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_mcs_id = 4;</code>
       */
      public Builder clearMMcsId() {
        copyOnWrite();
        instance.clearMMcsId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         The task ID of active task.  -1 if no active task.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 5;</code>
       */
      public int getMTaskId() {
        return instance.getMTaskId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         The task ID of active task.  -1 if no active task.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 5;</code>
       */
      public Builder setMTaskId(int value) {
        copyOnWrite();
        instance.setMTaskId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         -1
       * Max val:         (2^31) - 1
       * Remarks:         The task ID of active task.  -1 if no active task.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 5;</code>
       */
      public Builder clearMTaskId() {
        copyOnWrite();
        instance.clearMTaskId();
        return this;
      }

      /**
       * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
       */
      public int getMHealthValue() {
        return instance.getMHealthValue();
      }
      /**
       * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
       */
      public Builder setMHealthValue(int value) {
        copyOnWrite();
        instance.setMHealthValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
       */
      public mcs.ExternalInterface.AssetHealth_Enum getMHealth() {
        return instance.getMHealth();
      }
      /**
       * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
       */
      public Builder setMHealth(mcs.ExternalInterface.AssetHealth_Enum value) {
        copyOnWrite();
        instance.setMHealth(value);
        return this;
      }
      /**
       * <code>optional .mcs.AssetHealth_Enum m_health = 6;</code>
       */
      public Builder clearMHealth() {
        copyOnWrite();
        instance.clearMHealth();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: percent
       * Min val:         0
       * Max val:         100
       * Remarks:         ACS-Asset datalink status
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_datalink_status = 7;</code>
       */
      public int getMDatalinkStatus() {
        return instance.getMDatalinkStatus();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: percent
       * Min val:         0
       * Max val:         100
       * Remarks:         ACS-Asset datalink status
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_datalink_status = 7;</code>
       */
      public Builder setMDatalinkStatus(int value) {
        copyOnWrite();
        instance.setMDatalinkStatus(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: percent
       * Min val:         0
       * Max val:         100
       * Remarks:         ACS-Asset datalink status
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_datalink_status = 7;</code>
       */
      public Builder clearMDatalinkStatus() {
        copyOnWrite();
        instance.clearMDatalinkStatus();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's endurance
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_time_left = 8;</code>
       */
      public int getMTimeLeft() {
        return instance.getMTimeLeft();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's endurance
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_time_left = 8;</code>
       */
      public Builder setMTimeLeft(int value) {
        copyOnWrite();
        instance.setMTimeLeft(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's endurance
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_time_left = 8;</code>
       */
      public Builder clearMTimeLeft() {
        copyOnWrite();
        instance.clearMTimeLeft();
        return this;
      }

      /**
       * <code>optional .mcs.Location_Struct m_location = 9;</code>
       */
      public boolean hasMLocation() {
        return instance.hasMLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 9;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMLocation() {
        return instance.getMLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 9;</code>
       */
      public Builder setMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMLocation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Location_Struct m_location = 9;</code>
       */
      public Builder setMLocation(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLocation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 9;</code>
       */
      public Builder mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.mergeMLocation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 9;</code>
       */
      public Builder clearMLocation() {  copyOnWrite();
        instance.clearMLocation();
        return this;
      }

      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
       */
      public boolean hasMOrientation() {
        return instance.hasMOrientation();
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
       */
      public mcs.ExternalInterface.Orientation_Struct getMOrientation() {
        return instance.getMOrientation();
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
       */
      public Builder setMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
        copyOnWrite();
        instance.setMOrientation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
       */
      public Builder setMOrientation(
          mcs.ExternalInterface.Orientation_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMOrientation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
       */
      public Builder mergeMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
        copyOnWrite();
        instance.mergeMOrientation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 10;</code>
       */
      public Builder clearMOrientation() {  copyOnWrite();
        instance.clearMOrientation();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's ground speed
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_ground_speed = 11;</code>
       */
      public double getMGroundSpeed() {
        return instance.getMGroundSpeed();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's ground speed
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_ground_speed = 11;</code>
       */
      public Builder setMGroundSpeed(double value) {
        copyOnWrite();
        instance.setMGroundSpeed(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: metre/second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's ground speed
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_ground_speed = 11;</code>
       */
      public Builder clearMGroundSpeed() {
        copyOnWrite();
        instance.clearMGroundSpeed();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's indicated airspeed.  -ve if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_ias = 12;</code>
       */
      public double getMIas() {
        return instance.getMIas();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's indicated airspeed.  -ve if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_ias = 12;</code>
       */
      public Builder setMIas(double value) {
        copyOnWrite();
        instance.setMIas(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset's indicated airspeed.  -ve if not applicable.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional double m_ias = 12;</code>
       */
      public Builder clearMIas() {
        copyOnWrite();
        instance.clearMIas();
        return this;
      }

      /**
       * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
       */
      public int getMPathControlModeValue() {
        return instance.getMPathControlModeValue();
      }
      /**
       * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
       */
      public Builder setMPathControlModeValue(int value) {
        copyOnWrite();
        instance.setMPathControlModeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
       */
      public mcs.ExternalInterface.PathControlMode_Enum getMPathControlMode() {
        return instance.getMPathControlMode();
      }
      /**
       * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
       */
      public Builder setMPathControlMode(mcs.ExternalInterface.PathControlMode_Enum value) {
        copyOnWrite();
        instance.setMPathControlMode(value);
        return this;
      }
      /**
       * <code>optional .mcs.PathControlMode_Enum m_path_control_mode = 13;</code>
       */
      public Builder clearMPathControlMode() {
        copyOnWrite();
        instance.clearMPathControlMode();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Waypoint index of waypoint that the asset came from.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_from_waypoint = 14;</code>
       */
      public int getMFromWaypoint() {
        return instance.getMFromWaypoint();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Waypoint index of waypoint that the asset came from.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_from_waypoint = 14;</code>
       */
      public Builder setMFromWaypoint(int value) {
        copyOnWrite();
        instance.setMFromWaypoint(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: second
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Waypoint index of waypoint that the asset came from.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_from_waypoint = 14;</code>
       */
      public Builder clearMFromWaypoint() {
        copyOnWrite();
        instance.clearMFromWaypoint();
        return this;
      }

      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public java.util.List<mcs.ExternalInterface.PayloadSensorStatus_Struct> getMPayloadSensorStatusesList() {
        return java.util.Collections.unmodifiableList(
            instance.getMPayloadSensorStatusesList());
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public int getMPayloadSensorStatusesCount() {
        return instance.getMPayloadSensorStatusesCount();
      }/**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public mcs.ExternalInterface.PayloadSensorStatus_Struct getMPayloadSensorStatuses(int index) {
        return instance.getMPayloadSensorStatuses(index);
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder setMPayloadSensorStatuses(
          int index, mcs.ExternalInterface.PayloadSensorStatus_Struct value) {
        copyOnWrite();
        instance.setMPayloadSensorStatuses(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder setMPayloadSensorStatuses(
          int index, mcs.ExternalInterface.PayloadSensorStatus_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMPayloadSensorStatuses(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder addMPayloadSensorStatuses(mcs.ExternalInterface.PayloadSensorStatus_Struct value) {
        copyOnWrite();
        instance.addMPayloadSensorStatuses(value);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder addMPayloadSensorStatuses(
          int index, mcs.ExternalInterface.PayloadSensorStatus_Struct value) {
        copyOnWrite();
        instance.addMPayloadSensorStatuses(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder addMPayloadSensorStatuses(
          mcs.ExternalInterface.PayloadSensorStatus_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMPayloadSensorStatuses(builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder addMPayloadSensorStatuses(
          int index, mcs.ExternalInterface.PayloadSensorStatus_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMPayloadSensorStatuses(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder addAllMPayloadSensorStatuses(
          java.lang.Iterable<? extends mcs.ExternalInterface.PayloadSensorStatus_Struct> values) {
        copyOnWrite();
        instance.addAllMPayloadSensorStatuses(values);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder clearMPayloadSensorStatuses() {
        copyOnWrite();
        instance.clearMPayloadSensorStatuses();
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadSensorStatus_Struct m_payload_sensor_statuses = 15;</code>
       */
      public Builder removeMPayloadSensorStatuses(int index) {
        copyOnWrite();
        instance.removeMPayloadSensorStatuses(index);
        return this;
      }

      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public java.util.List<mcs.ExternalInterface.PayloadWeaponStatus_Struct> getMPayloadWeaponStatusesList() {
        return java.util.Collections.unmodifiableList(
            instance.getMPayloadWeaponStatusesList());
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public int getMPayloadWeaponStatusesCount() {
        return instance.getMPayloadWeaponStatusesCount();
      }/**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public mcs.ExternalInterface.PayloadWeaponStatus_Struct getMPayloadWeaponStatuses(int index) {
        return instance.getMPayloadWeaponStatuses(index);
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder setMPayloadWeaponStatuses(
          int index, mcs.ExternalInterface.PayloadWeaponStatus_Struct value) {
        copyOnWrite();
        instance.setMPayloadWeaponStatuses(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder setMPayloadWeaponStatuses(
          int index, mcs.ExternalInterface.PayloadWeaponStatus_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMPayloadWeaponStatuses(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder addMPayloadWeaponStatuses(mcs.ExternalInterface.PayloadWeaponStatus_Struct value) {
        copyOnWrite();
        instance.addMPayloadWeaponStatuses(value);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder addMPayloadWeaponStatuses(
          int index, mcs.ExternalInterface.PayloadWeaponStatus_Struct value) {
        copyOnWrite();
        instance.addMPayloadWeaponStatuses(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder addMPayloadWeaponStatuses(
          mcs.ExternalInterface.PayloadWeaponStatus_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMPayloadWeaponStatuses(builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder addMPayloadWeaponStatuses(
          int index, mcs.ExternalInterface.PayloadWeaponStatus_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMPayloadWeaponStatuses(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder addAllMPayloadWeaponStatuses(
          java.lang.Iterable<? extends mcs.ExternalInterface.PayloadWeaponStatus_Struct> values) {
        copyOnWrite();
        instance.addAllMPayloadWeaponStatuses(values);
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder clearMPayloadWeaponStatuses() {
        copyOnWrite();
        instance.clearMPayloadWeaponStatuses();
        return this;
      }
      /**
       * <code>repeated .mcs.PayloadWeaponStatus_Struct m_payload_weapon_statuses = 16;</code>
       */
      public Builder removeMPayloadWeaponStatuses(int index) {
        copyOnWrite();
        instance.removeMPayloadWeaponStatuses(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Acs_AssetTelemetry_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Acs_AssetTelemetry_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          mPayloadSensorStatuses_.makeImmutable();
          mPayloadWeaponStatuses_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Acs_AssetTelemetry_Msg other = (mcs.ExternalInterface.Acs_AssetTelemetry_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mAssetType_ = visitor.visitInt(mAssetType_ != 0, mAssetType_,
              other.mAssetType_ != 0, other.mAssetType_);
          mMcsId_ = visitor.visitInt(mMcsId_ != 0, mMcsId_,
              other.mMcsId_ != 0, other.mMcsId_);
          mTaskId_ = visitor.visitInt(mTaskId_ != 0, mTaskId_,
              other.mTaskId_ != 0, other.mTaskId_);
          mHealth_ = visitor.visitInt(mHealth_ != 0, mHealth_,    other.mHealth_ != 0, other.mHealth_);
          mDatalinkStatus_ = visitor.visitInt(mDatalinkStatus_ != 0, mDatalinkStatus_,
              other.mDatalinkStatus_ != 0, other.mDatalinkStatus_);
          mTimeLeft_ = visitor.visitInt(mTimeLeft_ != 0, mTimeLeft_,
              other.mTimeLeft_ != 0, other.mTimeLeft_);
          mLocation_ = visitor.visitMessage(mLocation_, other.mLocation_);
          mOrientation_ = visitor.visitMessage(mOrientation_, other.mOrientation_);
          mGroundSpeed_ = visitor.visitDouble(mGroundSpeed_ != 0D, mGroundSpeed_,
              other.mGroundSpeed_ != 0D, other.mGroundSpeed_);
          mIas_ = visitor.visitDouble(mIas_ != 0D, mIas_,
              other.mIas_ != 0D, other.mIas_);
          mPathControlMode_ = visitor.visitInt(mPathControlMode_ != 0, mPathControlMode_,    other.mPathControlMode_ != 0, other.mPathControlMode_);
          mFromWaypoint_ = visitor.visitInt(mFromWaypoint_ != 0, mFromWaypoint_,
              other.mFromWaypoint_ != 0, other.mFromWaypoint_);
          mPayloadSensorStatuses_= visitor.visitList(mPayloadSensorStatuses_, other.mPayloadSensorStatuses_);
          mPayloadWeaponStatuses_= visitor.visitList(mPayloadWeaponStatuses_, other.mPayloadWeaponStatuses_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetType_ = input.readInt32();
                  break;
                }
                case 32: {

                  mMcsId_ = input.readInt32();
                  break;
                }
                case 40: {

                  mTaskId_ = input.readInt32();
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();

                  mHealth_ = rawValue;
                  break;
                }
                case 56: {

                  mDatalinkStatus_ = input.readInt32();
                  break;
                }
                case 64: {

                  mTimeLeft_ = input.readInt32();
                  break;
                }
                case 74: {
                  mcs.ExternalInterface.Location_Struct.Builder subBuilder = null;
                  if (mLocation_ != null) {
                    subBuilder = mLocation_.toBuilder();
                  }
                  mLocation_ = input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mLocation_);
                    mLocation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 82: {
                  mcs.ExternalInterface.Orientation_Struct.Builder subBuilder = null;
                  if (mOrientation_ != null) {
                    subBuilder = mOrientation_.toBuilder();
                  }
                  mOrientation_ = input.readMessage(mcs.ExternalInterface.Orientation_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mOrientation_);
                    mOrientation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 89: {

                  mGroundSpeed_ = input.readDouble();
                  break;
                }
                case 97: {

                  mIas_ = input.readDouble();
                  break;
                }
                case 104: {
                  int rawValue = input.readEnum();

                  mPathControlMode_ = rawValue;
                  break;
                }
                case 112: {

                  mFromWaypoint_ = input.readInt32();
                  break;
                }
                case 122: {
                  if (!mPayloadSensorStatuses_.isModifiable()) {
                    mPayloadSensorStatuses_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mPayloadSensorStatuses_);
                  }
                  mPayloadSensorStatuses_.add(
                      input.readMessage(mcs.ExternalInterface.PayloadSensorStatus_Struct.parser(), extensionRegistry));
                  break;
                }
                case 130: {
                  if (!mPayloadWeaponStatuses_.isModifiable()) {
                    mPayloadWeaponStatuses_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mPayloadWeaponStatuses_);
                  }
                  mPayloadWeaponStatuses_.add(
                      input.readMessage(mcs.ExternalInterface.PayloadWeaponStatus_Struct.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Acs_AssetTelemetry_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Acs_AssetTelemetry_Msg)
    private static final mcs.ExternalInterface.Acs_AssetTelemetry_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Acs_AssetTelemetry_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Acs_AssetTelemetry_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Acs_AssetTelemetry_Msg> PARSER;

    public static com.google.protobuf.Parser<Acs_AssetTelemetry_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Acs_AssetAlert_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Acs_AssetAlert_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    int getMAssetId();

    /**
     * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
     */
    int getMAlertTypeValue();
    /**
     * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
     */
    mcs.ExternalInterface.AssetAlertType_Enum getMAlertType();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					ACS
   * To: 						MCS
   * Initiating condition:	ACS Operator-initiated
   * Expected response: 		Mcs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Acs_AssetAlert_Msg}
   */
  public  static final class Acs_AssetAlert_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Acs_AssetAlert_Msg, Acs_AssetAlert_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Acs_AssetAlert_Msg)
      Acs_AssetAlert_MsgOrBuilder {
    private Acs_AssetAlert_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 3;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_ALERT_TYPE_FIELD_NUMBER = 4;
    private int mAlertType_;
    /**
     * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
     */
    public int getMAlertTypeValue() {
      return mAlertType_;
    }
    /**
     * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
     */
    public mcs.ExternalInterface.AssetAlertType_Enum getMAlertType() {
      mcs.ExternalInterface.AssetAlertType_Enum result = mcs.ExternalInterface.AssetAlertType_Enum.forNumber(mAlertType_);
      return result == null ? mcs.ExternalInterface.AssetAlertType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
     */
    private void setMAlertTypeValue(int value) {
        mAlertType_ = value;
    }
    /**
     * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
     */
    private void setMAlertType(mcs.ExternalInterface.AssetAlertType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mAlertType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
     */
    private void clearMAlertType() {
      
      mAlertType_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        output.writeInt32(3, mAssetId_);
      }
      if (mAlertType_ != mcs.ExternalInterface.AssetAlertType_Enum.ASSET_ALERT_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(4, mAlertType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetId_);
      }
      if (mAlertType_ != mcs.ExternalInterface.AssetAlertType_Enum.ASSET_ALERT_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mAlertType_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetAlert_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Acs_AssetAlert_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					ACS
     * To: 						MCS
     * Initiating condition:	ACS Operator-initiated
     * Expected response: 		Mcs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Acs_AssetAlert_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Acs_AssetAlert_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Acs_AssetAlert_Msg)
        mcs.ExternalInterface.Acs_AssetAlert_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Acs_AssetAlert_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
       */
      public int getMAlertTypeValue() {
        return instance.getMAlertTypeValue();
      }
      /**
       * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
       */
      public Builder setMAlertTypeValue(int value) {
        copyOnWrite();
        instance.setMAlertTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
       */
      public mcs.ExternalInterface.AssetAlertType_Enum getMAlertType() {
        return instance.getMAlertType();
      }
      /**
       * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
       */
      public Builder setMAlertType(mcs.ExternalInterface.AssetAlertType_Enum value) {
        copyOnWrite();
        instance.setMAlertType(value);
        return this;
      }
      /**
       * <code>optional .mcs.AssetAlertType_Enum m_alert_type = 4;</code>
       */
      public Builder clearMAlertType() {
        copyOnWrite();
        instance.clearMAlertType();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Acs_AssetAlert_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Acs_AssetAlert_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Acs_AssetAlert_Msg other = (mcs.ExternalInterface.Acs_AssetAlert_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mAlertType_ = visitor.visitInt(mAlertType_ != 0, mAlertType_,    other.mAlertType_ != 0, other.mAlertType_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  mAlertType_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Acs_AssetAlert_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Acs_AssetAlert_Msg)
    private static final mcs.ExternalInterface.Acs_AssetAlert_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Acs_AssetAlert_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Acs_AssetAlert_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Acs_AssetAlert_Msg> PARSER;

    public static com.google.protobuf.Parser<Acs_AssetAlert_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Acs_AssetMovementUpdate_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Acs_AssetMovementUpdate_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    int getMAssetId();

    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
     */
    int getMRouteLoopTypeValue();
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
     */
    mcs.ExternalInterface.RouteLoopType_Enum getMRouteLoopType();

    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    java.util.List<mcs.ExternalInterface.Waypoint_Struct> 
        getMWaypointsList();
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    mcs.ExternalInterface.Waypoint_Struct getMWaypoints(int index);
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    int getMWaypointsCount();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					ACS
   * To: 						MCS
   * Initiating condition:	ACS Operator-initiated
   * Expected response: 		Mcs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Acs_AssetMovementUpdate_Msg}
   */
  public  static final class Acs_AssetMovementUpdate_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Acs_AssetMovementUpdate_Msg, Acs_AssetMovementUpdate_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Acs_AssetMovementUpdate_Msg)
      Acs_AssetMovementUpdate_MsgOrBuilder {
    private Acs_AssetMovementUpdate_Msg() {
      mWaypoints_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 3;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_ROUTE_LOOP_TYPE_FIELD_NUMBER = 4;
    private int mRouteLoopType_;
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
     */
    public int getMRouteLoopTypeValue() {
      return mRouteLoopType_;
    }
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
     */
    public mcs.ExternalInterface.RouteLoopType_Enum getMRouteLoopType() {
      mcs.ExternalInterface.RouteLoopType_Enum result = mcs.ExternalInterface.RouteLoopType_Enum.forNumber(mRouteLoopType_);
      return result == null ? mcs.ExternalInterface.RouteLoopType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
     */
    private void setMRouteLoopTypeValue(int value) {
        mRouteLoopType_ = value;
    }
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
     */
    private void setMRouteLoopType(mcs.ExternalInterface.RouteLoopType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mRouteLoopType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
     */
    private void clearMRouteLoopType() {
      
      mRouteLoopType_ = 0;
    }

    public static final int M_WAYPOINTS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.Waypoint_Struct> mWaypoints_;
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    public java.util.List<mcs.ExternalInterface.Waypoint_Struct> getMWaypointsList() {
      return mWaypoints_;
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.Waypoint_StructOrBuilder> 
        getMWaypointsOrBuilderList() {
      return mWaypoints_;
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    public int getMWaypointsCount() {
      return mWaypoints_.size();
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    public mcs.ExternalInterface.Waypoint_Struct getMWaypoints(int index) {
      return mWaypoints_.get(index);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    public mcs.ExternalInterface.Waypoint_StructOrBuilder getMWaypointsOrBuilder(
        int index) {
      return mWaypoints_.get(index);
    }
    private void ensureMWaypointsIsMutable() {
      if (!mWaypoints_.isModifiable()) {
        mWaypoints_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mWaypoints_);
       }
    }

    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void setMWaypoints(
        int index, mcs.ExternalInterface.Waypoint_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMWaypointsIsMutable();
      mWaypoints_.set(index, value);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void setMWaypoints(
        int index, mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
      ensureMWaypointsIsMutable();
      mWaypoints_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void addMWaypoints(mcs.ExternalInterface.Waypoint_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMWaypointsIsMutable();
      mWaypoints_.add(value);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void addMWaypoints(
        int index, mcs.ExternalInterface.Waypoint_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMWaypointsIsMutable();
      mWaypoints_.add(index, value);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void addMWaypoints(
        mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
      ensureMWaypointsIsMutable();
      mWaypoints_.add(builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void addMWaypoints(
        int index, mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
      ensureMWaypointsIsMutable();
      mWaypoints_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void addAllMWaypoints(
        java.lang.Iterable<? extends mcs.ExternalInterface.Waypoint_Struct> values) {
      ensureMWaypointsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mWaypoints_);
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void clearMWaypoints() {
      mWaypoints_ = emptyProtobufList();
    }
    /**
     * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
     */
    private void removeMWaypoints(int index) {
      ensureMWaypointsIsMutable();
      mWaypoints_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        output.writeInt32(3, mAssetId_);
      }
      if (mRouteLoopType_ != mcs.ExternalInterface.RouteLoopType_Enum.ROUTE_LOOP_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(4, mRouteLoopType_);
      }
      for (int i = 0; i < mWaypoints_.size(); i++) {
        output.writeMessage(5, mWaypoints_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetId_);
      }
      if (mRouteLoopType_ != mcs.ExternalInterface.RouteLoopType_Enum.ROUTE_LOOP_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mRouteLoopType_);
      }
      for (int i = 0; i < mWaypoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, mWaypoints_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					ACS
     * To: 						MCS
     * Initiating condition:	ACS Operator-initiated
     * Expected response: 		Mcs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Acs_AssetMovementUpdate_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Acs_AssetMovementUpdate_Msg)
        mcs.ExternalInterface.Acs_AssetMovementUpdate_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
       */
      public int getMRouteLoopTypeValue() {
        return instance.getMRouteLoopTypeValue();
      }
      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
       */
      public Builder setMRouteLoopTypeValue(int value) {
        copyOnWrite();
        instance.setMRouteLoopTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
       */
      public mcs.ExternalInterface.RouteLoopType_Enum getMRouteLoopType() {
        return instance.getMRouteLoopType();
      }
      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
       */
      public Builder setMRouteLoopType(mcs.ExternalInterface.RouteLoopType_Enum value) {
        copyOnWrite();
        instance.setMRouteLoopType(value);
        return this;
      }
      /**
       * <code>optional .mcs.RouteLoopType_Enum m_route_loop_type = 4;</code>
       */
      public Builder clearMRouteLoopType() {
        copyOnWrite();
        instance.clearMRouteLoopType();
        return this;
      }

      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public java.util.List<mcs.ExternalInterface.Waypoint_Struct> getMWaypointsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMWaypointsList());
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public int getMWaypointsCount() {
        return instance.getMWaypointsCount();
      }/**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public mcs.ExternalInterface.Waypoint_Struct getMWaypoints(int index) {
        return instance.getMWaypoints(index);
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder setMWaypoints(
          int index, mcs.ExternalInterface.Waypoint_Struct value) {
        copyOnWrite();
        instance.setMWaypoints(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder setMWaypoints(
          int index, mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMWaypoints(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder addMWaypoints(mcs.ExternalInterface.Waypoint_Struct value) {
        copyOnWrite();
        instance.addMWaypoints(value);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder addMWaypoints(
          int index, mcs.ExternalInterface.Waypoint_Struct value) {
        copyOnWrite();
        instance.addMWaypoints(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder addMWaypoints(
          mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMWaypoints(builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder addMWaypoints(
          int index, mcs.ExternalInterface.Waypoint_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMWaypoints(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder addAllMWaypoints(
          java.lang.Iterable<? extends mcs.ExternalInterface.Waypoint_Struct> values) {
        copyOnWrite();
        instance.addAllMWaypoints(values);
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder clearMWaypoints() {
        copyOnWrite();
        instance.clearMWaypoints();
        return this;
      }
      /**
       * <code>repeated .mcs.Waypoint_Struct m_waypoints = 5;</code>
       */
      public Builder removeMWaypoints(int index) {
        copyOnWrite();
        instance.removeMWaypoints(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Acs_AssetMovementUpdate_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          mWaypoints_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg other = (mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mRouteLoopType_ = visitor.visitInt(mRouteLoopType_ != 0, mRouteLoopType_,    other.mRouteLoopType_ != 0, other.mRouteLoopType_);
          mWaypoints_= visitor.visitList(mWaypoints_, other.mWaypoints_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  mRouteLoopType_ = rawValue;
                  break;
                }
                case 42: {
                  if (!mWaypoints_.isModifiable()) {
                    mWaypoints_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mWaypoints_);
                  }
                  mWaypoints_.add(
                      input.readMessage(mcs.ExternalInterface.Waypoint_Struct.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Acs_AssetMovementUpdate_Msg)
    private static final mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Acs_AssetMovementUpdate_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Acs_AssetMovementUpdate_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Acs_AssetMovementUpdate_Msg> PARSER;

    public static com.google.protobuf.Parser<Acs_AssetMovementUpdate_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_AddProhibitedZone_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_AddProhibitedZone_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
     */
    boolean hasMZone();
    /**
     * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
     */
    mcs.ExternalInterface.ProhibitedZone_Struct getMZone();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Acs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_AddProhibitedZone_Msg}
   */
  public  static final class Mcs_AddProhibitedZone_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_AddProhibitedZone_Msg, Mcs_AddProhibitedZone_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_AddProhibitedZone_Msg)
      Mcs_AddProhibitedZone_MsgOrBuilder {
    private Mcs_AddProhibitedZone_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ZONE_FIELD_NUMBER = 4;
    private mcs.ExternalInterface.ProhibitedZone_Struct mZone_;
    /**
     * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
     */
    public boolean hasMZone() {
      return mZone_ != null;
    }
    /**
     * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
     */
    public mcs.ExternalInterface.ProhibitedZone_Struct getMZone() {
      return mZone_ == null ? mcs.ExternalInterface.ProhibitedZone_Struct.getDefaultInstance() : mZone_;
    }
    /**
     * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
     */
    private void setMZone(mcs.ExternalInterface.ProhibitedZone_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mZone_ = value;
      
      }
    /**
     * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
     */
    private void setMZone(
        mcs.ExternalInterface.ProhibitedZone_Struct.Builder builderForValue) {
      mZone_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
     */
    private void mergeMZone(mcs.ExternalInterface.ProhibitedZone_Struct value) {
      if (mZone_ != null &&
          mZone_ != mcs.ExternalInterface.ProhibitedZone_Struct.getDefaultInstance()) {
        mZone_ =
          mcs.ExternalInterface.ProhibitedZone_Struct.newBuilder(mZone_).mergeFrom(value).buildPartial();
      } else {
        mZone_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
     */
    private void clearMZone() {  mZone_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mZone_ != null) {
        output.writeMessage(4, getMZone());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mZone_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMZone());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Acs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_AddProhibitedZone_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_AddProhibitedZone_Msg)
        mcs.ExternalInterface.Mcs_AddProhibitedZone_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
       */
      public boolean hasMZone() {
        return instance.hasMZone();
      }
      /**
       * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
       */
      public mcs.ExternalInterface.ProhibitedZone_Struct getMZone() {
        return instance.getMZone();
      }
      /**
       * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
       */
      public Builder setMZone(mcs.ExternalInterface.ProhibitedZone_Struct value) {
        copyOnWrite();
        instance.setMZone(value);
        return this;
        }
      /**
       * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
       */
      public Builder setMZone(
          mcs.ExternalInterface.ProhibitedZone_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMZone(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
       */
      public Builder mergeMZone(mcs.ExternalInterface.ProhibitedZone_Struct value) {
        copyOnWrite();
        instance.mergeMZone(value);
        return this;
      }
      /**
       * <code>optional .mcs.ProhibitedZone_Struct m_zone = 4;</code>
       */
      public Builder clearMZone() {  copyOnWrite();
        instance.clearMZone();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_AddProhibitedZone_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg other = (mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mZone_ = visitor.visitMessage(mZone_, other.mZone_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 34: {
                  mcs.ExternalInterface.ProhibitedZone_Struct.Builder subBuilder = null;
                  if (mZone_ != null) {
                    subBuilder = mZone_.toBuilder();
                  }
                  mZone_ = input.readMessage(mcs.ExternalInterface.ProhibitedZone_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mZone_);
                    mZone_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_AddProhibitedZone_Msg)
    private static final mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_AddProhibitedZone_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_AddProhibitedZone_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_AddProhibitedZone_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_AddProhibitedZone_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_RemoveProhibitedZone_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_RemoveProhibitedZone_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Zone ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_zone_id = 3;</code>
     */
    int getMZoneId();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Acs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_RemoveProhibitedZone_Msg}
   */
  public  static final class Mcs_RemoveProhibitedZone_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_RemoveProhibitedZone_Msg, Mcs_RemoveProhibitedZone_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_RemoveProhibitedZone_Msg)
      Mcs_RemoveProhibitedZone_MsgOrBuilder {
    private Mcs_RemoveProhibitedZone_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ZONE_ID_FIELD_NUMBER = 3;
    private int mZoneId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Zone ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_zone_id = 3;</code>
     */
    public int getMZoneId() {
      return mZoneId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Zone ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_zone_id = 3;</code>
     */
    private void setMZoneId(int value) {
      
      mZoneId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Zone ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_zone_id = 3;</code>
     */
    private void clearMZoneId() {
      
      mZoneId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mZoneId_ != 0) {
        output.writeInt32(3, mZoneId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mZoneId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mZoneId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Acs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_RemoveProhibitedZone_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_RemoveProhibitedZone_Msg)
        mcs.ExternalInterface.Mcs_RemoveProhibitedZone_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Zone ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_zone_id = 3;</code>
       */
      public int getMZoneId() {
        return instance.getMZoneId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Zone ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_zone_id = 3;</code>
       */
      public Builder setMZoneId(int value) {
        copyOnWrite();
        instance.setMZoneId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Zone ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_zone_id = 3;</code>
       */
      public Builder clearMZoneId() {
        copyOnWrite();
        instance.clearMZoneId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_RemoveProhibitedZone_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg other = (mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mZoneId_ = visitor.visitInt(mZoneId_ != 0, mZoneId_,
              other.mZoneId_ != 0, other.mZoneId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mZoneId_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_RemoveProhibitedZone_Msg)
    private static final mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_RemoveProhibitedZone_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_RemoveProhibitedZone_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_RemoveProhibitedZone_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_RemoveProhibitedZone_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_AddRedForce_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_AddRedForce_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
     */
    boolean hasMRedForce();
    /**
     * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
     */
    mcs.ExternalInterface.RedForce_Struct getMRedForce();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Acs_Ack_Msg
   * Remarks:					Optional images are sent separately.
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_AddRedForce_Msg}
   */
  public  static final class Mcs_AddRedForce_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_AddRedForce_Msg, Mcs_AddRedForce_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_AddRedForce_Msg)
      Mcs_AddRedForce_MsgOrBuilder {
    private Mcs_AddRedForce_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_RED_FORCE_FIELD_NUMBER = 3;
    private mcs.ExternalInterface.RedForce_Struct mRedForce_;
    /**
     * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
     */
    public boolean hasMRedForce() {
      return mRedForce_ != null;
    }
    /**
     * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
     */
    public mcs.ExternalInterface.RedForce_Struct getMRedForce() {
      return mRedForce_ == null ? mcs.ExternalInterface.RedForce_Struct.getDefaultInstance() : mRedForce_;
    }
    /**
     * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
     */
    private void setMRedForce(mcs.ExternalInterface.RedForce_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mRedForce_ = value;
      
      }
    /**
     * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
     */
    private void setMRedForce(
        mcs.ExternalInterface.RedForce_Struct.Builder builderForValue) {
      mRedForce_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
     */
    private void mergeMRedForce(mcs.ExternalInterface.RedForce_Struct value) {
      if (mRedForce_ != null &&
          mRedForce_ != mcs.ExternalInterface.RedForce_Struct.getDefaultInstance()) {
        mRedForce_ =
          mcs.ExternalInterface.RedForce_Struct.newBuilder(mRedForce_).mergeFrom(value).buildPartial();
      } else {
        mRedForce_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
     */
    private void clearMRedForce() {  mRedForce_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mRedForce_ != null) {
        output.writeMessage(3, getMRedForce());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mRedForce_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMRedForce());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_AddRedForce_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Acs_Ack_Msg
     * Remarks:					Optional images are sent separately.
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_AddRedForce_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_AddRedForce_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_AddRedForce_Msg)
        mcs.ExternalInterface.Mcs_AddRedForce_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_AddRedForce_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
       */
      public boolean hasMRedForce() {
        return instance.hasMRedForce();
      }
      /**
       * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
       */
      public mcs.ExternalInterface.RedForce_Struct getMRedForce() {
        return instance.getMRedForce();
      }
      /**
       * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
       */
      public Builder setMRedForce(mcs.ExternalInterface.RedForce_Struct value) {
        copyOnWrite();
        instance.setMRedForce(value);
        return this;
        }
      /**
       * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
       */
      public Builder setMRedForce(
          mcs.ExternalInterface.RedForce_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMRedForce(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
       */
      public Builder mergeMRedForce(mcs.ExternalInterface.RedForce_Struct value) {
        copyOnWrite();
        instance.mergeMRedForce(value);
        return this;
      }
      /**
       * <code>optional .mcs.RedForce_Struct m_red_force = 3;</code>
       */
      public Builder clearMRedForce() {  copyOnWrite();
        instance.clearMRedForce();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_AddRedForce_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_AddRedForce_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_AddRedForce_Msg other = (mcs.ExternalInterface.Mcs_AddRedForce_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mRedForce_ = visitor.visitMessage(mRedForce_, other.mRedForce_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 26: {
                  mcs.ExternalInterface.RedForce_Struct.Builder subBuilder = null;
                  if (mRedForce_ != null) {
                    subBuilder = mRedForce_.toBuilder();
                  }
                  mRedForce_ = input.readMessage(mcs.ExternalInterface.RedForce_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mRedForce_);
                    mRedForce_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_AddRedForce_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_AddRedForce_Msg)
    private static final mcs.ExternalInterface.Mcs_AddRedForce_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_AddRedForce_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_AddRedForce_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_AddRedForce_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_AddRedForce_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_RemoveRedForce_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_RemoveRedForce_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 3;</code>
     */
    int getMRedForceId();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Acs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_RemoveRedForce_Msg}
   */
  public  static final class Mcs_RemoveRedForce_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_RemoveRedForce_Msg, Mcs_RemoveRedForce_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_RemoveRedForce_Msg)
      Mcs_RemoveRedForce_MsgOrBuilder {
    private Mcs_RemoveRedForce_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_RED_FORCE_ID_FIELD_NUMBER = 3;
    private int mRedForceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 3;</code>
     */
    public int getMRedForceId() {
      return mRedForceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 3;</code>
     */
    private void setMRedForceId(int value) {
      
      mRedForceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Red Force ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_red_force_id = 3;</code>
     */
    private void clearMRedForceId() {
      
      mRedForceId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mRedForceId_ != 0) {
        output.writeInt32(3, mRedForceId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mRedForceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mRedForceId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_RemoveRedForce_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Acs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_RemoveRedForce_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_RemoveRedForce_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_RemoveRedForce_Msg)
        mcs.ExternalInterface.Mcs_RemoveRedForce_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 3;</code>
       */
      public int getMRedForceId() {
        return instance.getMRedForceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 3;</code>
       */
      public Builder setMRedForceId(int value) {
        copyOnWrite();
        instance.setMRedForceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Red Force ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_red_force_id = 3;</code>
       */
      public Builder clearMRedForceId() {
        copyOnWrite();
        instance.clearMRedForceId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_RemoveRedForce_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_RemoveRedForce_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_RemoveRedForce_Msg other = (mcs.ExternalInterface.Mcs_RemoveRedForce_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mRedForceId_ = visitor.visitInt(mRedForceId_ != 0, mRedForceId_,
              other.mRedForceId_ != 0, other.mRedForceId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mRedForceId_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_RemoveRedForce_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_RemoveRedForce_Msg)
    private static final mcs.ExternalInterface.Mcs_RemoveRedForce_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_RemoveRedForce_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_RemoveRedForce_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_RemoveRedForce_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_RemoveRedForce_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Acs_BattleReport_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Acs_BattleReport_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    boolean hasMReport();
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    mcs.ExternalInterface.BattleReport_Struct getMReport();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					ACS
   * To: 						MS
   * Initiating condition:	ACS Operator-initiated
   * Expected response: 		Mcs_Ack_Msg
   * Remarks:					Optional images are sent separately.
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Acs_BattleReport_Msg}
   */
  public  static final class Acs_BattleReport_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Acs_BattleReport_Msg, Acs_BattleReport_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Acs_BattleReport_Msg)
      Acs_BattleReport_MsgOrBuilder {
    private Acs_BattleReport_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_REPORT_FIELD_NUMBER = 3;
    private mcs.ExternalInterface.BattleReport_Struct mReport_;
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    public boolean hasMReport() {
      return mReport_ != null;
    }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    public mcs.ExternalInterface.BattleReport_Struct getMReport() {
      return mReport_ == null ? mcs.ExternalInterface.BattleReport_Struct.getDefaultInstance() : mReport_;
    }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    private void setMReport(mcs.ExternalInterface.BattleReport_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mReport_ = value;
      
      }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    private void setMReport(
        mcs.ExternalInterface.BattleReport_Struct.Builder builderForValue) {
      mReport_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    private void mergeMReport(mcs.ExternalInterface.BattleReport_Struct value) {
      if (mReport_ != null &&
          mReport_ != mcs.ExternalInterface.BattleReport_Struct.getDefaultInstance()) {
        mReport_ =
          mcs.ExternalInterface.BattleReport_Struct.newBuilder(mReport_).mergeFrom(value).buildPartial();
      } else {
        mReport_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    private void clearMReport() {  mReport_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mReport_ != null) {
        output.writeMessage(3, getMReport());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mReport_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMReport());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_BattleReport_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Acs_BattleReport_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					ACS
     * To: 						MS
     * Initiating condition:	ACS Operator-initiated
     * Expected response: 		Mcs_Ack_Msg
     * Remarks:					Optional images are sent separately.
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Acs_BattleReport_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Acs_BattleReport_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Acs_BattleReport_Msg)
        mcs.ExternalInterface.Acs_BattleReport_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Acs_BattleReport_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public boolean hasMReport() {
        return instance.hasMReport();
      }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public mcs.ExternalInterface.BattleReport_Struct getMReport() {
        return instance.getMReport();
      }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public Builder setMReport(mcs.ExternalInterface.BattleReport_Struct value) {
        copyOnWrite();
        instance.setMReport(value);
        return this;
        }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public Builder setMReport(
          mcs.ExternalInterface.BattleReport_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMReport(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public Builder mergeMReport(mcs.ExternalInterface.BattleReport_Struct value) {
        copyOnWrite();
        instance.mergeMReport(value);
        return this;
      }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public Builder clearMReport() {  copyOnWrite();
        instance.clearMReport();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Acs_BattleReport_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Acs_BattleReport_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Acs_BattleReport_Msg other = (mcs.ExternalInterface.Acs_BattleReport_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mReport_ = visitor.visitMessage(mReport_, other.mReport_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 26: {
                  mcs.ExternalInterface.BattleReport_Struct.Builder subBuilder = null;
                  if (mReport_ != null) {
                    subBuilder = mReport_.toBuilder();
                  }
                  mReport_ = input.readMessage(mcs.ExternalInterface.BattleReport_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mReport_);
                    mReport_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Acs_BattleReport_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Acs_BattleReport_Msg)
    private static final mcs.ExternalInterface.Acs_BattleReport_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Acs_BattleReport_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Acs_BattleReport_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Acs_BattleReport_Msg> PARSER;

    public static com.google.protobuf.Parser<Acs_BattleReport_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_TaskSummary_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_TaskSummary_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    int getMAssetId();

    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    java.util.List<mcs.ExternalInterface.SummarizedTask_Struct> 
        getMTasksList();
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    mcs.ExternalInterface.SummarizedTask_Struct getMTasks(int index);
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    int getMTasksCount();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Acs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_TaskSummary_Msg}
   */
  public  static final class Mcs_TaskSummary_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_TaskSummary_Msg, Mcs_TaskSummary_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_TaskSummary_Msg)
      Mcs_TaskSummary_MsgOrBuilder {
    private Mcs_TaskSummary_Msg() {
      mTasks_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 3;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_TASKS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<mcs.ExternalInterface.SummarizedTask_Struct> mTasks_;
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    public java.util.List<mcs.ExternalInterface.SummarizedTask_Struct> getMTasksList() {
      return mTasks_;
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    public java.util.List<? extends mcs.ExternalInterface.SummarizedTask_StructOrBuilder> 
        getMTasksOrBuilderList() {
      return mTasks_;
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    public int getMTasksCount() {
      return mTasks_.size();
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    public mcs.ExternalInterface.SummarizedTask_Struct getMTasks(int index) {
      return mTasks_.get(index);
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    public mcs.ExternalInterface.SummarizedTask_StructOrBuilder getMTasksOrBuilder(
        int index) {
      return mTasks_.get(index);
    }
    private void ensureMTasksIsMutable() {
      if (!mTasks_.isModifiable()) {
        mTasks_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(mTasks_);
       }
    }

    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void setMTasks(
        int index, mcs.ExternalInterface.SummarizedTask_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMTasksIsMutable();
      mTasks_.set(index, value);
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void setMTasks(
        int index, mcs.ExternalInterface.SummarizedTask_Struct.Builder builderForValue) {
      ensureMTasksIsMutable();
      mTasks_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void addMTasks(mcs.ExternalInterface.SummarizedTask_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMTasksIsMutable();
      mTasks_.add(value);
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void addMTasks(
        int index, mcs.ExternalInterface.SummarizedTask_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureMTasksIsMutable();
      mTasks_.add(index, value);
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void addMTasks(
        mcs.ExternalInterface.SummarizedTask_Struct.Builder builderForValue) {
      ensureMTasksIsMutable();
      mTasks_.add(builderForValue.build());
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void addMTasks(
        int index, mcs.ExternalInterface.SummarizedTask_Struct.Builder builderForValue) {
      ensureMTasksIsMutable();
      mTasks_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void addAllMTasks(
        java.lang.Iterable<? extends mcs.ExternalInterface.SummarizedTask_Struct> values) {
      ensureMTasksIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, mTasks_);
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void clearMTasks() {
      mTasks_ = emptyProtobufList();
    }
    /**
     * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
     */
    private void removeMTasks(int index) {
      ensureMTasksIsMutable();
      mTasks_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        output.writeInt32(3, mAssetId_);
      }
      for (int i = 0; i < mTasks_.size(); i++) {
        output.writeMessage(4, mTasks_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetId_);
      }
      for (int i = 0; i < mTasks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, mTasks_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_TaskSummary_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Acs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_TaskSummary_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_TaskSummary_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_TaskSummary_Msg)
        mcs.ExternalInterface.Mcs_TaskSummary_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_TaskSummary_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public java.util.List<mcs.ExternalInterface.SummarizedTask_Struct> getMTasksList() {
        return java.util.Collections.unmodifiableList(
            instance.getMTasksList());
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public int getMTasksCount() {
        return instance.getMTasksCount();
      }/**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public mcs.ExternalInterface.SummarizedTask_Struct getMTasks(int index) {
        return instance.getMTasks(index);
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder setMTasks(
          int index, mcs.ExternalInterface.SummarizedTask_Struct value) {
        copyOnWrite();
        instance.setMTasks(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder setMTasks(
          int index, mcs.ExternalInterface.SummarizedTask_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMTasks(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder addMTasks(mcs.ExternalInterface.SummarizedTask_Struct value) {
        copyOnWrite();
        instance.addMTasks(value);
        return this;
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder addMTasks(
          int index, mcs.ExternalInterface.SummarizedTask_Struct value) {
        copyOnWrite();
        instance.addMTasks(index, value);
        return this;
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder addMTasks(
          mcs.ExternalInterface.SummarizedTask_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMTasks(builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder addMTasks(
          int index, mcs.ExternalInterface.SummarizedTask_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.addMTasks(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder addAllMTasks(
          java.lang.Iterable<? extends mcs.ExternalInterface.SummarizedTask_Struct> values) {
        copyOnWrite();
        instance.addAllMTasks(values);
        return this;
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder clearMTasks() {
        copyOnWrite();
        instance.clearMTasks();
        return this;
      }
      /**
       * <code>repeated .mcs.SummarizedTask_Struct m_tasks = 4;</code>
       */
      public Builder removeMTasks(int index) {
        copyOnWrite();
        instance.removeMTasks(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_TaskSummary_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_TaskSummary_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          mTasks_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_TaskSummary_Msg other = (mcs.ExternalInterface.Mcs_TaskSummary_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mTasks_= visitor.visitList(mTasks_, other.mTasks_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 34: {
                  if (!mTasks_.isModifiable()) {
                    mTasks_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(mTasks_);
                  }
                  mTasks_.add(
                      input.readMessage(mcs.ExternalInterface.SummarizedTask_Struct.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_TaskSummary_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_TaskSummary_Msg)
    private static final mcs.ExternalInterface.Mcs_TaskSummary_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_TaskSummary_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_TaskSummary_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_TaskSummary_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_TaskSummary_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_ExecuteTaskCommand_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_ExecuteTaskCommand_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    int getMAssetId();

    /**
     * <code>optional .mcs.Task_Struct m_task = 4;</code>
     */
    boolean hasMTask();
    /**
     * <code>optional .mcs.Task_Struct m_task = 4;</code>
     */
    mcs.ExternalInterface.Task_Struct getMTask();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Acs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_ExecuteTaskCommand_Msg}
   */
  public  static final class Mcs_ExecuteTaskCommand_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_ExecuteTaskCommand_Msg, Mcs_ExecuteTaskCommand_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_ExecuteTaskCommand_Msg)
      Mcs_ExecuteTaskCommand_MsgOrBuilder {
    private Mcs_ExecuteTaskCommand_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 3;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_TASK_FIELD_NUMBER = 4;
    private mcs.ExternalInterface.Task_Struct mTask_;
    /**
     * <code>optional .mcs.Task_Struct m_task = 4;</code>
     */
    public boolean hasMTask() {
      return mTask_ != null;
    }
    /**
     * <code>optional .mcs.Task_Struct m_task = 4;</code>
     */
    public mcs.ExternalInterface.Task_Struct getMTask() {
      return mTask_ == null ? mcs.ExternalInterface.Task_Struct.getDefaultInstance() : mTask_;
    }
    /**
     * <code>optional .mcs.Task_Struct m_task = 4;</code>
     */
    private void setMTask(mcs.ExternalInterface.Task_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mTask_ = value;
      
      }
    /**
     * <code>optional .mcs.Task_Struct m_task = 4;</code>
     */
    private void setMTask(
        mcs.ExternalInterface.Task_Struct.Builder builderForValue) {
      mTask_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Task_Struct m_task = 4;</code>
     */
    private void mergeMTask(mcs.ExternalInterface.Task_Struct value) {
      if (mTask_ != null &&
          mTask_ != mcs.ExternalInterface.Task_Struct.getDefaultInstance()) {
        mTask_ =
          mcs.ExternalInterface.Task_Struct.newBuilder(mTask_).mergeFrom(value).buildPartial();
      } else {
        mTask_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Task_Struct m_task = 4;</code>
     */
    private void clearMTask() {  mTask_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        output.writeInt32(3, mAssetId_);
      }
      if (mTask_ != null) {
        output.writeMessage(4, getMTask());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetId_);
      }
      if (mTask_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMTask());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Acs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_ExecuteTaskCommand_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_ExecuteTaskCommand_Msg)
        mcs.ExternalInterface.Mcs_ExecuteTaskCommand_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <code>optional .mcs.Task_Struct m_task = 4;</code>
       */
      public boolean hasMTask() {
        return instance.hasMTask();
      }
      /**
       * <code>optional .mcs.Task_Struct m_task = 4;</code>
       */
      public mcs.ExternalInterface.Task_Struct getMTask() {
        return instance.getMTask();
      }
      /**
       * <code>optional .mcs.Task_Struct m_task = 4;</code>
       */
      public Builder setMTask(mcs.ExternalInterface.Task_Struct value) {
        copyOnWrite();
        instance.setMTask(value);
        return this;
        }
      /**
       * <code>optional .mcs.Task_Struct m_task = 4;</code>
       */
      public Builder setMTask(
          mcs.ExternalInterface.Task_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMTask(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Task_Struct m_task = 4;</code>
       */
      public Builder mergeMTask(mcs.ExternalInterface.Task_Struct value) {
        copyOnWrite();
        instance.mergeMTask(value);
        return this;
      }
      /**
       * <code>optional .mcs.Task_Struct m_task = 4;</code>
       */
      public Builder clearMTask() {  copyOnWrite();
        instance.clearMTask();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_ExecuteTaskCommand_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg other = (mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mTask_ = visitor.visitMessage(mTask_, other.mTask_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 34: {
                  mcs.ExternalInterface.Task_Struct.Builder subBuilder = null;
                  if (mTask_ != null) {
                    subBuilder = mTask_.toBuilder();
                  }
                  mTask_ = input.readMessage(mcs.ExternalInterface.Task_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mTask_);
                    mTask_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_ExecuteTaskCommand_Msg)
    private static final mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_ExecuteTaskCommand_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_ExecuteTaskCommand_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_ExecuteTaskCommand_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_ExecuteTaskCommand_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_AbortTaskCommand_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_AbortTaskCommand_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    int getMAssetId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 4;</code>
     */
    int getMTaskId();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						ACS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Acs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_AbortTaskCommand_Msg}
   */
  public  static final class Mcs_AbortTaskCommand_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_AbortTaskCommand_Msg, Mcs_AbortTaskCommand_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_AbortTaskCommand_Msg)
      Mcs_AbortTaskCommand_MsgOrBuilder {
    private Mcs_AbortTaskCommand_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 3;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_TASK_ID_FIELD_NUMBER = 4;
    private int mTaskId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 4;</code>
     */
    public int getMTaskId() {
      return mTaskId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 4;</code>
     */
    private void setMTaskId(int value) {
      
      mTaskId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 4;</code>
     */
    private void clearMTaskId() {
      
      mTaskId_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        output.writeInt32(3, mAssetId_);
      }
      if (mTaskId_ != 0) {
        output.writeInt32(4, mTaskId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetId_);
      }
      if (mTaskId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mTaskId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						ACS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Acs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_AbortTaskCommand_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_AbortTaskCommand_Msg)
        mcs.ExternalInterface.Mcs_AbortTaskCommand_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 4;</code>
       */
      public int getMTaskId() {
        return instance.getMTaskId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 4;</code>
       */
      public Builder setMTaskId(int value) {
        copyOnWrite();
        instance.setMTaskId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 4;</code>
       */
      public Builder clearMTaskId() {
        copyOnWrite();
        instance.clearMTaskId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_AbortTaskCommand_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg other = (mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mTaskId_ = visitor.visitInt(mTaskId_ != 0, mTaskId_,
              other.mTaskId_ != 0, other.mTaskId_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 32: {

                  mTaskId_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_AbortTaskCommand_Msg)
    private static final mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_AbortTaskCommand_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_AbortTaskCommand_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_AbortTaskCommand_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_AbortTaskCommand_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Acs_TaskStatusUpdate_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Acs_TaskStatusUpdate_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    int getMAssetId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 4;</code>
     */
    int getMTaskId();

    /**
     * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
     */
    int getMTaskStatusValue();
    /**
     * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
     */
    mcs.ExternalInterface.TaskStatus_Enum getMTaskStatus();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					ACS
   * To: 						MCS
   * Initiating condition:	ACS Operator-initiated
   * Expected response: 		Mcs_Ack_Msg
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Acs_TaskStatusUpdate_Msg}
   */
  public  static final class Acs_TaskStatusUpdate_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Acs_TaskStatusUpdate_Msg, Acs_TaskStatusUpdate_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Acs_TaskStatusUpdate_Msg)
      Acs_TaskStatusUpdate_MsgOrBuilder {
    private Acs_TaskStatusUpdate_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 3;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 3;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_TASK_ID_FIELD_NUMBER = 4;
    private int mTaskId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 4;</code>
     */
    public int getMTaskId() {
      return mTaskId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 4;</code>
     */
    private void setMTaskId(int value) {
      
      mTaskId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Task ID
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_task_id = 4;</code>
     */
    private void clearMTaskId() {
      
      mTaskId_ = 0;
    }

    public static final int M_TASK_STATUS_FIELD_NUMBER = 5;
    private int mTaskStatus_;
    /**
     * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
     */
    public int getMTaskStatusValue() {
      return mTaskStatus_;
    }
    /**
     * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
     */
    public mcs.ExternalInterface.TaskStatus_Enum getMTaskStatus() {
      mcs.ExternalInterface.TaskStatus_Enum result = mcs.ExternalInterface.TaskStatus_Enum.forNumber(mTaskStatus_);
      return result == null ? mcs.ExternalInterface.TaskStatus_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
     */
    private void setMTaskStatusValue(int value) {
        mTaskStatus_ = value;
    }
    /**
     * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
     */
    private void setMTaskStatus(mcs.ExternalInterface.TaskStatus_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mTaskStatus_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
     */
    private void clearMTaskStatus() {
      
      mTaskStatus_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        output.writeInt32(3, mAssetId_);
      }
      if (mTaskId_ != 0) {
        output.writeInt32(4, mTaskId_);
      }
      if (mTaskStatus_ != mcs.ExternalInterface.TaskStatus_Enum.TASK_STATUS_NOT_IN_USE.getNumber()) {
        output.writeEnum(5, mTaskStatus_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetId_);
      }
      if (mTaskId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mTaskId_);
      }
      if (mTaskStatus_ != mcs.ExternalInterface.TaskStatus_Enum.TASK_STATUS_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, mTaskStatus_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					ACS
     * To: 						MCS
     * Initiating condition:	ACS Operator-initiated
     * Expected response: 		Mcs_Ack_Msg
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Acs_TaskStatusUpdate_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Acs_TaskStatusUpdate_Msg)
        mcs.ExternalInterface.Acs_TaskStatusUpdate_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 3;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 4;</code>
       */
      public int getMTaskId() {
        return instance.getMTaskId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 4;</code>
       */
      public Builder setMTaskId(int value) {
        copyOnWrite();
        instance.setMTaskId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Task ID
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_task_id = 4;</code>
       */
      public Builder clearMTaskId() {
        copyOnWrite();
        instance.clearMTaskId();
        return this;
      }

      /**
       * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
       */
      public int getMTaskStatusValue() {
        return instance.getMTaskStatusValue();
      }
      /**
       * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
       */
      public Builder setMTaskStatusValue(int value) {
        copyOnWrite();
        instance.setMTaskStatusValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
       */
      public mcs.ExternalInterface.TaskStatus_Enum getMTaskStatus() {
        return instance.getMTaskStatus();
      }
      /**
       * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
       */
      public Builder setMTaskStatus(mcs.ExternalInterface.TaskStatus_Enum value) {
        copyOnWrite();
        instance.setMTaskStatus(value);
        return this;
      }
      /**
       * <code>optional .mcs.TaskStatus_Enum m_task_status = 5;</code>
       */
      public Builder clearMTaskStatus() {
        copyOnWrite();
        instance.clearMTaskStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Acs_TaskStatusUpdate_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg other = (mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mTaskId_ = visitor.visitInt(mTaskId_ != 0, mTaskId_,
              other.mTaskId_ != 0, other.mTaskId_);
          mTaskStatus_ = visitor.visitInt(mTaskStatus_ != 0, mTaskStatus_,    other.mTaskStatus_ != 0, other.mTaskStatus_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 32: {

                  mTaskId_ = input.readInt32();
                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();

                  mTaskStatus_ = rawValue;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Acs_TaskStatusUpdate_Msg)
    private static final mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Acs_TaskStatusUpdate_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Acs_TaskStatusUpdate_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Acs_TaskStatusUpdate_Msg> PARSER;

    public static com.google.protobuf.Parser<Acs_TaskStatusUpdate_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_AssetTelemetry_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_AssetTelemetry_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 2;</code>
     */
    int getMAssetId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset type.
     *                  1 = TRP2
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_type = 3;</code>
     */
    int getMAssetType();

    /**
     * <code>optional .mcs.Location_Struct m_location = 4;</code>
     */
    boolean hasMLocation();
    /**
     * <code>optional .mcs.Location_Struct m_location = 4;</code>
     */
    mcs.ExternalInterface.Location_Struct getMLocation();

    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    boolean hasMOrientation();
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    mcs.ExternalInterface.Orientation_Struct getMOrientation();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						External System
   * Initiating condition:	Every 1 second.
   * Expected response: 		N.A.
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_AssetTelemetry_Msg}
   */
  public  static final class Mcs_AssetTelemetry_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_AssetTelemetry_Msg, Mcs_AssetTelemetry_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_AssetTelemetry_Msg)
      Mcs_AssetTelemetry_MsgOrBuilder {
    private Mcs_AssetTelemetry_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_ASSET_ID_FIELD_NUMBER = 2;
    private int mAssetId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 2;</code>
     */
    public int getMAssetId() {
      return mAssetId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 2;</code>
     */
    private void setMAssetId(int value) {
      
      mAssetId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset ID.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_id = 2;</code>
     */
    private void clearMAssetId() {
      
      mAssetId_ = 0;
    }

    public static final int M_ASSET_TYPE_FIELD_NUMBER = 3;
    private int mAssetType_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset type.
     *                  1 = TRP2
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_type = 3;</code>
     */
    public int getMAssetType() {
      return mAssetType_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset type.
     *                  1 = TRP2
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_type = 3;</code>
     */
    private void setMAssetType(int value) {
      
      mAssetType_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Asset type.
     *                  1 = TRP2
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_asset_type = 3;</code>
     */
    private void clearMAssetType() {
      
      mAssetType_ = 0;
    }

    public static final int M_LOCATION_FIELD_NUMBER = 4;
    private mcs.ExternalInterface.Location_Struct mLocation_;
    /**
     * <code>optional .mcs.Location_Struct m_location = 4;</code>
     */
    public boolean hasMLocation() {
      return mLocation_ != null;
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 4;</code>
     */
    public mcs.ExternalInterface.Location_Struct getMLocation() {
      return mLocation_ == null ? mcs.ExternalInterface.Location_Struct.getDefaultInstance() : mLocation_;
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 4;</code>
     */
    private void setMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mLocation_ = value;
      
      }
    /**
     * <code>optional .mcs.Location_Struct m_location = 4;</code>
     */
    private void setMLocation(
        mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
      mLocation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 4;</code>
     */
    private void mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
      if (mLocation_ != null &&
          mLocation_ != mcs.ExternalInterface.Location_Struct.getDefaultInstance()) {
        mLocation_ =
          mcs.ExternalInterface.Location_Struct.newBuilder(mLocation_).mergeFrom(value).buildPartial();
      } else {
        mLocation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Location_Struct m_location = 4;</code>
     */
    private void clearMLocation() {  mLocation_ = null;
      
    }

    public static final int M_ORIENTATION_FIELD_NUMBER = 5;
    private mcs.ExternalInterface.Orientation_Struct mOrientation_;
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    public boolean hasMOrientation() {
      return mOrientation_ != null;
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    public mcs.ExternalInterface.Orientation_Struct getMOrientation() {
      return mOrientation_ == null ? mcs.ExternalInterface.Orientation_Struct.getDefaultInstance() : mOrientation_;
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void setMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mOrientation_ = value;
      
      }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void setMOrientation(
        mcs.ExternalInterface.Orientation_Struct.Builder builderForValue) {
      mOrientation_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void mergeMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
      if (mOrientation_ != null &&
          mOrientation_ != mcs.ExternalInterface.Orientation_Struct.getDefaultInstance()) {
        mOrientation_ =
          mcs.ExternalInterface.Orientation_Struct.newBuilder(mOrientation_).mergeFrom(value).buildPartial();
      } else {
        mOrientation_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
     */
    private void clearMOrientation() {  mOrientation_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mAssetId_ != 0) {
        output.writeInt32(2, mAssetId_);
      }
      if (mAssetType_ != 0) {
        output.writeInt32(3, mAssetType_);
      }
      if (mLocation_ != null) {
        output.writeMessage(4, getMLocation());
      }
      if (mOrientation_ != null) {
        output.writeMessage(5, getMOrientation());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mAssetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mAssetId_);
      }
      if (mAssetType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mAssetType_);
      }
      if (mLocation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMLocation());
      }
      if (mOrientation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMOrientation());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_AssetTelemetry_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						External System
     * Initiating condition:	Every 1 second.
     * Expected response: 		N.A.
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_AssetTelemetry_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_AssetTelemetry_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_AssetTelemetry_Msg)
        mcs.ExternalInterface.Mcs_AssetTelemetry_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_AssetTelemetry_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 2;</code>
       */
      public int getMAssetId() {
        return instance.getMAssetId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 2;</code>
       */
      public Builder setMAssetId(int value) {
        copyOnWrite();
        instance.setMAssetId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset ID.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_id = 2;</code>
       */
      public Builder clearMAssetId() {
        copyOnWrite();
        instance.clearMAssetId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset type.
       *                  1 = TRP2
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_type = 3;</code>
       */
      public int getMAssetType() {
        return instance.getMAssetType();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset type.
       *                  1 = TRP2
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_type = 3;</code>
       */
      public Builder setMAssetType(int value) {
        copyOnWrite();
        instance.setMAssetType(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Asset type.
       *                  1 = TRP2
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_asset_type = 3;</code>
       */
      public Builder clearMAssetType() {
        copyOnWrite();
        instance.clearMAssetType();
        return this;
      }

      /**
       * <code>optional .mcs.Location_Struct m_location = 4;</code>
       */
      public boolean hasMLocation() {
        return instance.hasMLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 4;</code>
       */
      public mcs.ExternalInterface.Location_Struct getMLocation() {
        return instance.getMLocation();
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 4;</code>
       */
      public Builder setMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.setMLocation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Location_Struct m_location = 4;</code>
       */
      public Builder setMLocation(
          mcs.ExternalInterface.Location_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMLocation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 4;</code>
       */
      public Builder mergeMLocation(mcs.ExternalInterface.Location_Struct value) {
        copyOnWrite();
        instance.mergeMLocation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Location_Struct m_location = 4;</code>
       */
      public Builder clearMLocation() {  copyOnWrite();
        instance.clearMLocation();
        return this;
      }

      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public boolean hasMOrientation() {
        return instance.hasMOrientation();
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public mcs.ExternalInterface.Orientation_Struct getMOrientation() {
        return instance.getMOrientation();
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder setMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
        copyOnWrite();
        instance.setMOrientation(value);
        return this;
        }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder setMOrientation(
          mcs.ExternalInterface.Orientation_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMOrientation(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder mergeMOrientation(mcs.ExternalInterface.Orientation_Struct value) {
        copyOnWrite();
        instance.mergeMOrientation(value);
        return this;
      }
      /**
       * <code>optional .mcs.Orientation_Struct m_orientation = 5;</code>
       */
      public Builder clearMOrientation() {  copyOnWrite();
        instance.clearMOrientation();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_AssetTelemetry_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_AssetTelemetry_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_AssetTelemetry_Msg other = (mcs.ExternalInterface.Mcs_AssetTelemetry_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mAssetId_ = visitor.visitInt(mAssetId_ != 0, mAssetId_,
              other.mAssetId_ != 0, other.mAssetId_);
          mAssetType_ = visitor.visitInt(mAssetType_ != 0, mAssetType_,
              other.mAssetType_ != 0, other.mAssetType_);
          mLocation_ = visitor.visitMessage(mLocation_, other.mLocation_);
          mOrientation_ = visitor.visitMessage(mOrientation_, other.mOrientation_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mAssetId_ = input.readInt32();
                  break;
                }
                case 24: {

                  mAssetType_ = input.readInt32();
                  break;
                }
                case 34: {
                  mcs.ExternalInterface.Location_Struct.Builder subBuilder = null;
                  if (mLocation_ != null) {
                    subBuilder = mLocation_.toBuilder();
                  }
                  mLocation_ = input.readMessage(mcs.ExternalInterface.Location_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mLocation_);
                    mLocation_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  mcs.ExternalInterface.Orientation_Struct.Builder subBuilder = null;
                  if (mOrientation_ != null) {
                    subBuilder = mOrientation_.toBuilder();
                  }
                  mOrientation_ = input.readMessage(mcs.ExternalInterface.Orientation_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mOrientation_);
                    mOrientation_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_AssetTelemetry_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_AssetTelemetry_Msg)
    private static final mcs.ExternalInterface.Mcs_AssetTelemetry_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_AssetTelemetry_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_AssetTelemetry_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_AssetTelemetry_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_AssetTelemetry_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Mcs_BattleReport_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Mcs_BattleReport_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    int getMReferenceId();

    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    boolean hasMReport();
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    mcs.ExternalInterface.BattleReport_Struct getMReport();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS
   * To: 						CS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		Cs_Ack_Msg
   * Remarks:					Optional images are sent separately.
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Mcs_BattleReport_Msg}
   */
  public  static final class Mcs_BattleReport_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Mcs_BattleReport_Msg, Mcs_BattleReport_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Mcs_BattleReport_Msg)
      Mcs_BattleReport_MsgOrBuilder {
    private Mcs_BattleReport_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REFERENCE_ID_FIELD_NUMBER = 2;
    private int mReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    public int getMReferenceId() {
      return mReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void setMReferenceId(int value) {
      
      mReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Used to identify the corresponding response message.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_reference_id = 2;</code>
     */
    private void clearMReferenceId() {
      
      mReferenceId_ = 0;
    }

    public static final int M_REPORT_FIELD_NUMBER = 3;
    private mcs.ExternalInterface.BattleReport_Struct mReport_;
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    public boolean hasMReport() {
      return mReport_ != null;
    }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    public mcs.ExternalInterface.BattleReport_Struct getMReport() {
      return mReport_ == null ? mcs.ExternalInterface.BattleReport_Struct.getDefaultInstance() : mReport_;
    }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    private void setMReport(mcs.ExternalInterface.BattleReport_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mReport_ = value;
      
      }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    private void setMReport(
        mcs.ExternalInterface.BattleReport_Struct.Builder builderForValue) {
      mReport_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    private void mergeMReport(mcs.ExternalInterface.BattleReport_Struct value) {
      if (mReport_ != null &&
          mReport_ != mcs.ExternalInterface.BattleReport_Struct.getDefaultInstance()) {
        mReport_ =
          mcs.ExternalInterface.BattleReport_Struct.newBuilder(mReport_).mergeFrom(value).buildPartial();
      } else {
        mReport_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
     */
    private void clearMReport() {  mReport_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        output.writeInt32(2, mReferenceId_);
      }
      if (mReport_ != null) {
        output.writeMessage(3, getMReport());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mReferenceId_);
      }
      if (mReport_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getMReport());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Mcs_BattleReport_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Mcs_BattleReport_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS
     * To: 						CS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		Cs_Ack_Msg
     * Remarks:					Optional images are sent separately.
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Mcs_BattleReport_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Mcs_BattleReport_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Mcs_BattleReport_Msg)
        mcs.ExternalInterface.Mcs_BattleReport_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Mcs_BattleReport_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public int getMReferenceId() {
        return instance.getMReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder setMReferenceId(int value) {
        copyOnWrite();
        instance.setMReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Used to identify the corresponding response message.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_reference_id = 2;</code>
       */
      public Builder clearMReferenceId() {
        copyOnWrite();
        instance.clearMReferenceId();
        return this;
      }

      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public boolean hasMReport() {
        return instance.hasMReport();
      }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public mcs.ExternalInterface.BattleReport_Struct getMReport() {
        return instance.getMReport();
      }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public Builder setMReport(mcs.ExternalInterface.BattleReport_Struct value) {
        copyOnWrite();
        instance.setMReport(value);
        return this;
        }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public Builder setMReport(
          mcs.ExternalInterface.BattleReport_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMReport(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public Builder mergeMReport(mcs.ExternalInterface.BattleReport_Struct value) {
        copyOnWrite();
        instance.mergeMReport(value);
        return this;
      }
      /**
       * <code>optional .mcs.BattleReport_Struct m_report = 3;</code>
       */
      public Builder clearMReport() {  copyOnWrite();
        instance.clearMReport();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Mcs_BattleReport_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Mcs_BattleReport_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Mcs_BattleReport_Msg other = (mcs.ExternalInterface.Mcs_BattleReport_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mReferenceId_ = visitor.visitInt(mReferenceId_ != 0, mReferenceId_,
              other.mReferenceId_ != 0, other.mReferenceId_);
          mReport_ = visitor.visitMessage(mReport_, other.mReport_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {

                  mReferenceId_ = input.readInt32();
                  break;
                }
                case 26: {
                  mcs.ExternalInterface.BattleReport_Struct.Builder subBuilder = null;
                  if (mReport_ != null) {
                    subBuilder = mReport_.toBuilder();
                  }
                  mReport_ = input.readMessage(mcs.ExternalInterface.BattleReport_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mReport_);
                    mReport_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Mcs_BattleReport_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Mcs_BattleReport_Msg)
    private static final mcs.ExternalInterface.Mcs_BattleReport_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Mcs_BattleReport_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Mcs_BattleReport_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Mcs_BattleReport_Msg> PARSER;

    public static com.google.protobuf.Parser<Mcs_BattleReport_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Sys_Image_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Sys_Image_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <code>optional .mcs.Image_Struct m_image = 2;</code>
     */
    boolean hasMImage();
    /**
     * <code>optional .mcs.Image_Struct m_image = 2;</code>
     */
    mcs.ExternalInterface.Image_Struct getMImage();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS/ACS
   * To: 						ACS/MCS
   * Initiating condition:	MCS Operator-initiated
   * Expected response: 		N.A.
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Sys_Image_Msg}
   */
  public  static final class Sys_Image_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Sys_Image_Msg, Sys_Image_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Sys_Image_Msg)
      Sys_Image_MsgOrBuilder {
    private Sys_Image_Msg() {
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_IMAGE_FIELD_NUMBER = 2;
    private mcs.ExternalInterface.Image_Struct mImage_;
    /**
     * <code>optional .mcs.Image_Struct m_image = 2;</code>
     */
    public boolean hasMImage() {
      return mImage_ != null;
    }
    /**
     * <code>optional .mcs.Image_Struct m_image = 2;</code>
     */
    public mcs.ExternalInterface.Image_Struct getMImage() {
      return mImage_ == null ? mcs.ExternalInterface.Image_Struct.getDefaultInstance() : mImage_;
    }
    /**
     * <code>optional .mcs.Image_Struct m_image = 2;</code>
     */
    private void setMImage(mcs.ExternalInterface.Image_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mImage_ = value;
      
      }
    /**
     * <code>optional .mcs.Image_Struct m_image = 2;</code>
     */
    private void setMImage(
        mcs.ExternalInterface.Image_Struct.Builder builderForValue) {
      mImage_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.Image_Struct m_image = 2;</code>
     */
    private void mergeMImage(mcs.ExternalInterface.Image_Struct value) {
      if (mImage_ != null &&
          mImage_ != mcs.ExternalInterface.Image_Struct.getDefaultInstance()) {
        mImage_ =
          mcs.ExternalInterface.Image_Struct.newBuilder(mImage_).mergeFrom(value).buildPartial();
      } else {
        mImage_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.Image_Struct m_image = 2;</code>
     */
    private void clearMImage() {  mImage_ = null;
      
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mImage_ != null) {
        output.writeMessage(2, getMImage());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mImage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMImage());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Sys_Image_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Sys_Image_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Sys_Image_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS/ACS
     * To: 						ACS/MCS
     * Initiating condition:	MCS Operator-initiated
     * Expected response: 		N.A.
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Sys_Image_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Sys_Image_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Sys_Image_Msg)
        mcs.ExternalInterface.Sys_Image_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Sys_Image_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <code>optional .mcs.Image_Struct m_image = 2;</code>
       */
      public boolean hasMImage() {
        return instance.hasMImage();
      }
      /**
       * <code>optional .mcs.Image_Struct m_image = 2;</code>
       */
      public mcs.ExternalInterface.Image_Struct getMImage() {
        return instance.getMImage();
      }
      /**
       * <code>optional .mcs.Image_Struct m_image = 2;</code>
       */
      public Builder setMImage(mcs.ExternalInterface.Image_Struct value) {
        copyOnWrite();
        instance.setMImage(value);
        return this;
        }
      /**
       * <code>optional .mcs.Image_Struct m_image = 2;</code>
       */
      public Builder setMImage(
          mcs.ExternalInterface.Image_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMImage(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.Image_Struct m_image = 2;</code>
       */
      public Builder mergeMImage(mcs.ExternalInterface.Image_Struct value) {
        copyOnWrite();
        instance.mergeMImage(value);
        return this;
      }
      /**
       * <code>optional .mcs.Image_Struct m_image = 2;</code>
       */
      public Builder clearMImage() {  copyOnWrite();
        instance.clearMImage();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Sys_Image_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Sys_Image_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Sys_Image_Msg other = (mcs.ExternalInterface.Sys_Image_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mImage_ = visitor.visitMessage(mImage_, other.mImage_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  mcs.ExternalInterface.Image_Struct.Builder subBuilder = null;
                  if (mImage_ != null) {
                    subBuilder = mImage_.toBuilder();
                  }
                  mImage_ = input.readMessage(mcs.ExternalInterface.Image_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mImage_);
                    mImage_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Sys_Image_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Sys_Image_Msg)
    private static final mcs.ExternalInterface.Sys_Image_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Sys_Image_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Sys_Image_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Sys_Image_Msg> PARSER;

    public static com.google.protobuf.Parser<Sys_Image_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface Sys_Ack_MsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:mcs.Sys_Ack_Msg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    boolean hasMMsgHeader();
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Unique ID of the message type that this msg is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
     */
    int getMRequestMsgTypeIdValue();
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Unique ID of the message type that this msg is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
     */
    mcs.ExternalInterface.MsgTypeId_Enum getMRequestMsgTypeId();

    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Identifies the message that this message is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_request_reference_id = 3;</code>
     */
    int getMRequestReferenceId();

    /**
     * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
     */
    int getMAckTypeValue();
    /**
     * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
     */
    mcs.ExternalInterface.AckType_Enum getMAckType();

    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Text description.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_description = 5;</code>
     */
    java.lang.String getMDescription();
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Text description.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_description = 5;</code>
     */
    com.google.protobuf.ByteString
        getMDescriptionBytes();
  }
  /**
   * <pre>
   ******************************************************************************************************************
   * From: 					MCS/ACS
   * To: 						ACS/MCS
   * Initiating condition:	Response to
   *                          - Mcs_ConnectAcsCommand_Msg,
   *                          - Mcs_AddProhibitedZone_Msg, 
   *                          - Mcs_RemoveProhibitedZone_Msg,
   *                          - Mcs_AddRedForce_Msg, 
   *                          - Mcs_RemoveRedForce_Msg,
   *                          - Mcs_TaskSummary_Msg,
   *                          - Mcs_ExecuteTaskCommand_Msg,
   *                          - Mcs_AbortTaskCommand_Msg,
   *                          - Acs_ConnectAssetCommand_Msg,
   *							- Acs_AssetAlert_Msg,
   *                          - Acs_AssetMovementUpdate_Msg,
   *                          - Acs_BattleReport_Msg,
   *                          - Acs_TaskStatusUpdate_Msg,
   * Expected response: 		N.A.
   * Remarks:					
   ******************************************************************************************************************
   * </pre>
   *
   * Protobuf type {@code mcs.Sys_Ack_Msg}
   */
  public  static final class Sys_Ack_Msg extends
      com.google.protobuf.GeneratedMessageLite<
          Sys_Ack_Msg, Sys_Ack_Msg.Builder> implements
      // @@protoc_insertion_point(message_implements:mcs.Sys_Ack_Msg)
      Sys_Ack_MsgOrBuilder {
    private Sys_Ack_Msg() {
      mDescription_ = "";
    }
    public static final int M_MSG_HEADER_FIELD_NUMBER = 1;
    private mcs.ExternalInterface.MsgHeader_Struct mMsgHeader_;
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public boolean hasMMsgHeader() {
      return mMsgHeader_ != null;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
      return mMsgHeader_ == null ? mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance() : mMsgHeader_;
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (value == null) {
        throw new NullPointerException();
      }
      mMsgHeader_ = value;
      
      }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void setMMsgHeader(
        mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
      mMsgHeader_ = builderForValue.build();
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
      if (mMsgHeader_ != null &&
          mMsgHeader_ != mcs.ExternalInterface.MsgHeader_Struct.getDefaultInstance()) {
        mMsgHeader_ =
          mcs.ExternalInterface.MsgHeader_Struct.newBuilder(mMsgHeader_).mergeFrom(value).buildPartial();
      } else {
        mMsgHeader_ = value;
      }
      
    }
    /**
     * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
     */
    private void clearMMsgHeader() {  mMsgHeader_ = null;
      
    }

    public static final int M_REQUEST_MSG_TYPE_ID_FIELD_NUMBER = 2;
    private int mRequestMsgTypeId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Unique ID of the message type that this msg is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
     */
    public int getMRequestMsgTypeIdValue() {
      return mRequestMsgTypeId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Unique ID of the message type that this msg is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
     */
    public mcs.ExternalInterface.MsgTypeId_Enum getMRequestMsgTypeId() {
      mcs.ExternalInterface.MsgTypeId_Enum result = mcs.ExternalInterface.MsgTypeId_Enum.forNumber(mRequestMsgTypeId_);
      return result == null ? mcs.ExternalInterface.MsgTypeId_Enum.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Unique ID of the message type that this msg is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
     */
    private void setMRequestMsgTypeIdValue(int value) {
        mRequestMsgTypeId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Unique ID of the message type that this msg is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
     */
    private void setMRequestMsgTypeId(mcs.ExternalInterface.MsgTypeId_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mRequestMsgTypeId_ = value.getNumber();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Unique ID of the message type that this msg is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
     */
    private void clearMRequestMsgTypeId() {
      
      mRequestMsgTypeId_ = 0;
    }

    public static final int M_REQUEST_REFERENCE_ID_FIELD_NUMBER = 3;
    private int mRequestReferenceId_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Identifies the message that this message is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_request_reference_id = 3;</code>
     */
    public int getMRequestReferenceId() {
      return mRequestReferenceId_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Identifies the message that this message is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_request_reference_id = 3;</code>
     */
    private void setMRequestReferenceId(int value) {
      
      mRequestReferenceId_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Unit of measure: -
     * Min val:         0
     * Max val:         (2^31) - 1
     * Remarks:         Identifies the message that this message is responding to.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional int32 m_request_reference_id = 3;</code>
     */
    private void clearMRequestReferenceId() {
      
      mRequestReferenceId_ = 0;
    }

    public static final int M_ACK_TYPE_FIELD_NUMBER = 4;
    private int mAckType_;
    /**
     * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
     */
    public int getMAckTypeValue() {
      return mAckType_;
    }
    /**
     * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
     */
    public mcs.ExternalInterface.AckType_Enum getMAckType() {
      mcs.ExternalInterface.AckType_Enum result = mcs.ExternalInterface.AckType_Enum.forNumber(mAckType_);
      return result == null ? mcs.ExternalInterface.AckType_Enum.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
     */
    private void setMAckTypeValue(int value) {
        mAckType_ = value;
    }
    /**
     * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
     */
    private void setMAckType(mcs.ExternalInterface.AckType_Enum value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mAckType_ = value.getNumber();
    }
    /**
     * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
     */
    private void clearMAckType() {
      
      mAckType_ = 0;
    }

    public static final int M_DESCRIPTION_FIELD_NUMBER = 5;
    private java.lang.String mDescription_;
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Text description.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_description = 5;</code>
     */
    public java.lang.String getMDescription() {
      return mDescription_;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Text description.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_description = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMDescriptionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(mDescription_);
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Text description.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_description = 5;</code>
     */
    private void setMDescription(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      mDescription_ = value;
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Text description.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_description = 5;</code>
     */
    private void clearMDescription() {
      
      mDescription_ = getDefaultInstance().getMDescription();
    }
    /**
     * <pre>
     ******************************************************************************************************************
     * Remarks:         Text description.
     ******************************************************************************************************************
     * </pre>
     *
     * <code>optional string m_description = 5;</code>
     */
    private void setMDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      mDescription_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mMsgHeader_ != null) {
        output.writeMessage(1, getMMsgHeader());
      }
      if (mRequestMsgTypeId_ != mcs.ExternalInterface.MsgTypeId_Enum.MSG_TYPE_ID_NOT_IN_USE.getNumber()) {
        output.writeEnum(2, mRequestMsgTypeId_);
      }
      if (mRequestReferenceId_ != 0) {
        output.writeInt32(3, mRequestReferenceId_);
      }
      if (mAckType_ != mcs.ExternalInterface.AckType_Enum.ACK_TYPE_NOT_IN_USE.getNumber()) {
        output.writeEnum(4, mAckType_);
      }
      if (!mDescription_.isEmpty()) {
        output.writeString(5, getMDescription());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (mMsgHeader_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMMsgHeader());
      }
      if (mRequestMsgTypeId_ != mcs.ExternalInterface.MsgTypeId_Enum.MSG_TYPE_ID_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mRequestMsgTypeId_);
      }
      if (mRequestReferenceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, mRequestReferenceId_);
      }
      if (mAckType_ != mcs.ExternalInterface.AckType_Enum.ACK_TYPE_NOT_IN_USE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mAckType_);
      }
      if (!mDescription_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getMDescription());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static mcs.ExternalInterface.Sys_Ack_Msg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static mcs.ExternalInterface.Sys_Ack_Msg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(mcs.ExternalInterface.Sys_Ack_Msg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     ******************************************************************************************************************
     * From: 					MCS/ACS
     * To: 						ACS/MCS
     * Initiating condition:	Response to
     *                          - Mcs_ConnectAcsCommand_Msg,
     *                          - Mcs_AddProhibitedZone_Msg, 
     *                          - Mcs_RemoveProhibitedZone_Msg,
     *                          - Mcs_AddRedForce_Msg, 
     *                          - Mcs_RemoveRedForce_Msg,
     *                          - Mcs_TaskSummary_Msg,
     *                          - Mcs_ExecuteTaskCommand_Msg,
     *                          - Mcs_AbortTaskCommand_Msg,
     *                          - Acs_ConnectAssetCommand_Msg,
     *							- Acs_AssetAlert_Msg,
     *                          - Acs_AssetMovementUpdate_Msg,
     *                          - Acs_BattleReport_Msg,
     *                          - Acs_TaskStatusUpdate_Msg,
     * Expected response: 		N.A.
     * Remarks:					
     ******************************************************************************************************************
     * </pre>
     *
     * Protobuf type {@code mcs.Sys_Ack_Msg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          mcs.ExternalInterface.Sys_Ack_Msg, Builder> implements
        // @@protoc_insertion_point(builder_implements:mcs.Sys_Ack_Msg)
        mcs.ExternalInterface.Sys_Ack_MsgOrBuilder {
      // Construct using mcs.ExternalInterface.Sys_Ack_Msg.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public boolean hasMMsgHeader() {
        return instance.hasMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public mcs.ExternalInterface.MsgHeader_Struct getMMsgHeader() {
        return instance.getMMsgHeader();
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.setMMsgHeader(value);
        return this;
        }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder setMMsgHeader(
          mcs.ExternalInterface.MsgHeader_Struct.Builder builderForValue) {
        copyOnWrite();
        instance.setMMsgHeader(builderForValue);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder mergeMMsgHeader(mcs.ExternalInterface.MsgHeader_Struct value) {
        copyOnWrite();
        instance.mergeMMsgHeader(value);
        return this;
      }
      /**
       * <code>optional .mcs.MsgHeader_Struct m_msg_header = 1;</code>
       */
      public Builder clearMMsgHeader() {  copyOnWrite();
        instance.clearMMsgHeader();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Unique ID of the message type that this msg is responding to.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
       */
      public int getMRequestMsgTypeIdValue() {
        return instance.getMRequestMsgTypeIdValue();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Unique ID of the message type that this msg is responding to.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
       */
      public Builder setMRequestMsgTypeIdValue(int value) {
        copyOnWrite();
        instance.setMRequestMsgTypeIdValue(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Unique ID of the message type that this msg is responding to.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
       */
      public mcs.ExternalInterface.MsgTypeId_Enum getMRequestMsgTypeId() {
        return instance.getMRequestMsgTypeId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Unique ID of the message type that this msg is responding to.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
       */
      public Builder setMRequestMsgTypeId(mcs.ExternalInterface.MsgTypeId_Enum value) {
        copyOnWrite();
        instance.setMRequestMsgTypeId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Unique ID of the message type that this msg is responding to.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional .mcs.MsgTypeId_Enum m_request_msg_type_id = 2;</code>
       */
      public Builder clearMRequestMsgTypeId() {
        copyOnWrite();
        instance.clearMRequestMsgTypeId();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Identifies the message that this message is responding to.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_request_reference_id = 3;</code>
       */
      public int getMRequestReferenceId() {
        return instance.getMRequestReferenceId();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Identifies the message that this message is responding to.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_request_reference_id = 3;</code>
       */
      public Builder setMRequestReferenceId(int value) {
        copyOnWrite();
        instance.setMRequestReferenceId(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Unit of measure: -
       * Min val:         0
       * Max val:         (2^31) - 1
       * Remarks:         Identifies the message that this message is responding to.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional int32 m_request_reference_id = 3;</code>
       */
      public Builder clearMRequestReferenceId() {
        copyOnWrite();
        instance.clearMRequestReferenceId();
        return this;
      }

      /**
       * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
       */
      public int getMAckTypeValue() {
        return instance.getMAckTypeValue();
      }
      /**
       * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
       */
      public Builder setMAckTypeValue(int value) {
        copyOnWrite();
        instance.setMAckTypeValue(value);
        return this;
      }
      /**
       * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
       */
      public mcs.ExternalInterface.AckType_Enum getMAckType() {
        return instance.getMAckType();
      }
      /**
       * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
       */
      public Builder setMAckType(mcs.ExternalInterface.AckType_Enum value) {
        copyOnWrite();
        instance.setMAckType(value);
        return this;
      }
      /**
       * <code>optional .mcs.AckType_Enum m_ack_type = 4;</code>
       */
      public Builder clearMAckType() {
        copyOnWrite();
        instance.clearMAckType();
        return this;
      }

      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Text description.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_description = 5;</code>
       */
      public java.lang.String getMDescription() {
        return instance.getMDescription();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Text description.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_description = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMDescriptionBytes() {
        return instance.getMDescriptionBytes();
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Text description.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_description = 5;</code>
       */
      public Builder setMDescription(
          java.lang.String value) {
        copyOnWrite();
        instance.setMDescription(value);
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Text description.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_description = 5;</code>
       */
      public Builder clearMDescription() {
        copyOnWrite();
        instance.clearMDescription();
        return this;
      }
      /**
       * <pre>
       ******************************************************************************************************************
       * Remarks:         Text description.
       ******************************************************************************************************************
       * </pre>
       *
       * <code>optional string m_description = 5;</code>
       */
      public Builder setMDescriptionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMDescriptionBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:mcs.Sys_Ack_Msg)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new mcs.ExternalInterface.Sys_Ack_Msg();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          mcs.ExternalInterface.Sys_Ack_Msg other = (mcs.ExternalInterface.Sys_Ack_Msg) arg1;
          mMsgHeader_ = visitor.visitMessage(mMsgHeader_, other.mMsgHeader_);
          mRequestMsgTypeId_ = visitor.visitInt(mRequestMsgTypeId_ != 0, mRequestMsgTypeId_,    other.mRequestMsgTypeId_ != 0, other.mRequestMsgTypeId_);
          mRequestReferenceId_ = visitor.visitInt(mRequestReferenceId_ != 0, mRequestReferenceId_,
              other.mRequestReferenceId_ != 0, other.mRequestReferenceId_);
          mAckType_ = visitor.visitInt(mAckType_ != 0, mAckType_,    other.mAckType_ != 0, other.mAckType_);
          mDescription_ = visitor.visitString(!mDescription_.isEmpty(), mDescription_,
              !other.mDescription_.isEmpty(), other.mDescription_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  mcs.ExternalInterface.MsgHeader_Struct.Builder subBuilder = null;
                  if (mMsgHeader_ != null) {
                    subBuilder = mMsgHeader_.toBuilder();
                  }
                  mMsgHeader_ = input.readMessage(mcs.ExternalInterface.MsgHeader_Struct.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(mMsgHeader_);
                    mMsgHeader_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 16: {
                  int rawValue = input.readEnum();

                  mRequestMsgTypeId_ = rawValue;
                  break;
                }
                case 24: {

                  mRequestReferenceId_ = input.readInt32();
                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  mAckType_ = rawValue;
                  break;
                }
                case 42: {
                  String s = input.readStringRequireUtf8();

                  mDescription_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (mcs.ExternalInterface.Sys_Ack_Msg.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:mcs.Sys_Ack_Msg)
    private static final mcs.ExternalInterface.Sys_Ack_Msg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Sys_Ack_Msg();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static mcs.ExternalInterface.Sys_Ack_Msg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Sys_Ack_Msg> PARSER;

    public static com.google.protobuf.Parser<Sys_Ack_Msg> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
